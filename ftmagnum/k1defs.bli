SWITCHES NOLIST;
UNDECLARE $$$$$;

%!      THIS IS THE MAGNUM UNIVERSAL FILE K1DEFS.BLI
        CONTAINING THE EXTERNAL DECLARATIONS FOR
        ROUTINES AND GLOBAL VARIABLES.  SEE ALSO
        K2DEFS.BLI FOR GENERAL BINDS, MACROS, AND
        STRUCTURES.  THE FILE K3DEFS.BLI CONTAINS
        BINDS, MACROS, AND STRUCTURES FOR THE SKIM
        ROUTINES.
%

EXTERNAL
 KCOMR$,     % GLOBAL VARIABLE USED BY SORT OVERLAY %
 KCUSR$,     % GLOBAL VARIABLE - ADDRESS OF $KCUSR %
 KDATE$,     % GLOBAL VARIABLE - # OF DAYS SINCE JAN. 1,1964 GMT %
 KFC$,       % GLOBAL VARIABLE USED BY SORT OVERLAY %
 KFCB2$,     % GLOBAL VARIABLE USED BY SORT OVERLAY %
 KFCBC$,     % GLOBAL VARIABLE - HEAD OF FCB CHAIN %
 KITN$,      % GLOBAL VARIABLE - INTERNAL TRANSACTION # %
 KLCK2$,     % POINTER TO SECOND LOCK FILE %
 KLFC2$,     % FCB FOR SECOND LOCK FILE %
 KLCLC$,     % LOCAL LOCK ENTRY FOR NESTED PROCEDURE CALLS %
 KLFCB$,     % POINTER TO FCB FOR LOCK FILE %
 KLOCK$,     % POINTER TO LOCK PAGE %
 KLOCR$,     % GLOBAL VARIABLE - MAX SIZE OF LOW CORE (QUOTA) %
 KLPGN$,     % NUMBER OF LOCK PAGES KNOWN BY CURRENT JOB %
 KLPN2$,     % NUMBER OF 2ND LOCK PAGES KNOWN BY CURRENT JOB %
 KLUB$,      % GLOBAL VARIABLE - VIRTUAL PAGE FOR CLUB MEMBERSHIP %
 KLUB2$,      % GLOBAL VARIABLE - VIRTUAL PAGE FOR 2ND CLUB MEMBERSHIP %
 KMISS$,     % GLOBAL VARIABLE - # OF RANDOM READ PAGE FAULTS %
 kofcb$,	% pointer to open file routine that is usually $kofcb %
 KPAR$,      % GLOBAL VARIABLE USED BY SORT OVERLAY %
 KRCLB$,     % RECOVERY LOG CLUB %
 KRFCB$,     % RECOVERY LOG FCB %
 KRLC2$,    % CURRENT JOB'S READ LOCK BYTE POINTER IN 2ND CLUB %
 KRLOG$,     % RECOVERY LOG PAGE %
 KRLPC$,     % BYTE POINTER TO READ LOCK BIT FOR CURRENT JOB %
 KRPOS$,     % POSITION OF CURRENT JOB IN RECOVERY FILE %
 KSLT2$,     % POSITION IN 2ND CLUB OF CURRENT JOB %
 KSLOT$,     % GLOBAL VARIABLE - POSITION IN CLUB OF CURRENT JOB %
 KST$,       % GLOBAL VARIABLE USED BY SORT OVERLAY %
 KTBUF$,     % ADDR OF TEMPORARY BUFFER USED BY INSERT & DELETE %
 KTBSZ$,     % SIZE OF KTBUF$ IN PAGES %
 KTMFN$,     % GLOBAL VARIABLE HOLDING NEXT RUNTIME TEMP FILE NAME %
 KXTRA$,     % GLOBAL VARIABLE - EXTRA SKIM BUFFERS ALLOCATED %
 $KACWR,     % SKIM ACTUAL WRITE ROUTINE %
 $KADAL,     % SKIM DELETE ALL THRU AUDIT %
 $KADLT,     % SKIM DELETION THRU AUDIT %
 $KADJST,    % ADJUST TRU CHARGE %
 $KAFCB,     % ALLOCATE AND OPEN A FCB FROM A FIDT %
 $KAINS,     % SKIM INSERTION THRU AUDIT %
 $KALBF,     % SKIM ALLOCATE BUFFERS ROUTINE %
 $KALCL,        
 $KALOC,     % ALLOCATE PAGE(S) ROUTINE %
 $KALPL,     % ADD NEW ENTRY TO PAGE LOCK LIST %
 $KALPT,     % ADD NEW ENTRY INTO PAGE LOCK TABLE %
 $KAMRG,     % MERGE AUDIT INTO RELATION %
 $KAOPEN,    % INITIALIZE FCB FOR AUDIT %
 $KARDK,     % SKIM READ BY KEY THRU AUDIT %
 $KARSQ,     % SKIM READ SEQUENTIAL THRU AUDIT %
 $KASTK,     % SKIM SET KEY THRU AUDIT %
 $KAUDEL,    % RELEASE PAGES USED BY AUDIT %
 $KAUPD,     % SKIM REWRITE THRU AUDIT %
 $KBDIR,     % BUILD INDEXED RELATION ROUTINE %
 $KBHAD,     % ADD ENTRY TO BUFFER HASH TABLE %
 $KBHDL,     % DELETE ENTRY FROM BUFFER HASH TABLE %
 $KBINT,     % INITIALIZE BUFFERS FOR A NEW FILE %
 $KBISB,     % TO SET UP SB ENTRIES FOR INDEXED RELATIONS %
 $KBLDI,     % SKIM INDEX BUILD ROUTINE %
 $KBMRG,     % MERGE BATCH UPDATE FILE INTO RELATION %
 $KBSIZ,     % CALCULATES PROPER BLOCK SIZE FOR SKIM FILES %
 $KBSZO,     % Calculates Skim file block size using original magic formula %
 $KBTIN,     % Buffer table init %
 $KBTPU,     % Buffer table purge %
 $KCANT,     % CANCEL TRANSACTION ROUTINE %
 $KCDAT,     % SET CDATE IN FIDT %
 $KCFIL,     % CLOSE FILE ROUTINE - CALLED BY $CAUDME AND $KCUSR %
 $KCHKPT,    % CHECK POINT ROUTINE %
 $KCLSQ,     % BUFFER CLOSE ROUTINE %
 $KCMEM,     % CHECK CLUB MEMBERS %
 $KCMPC,     % COMPUTE READ LOCK COUNT ROUTINE %
 $KCMSL,     % RELEASE LOCK IF CURRENT JOB IS HOLDING MASTER LOCK %
 $KCNT,      % SKIM COUNT THE INSTANCES ROUTINE %
 $KCONV,     % CONVERT FROM NEW TO OLD MAGNUM FORMAT %
 $KCP,       % READ CURSOR POSITION %
 $KCPGL,     % CONVERT PAGE LOCK ROUTINE %
 $KCPLF,     % CONVERT PAGE LOCK ROUTINE %
 $KCPOF,     % CONDITIONAL UNLOCK PAGE %
 $KCPON,     % CONDITIONAL LOCK PAGE %
 $KCPX,      % READ FDX CURSOR POSITION %
 $KCRVM,     % CREATE AND MAP OF VIRTUAL PAGE %
 $KCTRN,     % CANCEL TRANSACTION ROUTINE %
 $KCUSR,     % CHECK DETACHED USER FOR RECOVERY LOG %
 $KDAIR,     % DELETE ALL INSTANCES FROM AN IDEXED RELATION %
 $KDALL,     % SKIM DELETE ALL %
 $KDATE,     % OBTAIN # OF DAYS SINCE 1/1/64 GMT %
 $KDBUF,
 $KDEQUE,    % WAKES UP JOBS ON QUEUE WHEN RELEASING LOCK %
 $KDFID,     % DELETES A FILE GIVEN ITS FID %
 $KDLFPG,    % DELETE FILE PAGE %
 $KDLIR,     % DELETE AN INSTANCE FROM AN INDEXED RELATION %
 $KDLPL,     % DELETE ENTRY FROM PAGE LOCK LIST %
 $KDFSF,     % DELETE FILE, SAVE THE FCB ( & FIDT )  %
 $KDLPT,     % DELETE ENTRY FROM PAGE LOCK TABLE %
 $KDLTE,     % SKIM DELETION %
 $KDPLT,     % DUMP LOCK TABLE ROUTINE %
 $KECHO,     % TURN ECHO ON OR OFF %
 $KEDIT,     % Skim file "editor" %
 $KENTR,     % DO AN ENTER FOR A SKIM FILE %
 $KERROR,    % ERROR PROCESSING ROUTINE %
 $KEXFPG,    % EXCHANGE FILE PAGES %
 $KEXRD,     % EXCHANGE RD PAGES %
 $KEYCM,     % KEY COMPARASION ROUTINE %
 $KFAMRG,    % "FAST" MERGE OF AUDIT INTO RELATION %
 $KFCBD,     % DUMP FCB PRINTOUT TO TERMINAL %
 $KFCRE,     % DOES FCREAT UUO %
 $KFDSC,     % FILL DSC ROUTINE %
 $KFFCB,     % FILL FCB ROUTINE %
 $KFINT,     % SKIM FILE INITIALIZATION %
 $KFLPT,     % FIND ENTRY IN PAGE LOCK TABLE %
 $KFLSH,     % FLUSH BUFFERS %
 $KFLXW,     % WRITE BYTE IN FILEX FORMAT %
 $KFMAP,     % MAP MORE THAN 1 PAGE %
 $KFPGL,     % FIND PAGE IN PAGE LOCK TABLE BY FCB %
 $KFRAFCB,   % CLOSE FILE AND FREE FCBS FOR SPECIFIED AREA NUMBER %
 $KFRNFCB,   % CLOSE FILE AND FREE FCBS NOT IN SPECIFIED AREA %
 $KFSOB,     % FILL SOB ROUTINE %
 $KFXMP,     % FIX LOCK MAP ROUTINE %
 $KGBFX,     % GET BUFFER (RANDOM OPERATION) %
 $KGBUF,     % GET EMPTY BUFFER %
 $KGETP,     % SKIM GET EMPTY FILE PAGE %
 $KGLED,     % GET LINE WITH EDIT FROM TERMINAL %
 $KGLPG,     % GET A NEW LOCK PAGE %
 $KGMSG,     % GET MESSAGE FROM MESSAGE FILE %
 $KGMSL,     % GET MASTER LOCK %
 $KGPGL,     % GET PAGE LOCK %
 $KGPLF,     % GET PAGE LOCK WITH FILENAME %
 $KGPPN,     % LOOK UP A USERNAME TO CHECK ITS EXISTENCE %
 $KGTLN,     % GET A LINE FROM THE TERMINAL, NO EDIT %
 $KGTMP,     % GET MULTIPLE PAGE SET %
 $KIBUF,     % INITIALIZE BUFFERS %
 $KILIO,     % ILLEGAL IO OPERATION ABORT %
 $KINIT,     % SORT MODE INITIALIZATION ROUTINE %
 $KINSR,     % SKIM INSERTION %
 $KIOAB,     % IO ABORT ROUTINE %
 $KISIR,     % INDEXED RELATION INSERT ROUTINE %
 $KITIR,     % INDEXED RELATION INITIALIZE ROUTINE %
 $KJMER,     % SKIM MERGE JOURNAL FILE ROUTINE %
 $KLEAN,     % CLEAN BUFFERS (WRITE DIRTY PAGES) %
 $KLEAR,     % SKIM CLEAR DUPLICATES FROM POST-SORT FILE ROUTINE %
 $KLINT,     % LOCK INITIALIZATION %
 $KLKUP,     % LOOK UP A FILE FOR KV$INPUT TO CHECK ITS EXISTANCE %
 $KLNSE,     % TURN OFF DIRTY BIT ON DB %
 $KLOGF,     % CHECK IF RECOV. LOG INHIBITED %
 $KLOGS,     % Set RECOV. LOG log flag %
 $KLOSD,     % CLOSE WITH DELETE %
 $KLOSE,     % CLOSE A FCB %
 $KLOSN,     % CLOSE AN FCB, BUT DO NOT FREE FCB AND FIDT %
 $KLPUR,     % LOCK PURGE %
 $KLRLS,
 $KLSFC,
 $KLSFD,     % LSHIFT FIELD ROUTINE %
 $KLSHF,     % LSHIFT KEY ROUTINE %
 $KLSVR,     % VIRTUAL CLOSE WITH DELETE %
 $KMBUF,     % RELEASE BUFFER WITHOUT REMOVING VIRTUAL PAGE %
 $KMFOP,     % OPEN MESSAGE FILE %
 $KNFRE,     % RETURNS NUMBER OF FREE BUFFERS %
 $KNOFL,     % BAD FCB DIAGNOSTIC ROUTINE %
 $KNXDB,     % NEXT DB ROUTINE %
 $KOFCB,     % OPEN FCB FROM FIDT %
 $KOFCN,     % OPEN FILE WITH CONCURRENCY %
 $KOFIL,     % OPEN FILE- CALLED BY $CAUDME AND $KCUSR %
 $KOPFL,     % FATAL ERROR ON FILE OPEN %
 $KOPY,      % KOPY FILE %
 $KOREL,     % SEARCH ASF FOR MATCH RELATION NUMBER AND OPEN RELATION %
 $KPHYR,     % PHYSICAL READ %
 $KPHYW,     % PHYSICAL WRITE %
 $KPNIC,     % PANIC TO EXCEPTION ROUTINE FOR ERROR OR EOF %
 $KPRFN,     % PRINTS THE FILE NAME FOR A FIDT TO UOUT %
 $KPROF,     % UNLOCK PAGE %
 $KPRON,     % LOCK PAGE INTO CORE %
 $KRALO,     % ALLOCATE RECOV. LOG ENTRY SPACE %
 $KRBUF,     % RELEASE BUFFER %
 $KRBYTE,    % READ A BYTE %
 $KRCHK,     % Relation consistency check routine %
 $KRCPG,     % CREATE RECOVERY FILE PAGE %
 $KRCST,     % Get or set RECOVERY.LOG state %
 $KRCVR,     % SKIM RECOVER AFTER ABNORMAL CLOSE ROUTINE %
 $KRDBL,     % READ SEQUENTIAL BLOCK %
 $KRDENTR,   % Read data entry ... FILEX files %
 $KRDKY,     % SKIM READ BY KEY %
 $KRDLN,     % READ LINE %
 $KRELL,     % RELEASE ALL LOCKS THAT BELONG TO THE CURRENT INCARNATION %
 $KRELP,     % SKIM RELEASE FILE PAGE %
 $KRENM,     % RENAMES A FILE GIVE ITS FCB AND NEW FIDT %
 $KRGCL,     % GET INTERLOCK FOR RECOVERY FILE %
 $KRIBF,     % INITIALISE BUFFERS FOR RECOVERY LOG %
 $KRIBP,     % SKIM RIB BLOCK LIMIT RESOLVER ROUTINE %
 $KRIBW,     % RIB WRITE ROUTINE %
 $KRINIT,    % Initialize existing RECOLOG File %
 $KRINT,     % RECOVERY LOG INITIALIZATION ROUTINE %
 $KRLIS,     % RECOVERY LOG INSERT ROUTINE %
 $KRLOB,     % RELEASE OBSOLETE PAGE BUFFERS %
 $KRLSE,     % RELEASE TO SORT ROUTINE %
 $KRMOV,     % UNMAP PAGE %
 $KRMSL,     % RETURN MASTER LOCK %
 $KRNFL,     % FATAL ERROR ON FILE RENAME %
 $KRPBF,     % PURGE BUFFERS FOR RECOVERY LOG %
 $KRPGL,     % RETURN PAGE LOCK %
 $KRPLF,     % RETURN PAGE LOCK WITH FILENAME %
 $KRPLS,     % RETURN PAGE LOCK WITH SLOT NUMBER %
 $KRPUR,     % RECOVERY LOG PURGE %
 $KRRCL,     % RELEASE INTERLOCK FOR RECOVERY FILE %
 $KRRDP,     % READ RECOVERY FILE PAGE %
 $KRRPG,     % READ RECOVERY FILE PAGE WITHOUT CALLING $KERROR IF EOF %
 $KRSEQ,     % SKIM READ SEQUENTIAL %
 $KRSFD,     % RSHIFT FIELD ROUTINE %
 $KRSHF,     % RSHIFT KEY ROUTINE %
 $KRSRT,     % READ SORTED ROUTINE %
 $KRSTL,     % RESET LOCKS IN SOB AND FCB AND RELEASE LOCKS OF DB AND NEXTB %
 $KRSTR,     % Performs RECOVERY.LOG RESTORE processing %
 $KRVDP,     % VALIDATE RECOVERY FILE PAGE %
 $KSBCV,     % SB CONVERSION ROUTINE %
 $KSCP,      % SET CURSOR POSITION %
 $KSETK,     % SKIM SET KEY %
 $KSETL,     % SET PAGE LOCK IN SOB AND FCB %
 $KSEXE,     % SORT EXECUTIVE FOR SEPARATE OVERLAY %
 $KSFIN,     % SKIM FILE INITIALIZATION ROUTINE FOR SCHEMA COMPILER %
 $KSHELL,    % SHELL SORT %
 $KSHRN,     % SKIM SHRINK ROUTINE %
 $KSKIN,     % SKIM MODE INITIALIZATON ROUTINE %
 $KSORT,     % SORT ROUTINE %
 $KSQBL,     % INITIALIZE SEQUENTIAL BLOCK MODE %
 $KSQBYTE,   %Sequential I/O byte routine%
 $KSQDENTR,  % Initialize sequential data entry I/O ... FILEX type files %
 $KSQIB,     % INPUT BUFFER %
 $KSQIZ,     % INITIALIZE FCB FOR SEQENTIAL PAGED MODE %
 $KSQLN,     % INITIALIZE SEQUENTIAL LINE MODE %
 $KSQOB,     % OUTPUT BUFFER %
 $KSRCH,     % SKIM INDEX SEARCH %
 $KSSKE,     % SKIM SET KEY FOR A STRING %
 $KSSRT,     % SORT INITIALIZATION ROUTINE %
 $KSTAR,     % SKIM START OF FILE ROUTINE  %
 $KSTPI,     % PAGE POSITION FILE FOR INPUT %
 $KSTPO,     % PAGE POSITION FILE FOR OUTPUT %
 $KTIME,     % GET TIME IN SECONDS %
 $KTMPN,     % OBTAIN NAME FOR TEMP FILE %
 $KTYPL,     % TYPE LINE ON TERMINAL %
 $KUPDT,     % SKIM REWRITE %
 $KVALID,    % PAGE VALIDATION %
 $KVCRE,     % CREATE PRIVATE VIRTURAL PAGE %
 $KVIRD,     % VIRTUAL READ ROUTINE %
 $KVIRR,     % VIRTUAL READ ROUTINE WITHOUT ERROR MESSAGES %
 $KVIRX,     % VIRTUAL READ W/EXTRA BUFFERS %
 $KVMAP,     % VIRTUAL PAGE MAP %
 $KVMNP,     % VIRTUAL MAP NEW PAGE %
 $KVMPG,     % DOES VMAP UUO %
 $KVPGL,     % CONVERT FROM WRLOCK TO CVLOCK %
 $KVPROT,    % CHANGE VIRTUAL PAGE PROTECTION %
 $KVRCR,     % CREATE & VIRTUAL MAP PAGE %
 $KVREM,     % UNMAP PAGE WITHOUT CALLING ERROR %
 $KWBYTE,    % WRITE A BYTE %
 $KWHER,     % WHERE ROUTINE %
 $KWHY,      % OUTPUTS REASON FOR OPEN FAILURE %
 $KWITR,     % WRTIE INCOMPLETE TRANSACTION REPORT %
 $KWRBL,     % WRITE SEQUENTIAL BLOCK %
 $KWRLN,     % WRITE LINE %
 $KZAGE;     % SKIM ZERO AGE BIT ROUTINE %

%!    END OF MAGNUM UNIVERSAL FILE K1DEFS.BLI   %

SWITCHES LIST;
    9 f