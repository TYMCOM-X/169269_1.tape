PAGE 1-1			INFO.DOC     THU 05-JUL-84 9:56

00010	$TEXT RETRIEVAL;RETRIEVING INFORMATION USING INFO.
00020	
00030	THE INFO PROGRAM HAS A COMPLEX COMMAND STRUCTURE, HOWEVER, MOST OF THE
00040	COMMANDS ARE NOT NEEDED BY THE BEGINING USER.  BELOW IS A SUMMARY OF THE
00050	FUNCTIONS OF THE MORE BASIC COMMANDS WHICH ARE NECESSARY TO RETRIEVE DATA.
00060	FOR MORE SPECIFIC INFORMATTION ABOUT THEIR SYNTAX, USE THE HELP COMMAND IN
00070	INFO.
00080	
00090	SET - WILL CHANGE TERMINAL CHARACTERISTICS TO MAKE THE PROGRAM
00100	          TALK TO YOUR TERMINAL MORE EFFICIENTLY.  THE
00110	          CHARACTERISTICS FOR SOME TERMINALS ARE ALREADY
00120	          "HARDWIRED" IN AND ALL THAT NEED BE DONE IS TO NAME
00130	          THE TERMINAL.  OTHER TERMINALS MAY REQUIRE ADJUSTMENT
00140	          OF CERTAIN PARAMETERS FOR BEST RESULTS.
00150	
00160	MENU - WILL LIST THE AVAILABLE INFORMATION IN THE CHILDREN OF
00170	          THE NODE YOU ARE NOW AT.  IT MAY ALSO BE USED TO MOVE
00180	          TO A NEW NODE BY SAYING "MENU <NODE>".
00190	
00200	TEXT - THIS WILL PRINT THE TEXT ASSOCIATED WITH THE CURRENT
00210	          NODE.  (THE GOODIES) LIKE MENU, IT WILL ALSO ALLOW YOU
00220	          TO MOVE TO A NEW NODE BY SAYING "TEXT <NODE>".
00230	
00240	CONTENTS - THIS WILL PRODUCE A TABLE OF CONTENTS OF THE CURRENT
00250	          NODE.  IT MAY BE FOLLOWED BY A NODE NAME AS IN MENU
00260	          AND TEXT.  IT MAY ALSO BE FOLLOWED BY A DECIMAL
00270	          INTEGER TO INDICATE HOW MAY LEVELS OF DETAIL TO SHOW
00280	          IN THE TABLE.
PAGE 2-1			INFO.DOC     THU 05-JUL-84 9:56

00010	$MENU INFO;INSTRUCTIONS FOR INFO PROGRAM.
00020	*INFO.DOC:RETRIEVAL;RETRIEVING INFORMATION USING INFO.
00120	*INFO.DOC:TEST;TEST OF CONTROL CHARACTER DISPLAY.
PAGE 3-1			INFO.DOC     THU 05-JUL-84 9:56

00100	$TEXT TEST;TEST OF CONTROL CHARACTER DISPLAY.
00200	BELL="".
00300	CONTROL-N=""
PAGE 4-1			INFO.DOC     THU 05-JUL-84 9:56

PAGE 1-1			TYPE.DOC     THU 05-JUL-84 9:56


















                                 TYPE

                        PROGRAM TO LIST FILES


                                AUTHOR

                          EDWARD C. MULREAN
                    CATHOLIC UNIVERSITY OF AMERICA
                       CASSIDY BLDG. 2ND FLOOR
                        3329 8TH STREET, N. E.
                       WASHINGTON, D. C. 20064


                            DATE: 5-JAN-78

                          UPDATED: 18-OCT-79

                           VERSION: 1F(73)










                               ABSTRACT

               THIS PROGRAM ALLOWS FILES  OR  PARTS  OF
               FILES TO BE LISTED ON A TTY OR ANY OTHER
               DEVICE.   THE  MONITOR  TYPE  AND   LIST
               COMMANDS  CAN  BE  PROCESSED DIRECTLY BY
               TYPE.  TYPE IS UPWARDLY COMPATIBLE  WITH
               THE   CURRENT   TYPE  AND  LIST  COMMAND
               PROCESSING, BUT IN  ADDITION  IT  ALLOWS
               FULL  WILD-CARDING  AND COMMAND SCANNING
               BY USING SCAN AND WILD.

PAGE 1-2			TYPE.DOC     THU 05-JUL-84 9:56


PAGE 2-1			TYPE.DOC     THU 05-JUL-84 9:56

TYPE - PROGRAM TO LIST FILES                                    PAGE 2


1.0  GENERAL PROGRAM DESCRIPTION

1.1  INTRODUCTION

     TYPE IS DESIGNED TO GREATLY ENHANCE THE FILE LISTING CAPABILITIES
CURRENTLY  AVAILABLE  THROUGH COMPIL/PIP.  IT USES SCAN TO PROVIDE THE
DEC STANDARD COMMAND LINE PROCESSING  AND  INDIRECT  AND  OPTION  FILE
PROCESSING.   TYPE  USES  "TYPE"  AS IT'S IDENTIFIER IN THE SWITCH.INI
OPTION FILE AND IT USES "TYP" AS IT'S DEFAULT CCL  TMPCOR  FILE  NAME.
WILD  IS  USED  FOR FULL LEVEL-D DISK WILD-CARDED LOOKUPS.  FACILITIES
ARE PROVIDED FOR LISTING SECTIONS OF A FILE AND CONTROLLING THE FORMAT
OF THE GENERATED OUTPUT.



1.2  COMMAND STRING FORMAT

     TYPE USES A STANDARD COMMAND STRING WHICH MAY  CONTAIN  1  OUTPUT
FILE  SPECIFICATION  AND ANY NUMBER OF INPUT FILE SPECIFICATIONS.  THE
FORMAT OF THE SPECIFICATION IS:

     OUTPUT-SPEC/OSWITCHES=/GSWITCHES INPUT-SPECS/ISWITCHES

/OSWITCHES ARE A LIST OF SWITCHES WHICH PERTAIN  TO  THE  OUTPUT  FILE
SPECIFICATION.   IF  NO OUTPUT FILE SPECIFICATION IS GIVEN THE DEFAULT
IS "TTY:<FIRST INPUT NAME>.LST".  IF THE  FIRST  INPUT  FILE  NAME  IS
MISSING  OR  WILDCARDED,  THE NAME "TYPE" IS USED.  IF ANY PART OF THE
OUTPUT FILE SPECIFICATION IS GIVEN, THE DEFAULT  USED  IS  "DSK:<FIRST
INPUT  NAME>.LST[-]".   IF  NO  OUTPUT FILE SPECIFICATION IS USED, THE
EQUAL SIGN MAY BE DROPPED.  /GSWITCHES ARE A LIST OF  GLOBAL  SWITCHES
THAT  PERTAIN TO ALL INPUT FILE SPECIFICATIONS.  /ISWITCHES ARE A LIST
OF SWITCHES PERTAINING TO THE PRECEDING FILE  SPECIFICATION  AND  THEY
OVERRIDE ANY GLOBAL SWITCHES WHICH MAY HAVE BEEN SET FOR THIS COMMAND.
ANY NUMBER OF INPUT FILE SPECIFICATIONS  MAY  BE  GIVEN  SEPARATED  BY
COMMAS OR A SCAN LOGICAL CONNECTIVE (I.E.  'OR', 'AND').



1.3  MONITOR COMMAND INTERFACE

     TYPE IS SETUP TO PROCESS  BOTH  THE  "TYPE"  AND  "LIST"  MONITOR
COMMANDS.  ON THE TYPE COMMAND, THE DEFAULTS ARE THE SAME AS WHEN TYPE
IS  RUN  DIRECTLY.   ON  A  LIST  COMMAND,  THE  DEFAULT  OUTPUT  FILE
SPECIFICATION  IS  CHANGED  TO  "LPT:<FIRST INPUT NAME>.LST[-]".  WHEN
TYPE FINISHES A MONITOR LEVEL COMMAND, IT WILL JUST  EXIT  TO  MONITOR
LEVEL  LIKE THE CURRENT TYPE AND LIST COMMANDS.  NOTE THAT TYPE IS RUN
DIRECTLY BY THE MONITOR THUS ELIMINATING THE  INTERMEDIATE  PROCESSING
BY COMPIL.
PAGE 3-1			TYPE.DOC     THU 05-JUL-84 9:56

TYPE - PROGRAM TO LIST FILES                                    PAGE 3


1.4  INPUT FILE SPECIFICATION DEFAULTING

     TWO MODES OF DEFAULTING  ARE  AVAILABLE  WITH  TYPE.   THESE  ARE
CONTROLLED  BY  THE /WILD SWITCH.  THE DEFAULT MODE /NOWILD IS SIMILAR
TO "PIP" AND THE /WILD MODE IS SIMILAR TO "DIRECT".   IN  BOTH  MODES,
THE  FIRST  INPUT DEVICE IS DEFAULTED TO "DSK:" AND SUCCESSIVE DEVICES
ARE DEFAULTED TO THE PREVIOUS SPECIFICATION'S DEVICE.  ALL DIRECTORIES
ARE  DEFAULTED  TO  THE  USERS CURRENT PATH "[-]".  THE USER'S CURRENT
PATH IS THE PPN HE LOGGED IN ON UNLESS HE EXPLICITLY  CHANGED  IT.   A
GLOBAL  DIRECTORY MAY BE SPECIFIED WHICH REFERS TO ALL SUCCESSIVE FILE
SPECIFICATIONS BY PLACING THE DIRECTORY SPECIFICATION BEFORE THE  FILE
NAME AND EXTENSION.

     WITH /NOWILD PROCESSING, THE FILE  NAME  MUST  BE  SPECIFIED  FOR
DIRECTORIED  DEVICES  AND  THE  EXTENSION  IS DEFAULTED TO NULL.  WITH
/WILD PROCESSING, THE FIRST INPUT FILE NAME IS DEFAULTED  TO  "*"  AND
SUCCESSIVE  FILE  NAMES ARE DEFAULTED TO THE PRECEDING FILE NAME.  THE
EXTENSION IS DEFAULTED TO NULL IF THE DOT IS PRESENT (E.G.  FILE.) AND
TO "*" IF NO DOT IS PRESENT.



2.0  SWITCHES

     TYPE ACCEPTS AND PROCESSES ALL OF THE STANDARD SCAN  SWITCHES  AS
WELL AS MANY OF IT'S OWN.  ANY SWITCH MAY BE PLACED IN THE OPTION FILE
"SWITCH.INI[-]" TO BE  USED  AS  A  DEFAULT  IF  THAT  SWITCH  IS  NOT
EXPLICITLY GIVEN ON THE COMMAND LINE.



2.1  OUTPUT FILE SPECIFICATION SWITCHES

     THESE SWITCHES REFER TO THE OUTPUT FILE  ONLY!   THEY  SHOULD  BE
PLACED  BEFORE  THE  EQUAL  SIGN  AND  MAY  RESULT IN ERRORS IF PLACED
ELSEWHERE.



2.1.1  APPEND - IF THE OUTPUT IS GOING TO DISK AND IF A  FILE  BY  THE
SAME  NAME  AS THE OUTPUT FILE ALREADY EXISTS, AN ATTEMPT WILL BE MADE
TO APPEND TO THE END OF THE EXISTING FILE.



2.1.2  ERSUPERSEDE - IF THE OUTPUT IS GOING TO A DIRECTORY DEVICE  AND
THE FILE ALREADY EXISTS, AN ERROR MESSAGE IS GIVEN AND THE OLD FILE IS
NOT SUPERSEDED.
PAGE 4-1			TYPE.DOC     THU 05-JUL-84 9:56

TYPE - PROGRAM TO LIST FILES                                    PAGE 4


2.1.3  ESTIMATE:N - WHEN THE OUTPUT FILE  IS  ENTERED,  THE  ESTIMATED
FILE LENGTH IS SET TO N.  THIS ONLY HAS EFFECT ON DISK FILES.



2.1.4  IMAGE - IF THE OUTPUT DEVICE IS "TTY:", OUTPUT IS PERFORMED  IN
IMAGE  MODE  RATHER  THAN  ASCII MODE.  ON ANY OTHER DEVICE, OUTPUT IS
ALWAYS PERFORMED IN ASCII MODE.  THIS SWITCH TURNS  OFF  SEVERAL  TEXT
FORMATING COMMANDS AND ALLOWS GENERATION OF OUTPUT CLOSER TO THE GIVEN
INPUT TEXT (E.G CONTROL CHARACTERS ARE NOT OUTPUT AS ^-CHAR).



2.1.5  NOIMAGE - THIS IS THE DEFAULT MODE OF OUTPUT.   IT  CAUSES  THE
OUTPUT TO BE PERFORMED IN ASCII MODE.  SEE /IMAGE FOR MORE DETAILS.



2.1.6  OKSUPERSEDE - IF THE OUTPUT IS GOING TO  A  DIRECTORIED  DEVICE
AND  THE FILE ALREADY EXISTS THERE, IT IS SUPERSEDED BY THE NEW OUTPUT
FILE.  THIS IS THE DEFAULT.



2.1.7  PROTECT:NNN - IF THE OUTPUT IS TO DISK, SET THE  PROTECTION  ON
THE  OUTPUT  FILE  TO  NNN.  THE DEFAULT IS 057 OR IF THE FILE ALREADY
EXISTS, TO THE SAME PROTECTION AS THE OLD FILE.



2.1.8  VERSION:VNUM - IF OUTPUT  IS  TO  DISK,  SET  THE  OUTPUT  FILE
VERSION NUMBER TO VNUM.



2.2  INPUT FILE SELECTION SWITCHES

     SEVERAL SWITCHES ALLOW SELECTION OF A GIVEN SUBSET OF  THE  FILES
THAT  MATCH  A GIVEN FILE SPECIFICATION.  ALL OF THESE SWITCHES EXCEPT
/PHYSICAL AND /NOPHYSICAL ONLY AFFECT FILES  ON  DIRECTORIED  DEVICES.
THE "DATE-TIME" ARGUMENT USED BY 4 OF THESE SWITCHES CAN BE IN SEVERAL
FORMS WHICH ARE DESCRIBED IN APPENDIX A.



2.2.1  BEFORE:DATE-TIME - ALLOW ONLY THOSE FILES CREATED PRIOR TO  THE
 DATE-TIME VALUE TO BE CONSIDERED FOR LISTING.
PAGE 5-1			TYPE.DOC     THU 05-JUL-84 9:56

TYPE - PROGRAM TO LIST FILES                                    PAGE 5


2.2.2  SINCE:DATE-TIME - ALLOW ONLY  THOSE  FILES  CREATED  AFTER  THE
GIVEN DATE-TIME VALUE TO BE CONSIDERED FOR LISTING.



2.2.3  ABEFORE:DATE-TIME - ALLOW ONLY THOSE FILES  ACCESSED  PRIOR  TO
THE GIVEN DATA-TIME VALUE TO BE CONSIDERED FOR LISTING.



2.2.4  ASINCE:DATE-TIME - ALLOW ONLY THOSE FILES  ACCESSED  AFTER  THE
GIVEN DATE-TIME VALUE TO BE CONSIDERED FOR LISTING.



2.2.5  LENGTH:N:M - ALLOW ONLY THOSE FILES  WHOSE  BLOCK  LENGTHS  ARE
BETWEEN N AND M INCLUSIVELY TO BE CONSIDERED FOR LISTING.  IF ONLY ONE
VALUE IS GIVEN (E.G.  /LENGTH:5), THEN ALL FILES WHOSE  BLOCK  LENGTHS
ARE AT LEAST N LONG ARE CONSIDERED FOR LISTING.



2.2.6  PHYSICAL - TREAT THE DEVICE NAME GIVEN AS  A  PHYSICAL  DEVICE.
THUS  IF  DSKB  IS ASSIGNED THE LOGICAL NAME DSKC AND A FILE IS LISTED
FROM DEVICE DSKC, TYPE WILL LOOK ON PHYSICAL DEVICE DSKC.



2.2.7  NOPHYSICAL - TREAT THE DEVICE AS EITHER A LOGICAL  OR  PHYSICAL
NAME  IN  THAT  ORDER.   THIS IS THE DEFAULT.  THUS IN THE EXAMPLE FOR
/PHYSICAL ABOVE, TYPE WOULD LOOK ON PHYSICAL DEVICE DSKB FOR THE  FILE
IS /NOPHYSICAL IS SET.



2.2.8  STRS - IF A GENERIC DISK DEVICE IS GIVEN,  THIS  SWITCH  CAUSES
ALL STRUCTURES IN THE DEVICES SEARCH LIST TO BE SEARCHED FOR THE GIVEN
FILE.  THUS IF BOTH DSKB AND DSKC ARE IN THE USER'S SEARCH LIST AND IF
A  FILE,  CALL IT X.X, EXISTS ON BOTH DSKB AND DSKC, THE SPECIFICATION
DSK:X.X/STRS WILL CAUSE BOTH FILES TO BE LISTED.



2.2.9  NOSTRS - CAUSES ONLY THE FIRST FILE ENCOUNTERED  ON  A  GENERIC
DISK DEVICE WITH A GIVEN NAME TO BE LISTED.  THIS IS THE DEFAULT MODE.
THUS IN THE EXAMPLE FOR /STRS  ABOVE,  ONLY  THE  FIRST  COPY  OF  X.X
ENCOUNTERED  ON DSK WILL BE LISTED IN /NOSTRS IS SPECIFIED (EXPLICITLY
OR BY DEFAULT).
PAGE 6-1			TYPE.DOC     THU 05-JUL-84 9:56

TYPE - PROGRAM TO LIST FILES                                    PAGE 6


2.3  INPUT FILE SELECTION ERROR CONTROL SWITCHES

     THIS SET OF SWITCHES ALLOW SOME CONTROL OVER THE  TYPE  OF  ERROR
MESSAGES PRODUCED WHEN THERE ARE PROBLEMS READING AN INPUT FILE.



2.3.1  OKPROTECTION - DO NOT GIVE A WARNING MESSAGE FOR EACH PROTECTED
FILE.  THIS IS THE DEFAULT.  A WARNING MESSAGE IS ISSUED AT THE END OF
AN INPUT FILE  SPECIFICATION  IF  SOME  OR  ALL  MATCHING  FILES  WERE
PROTECTED.



2.3.2  ERPROTECTION - GIVE A WARNING MESSAGE FOR  EACH  MATCHING  FILE
THAT IS READ PROTECTED.



2.3.3  OKNONE - DO NOT GIVE A WARNING MESSAGE IF  NO  FILE  MATCHES  A
GIVEN FILE SPECIFICATION.



2.3.4  ERNONE - GIVE A WARNING MESSAGE IF NO FILES MATCH A GIVEN  FILE
SPECIFICATION.  THIS IS THE DEFAULT.



2.3.5  OKBINARY - ALLOW   FILES   WITH   BINARY    EXTENSIONS    (E.G.
REL,SAV,UFD) TO BE LISTED.  THIS IS THE DEFAULT.



2.3.6  ERBINARY - IF A GIVEN FILE HAS A BINARY EXTENSION, THEN  OUTPUT
AN ERROR MESSAGE AND DON'T LIST THE FILE.



2.3.7  SKBINARY - IF A GIVEN FILE HAS A BINARY  EXTENSION,  THEN  JUST
SKIP  OVER IT.  NO ERROR OR WARNING MESSAGE IS OUTPUT.  THIS SWITCH IS
IGNORED IF A FILE IS TYPE OUT AS OCTAL (/OCTAL).



2.4  SPECIAL INPUT FILE FORMAT SWITCHES

     THIS SET OF SWITCHES ALLOWS SPECIAL FORMAT FILES  TO  BE  LISTED.
ONLY  ONE OF THE /FORTRAN, /COBOL, OR /OCTAL SWITCHES MAY BE GIVEN FOR
A  GIVEN  FILE  SPECIFICATION.   ALSO  WITH  THE  /COBOL  SWITCH,  THE
/NOSEQUENCE SWITCH IS MEANINGLESS.
PAGE 7-1			TYPE.DOC     THU 05-JUL-84 9:56

TYPE - PROGRAM TO LIST FILES                                    PAGE 7


2.4.1  FORTRAN - THIS SWITCH WILL INTERPRET  THE  FIRST  CHARACTER  OF
EACH  LINE  IN  AN  INPUT FILE AS A FORTRAN CARRIAGE CONTROL.  SEE THE
FORTRAN-10 OR F40 MANUALS FOR A DESCRIPTION OF WHAT THE LEGAL CARRIAGE
CONTROL  CHARACTERS  ARE  AND  WHAT  THEY  DO.  IF AN ILLEGAL CARRIAGE
CONTROL CHARACTER IS ENCOUNTERED, TYPE WILL DISCARD IT AND  TREAT  THE
LINE  AS  IF  THE CHARACTER WAS A SPACE.  NOTE THAT FOR COMPUTATION OF
CARRIAGE CONTROL CHARACTERS WHICH SKIP A PARTIAL PAGE, A STANDARD PAGE
LENGTH OF 60 PRINTABLE LINES IS ASSUMED.



2.4.2  COBOL - USE THIS SWITCH IF THE INPUT FILE  IS  A  SIXBIT  COBOL
FILE.   NOTE THAT ANY PAGE LIMITATIONS WILL BE IGNORED SINCE THERE ARE
NEVER ANY FORM-FEEDS IN THIS TYPE OF FILE.  BLOCK SKIPPING IS ILLEGAL.



2.4.3  OCTAL - USE THIS SWITCH TO PRODUCE AN OCTAL DUMP OF  THE  GIVEN
FILE.  THE NUMBER OF OCTAL WORDS PLACED ON A LINE IS DETERMINED BY THE
/WIDTH SETTING (4 WORDS FOR 72, 8 FOR 132 ETC.).  ANY PAGE LIMITATIONS
ARE   MEANINGLESS  FOR  THIS  TYPE  OF  LISTING  SINCE  THERE  ARE  NO
FORM-FEEDS.  THIS SWITCH WILL OVERIDE THE /SKBINARY SWITCH.



2.4.4  SEQUENCE - IF THE GIVEN INPUT FILE HAS SEQUENCE  NUMBERS,  THEN
LIST  THEM.   THIS  IS  THE  DEFAULT.  IF THE INPUT FILE DOES NOT HAVE
SEQUENCE NUMBERS, THEN THIS SWITCH HAS NO EFFECT.



2.4.5  NOSEQUENCE - IF THE GIVEN INPUT FILE HAS SEQUENCE NUMBERS, THEN
DO  NOT LIST THEM.  THIS SWITCH WILL SUPPRESS BOTH THE SEQUENCE NUMBER
AND THE TAB FOLLOWING IT IF THERE IS ONE.  IF THE INPUT FILE DOES  NOT
HAVE SEQUENCE NUMBERS, THEN THIS SWITCH HAS NO EFFECT.



2.4.6  CRYPT:"TEXT" - ALLOW FILES ENCRYPTED BY THE  STRING  "TEXT"  BE
LISTED.  CURRENTLY THE ONLY WAY TO PRODUCE A FILE IN THIS FORMAT IS BY
USING A MODIFIED VERSION OF SOS OR TYPE ITSELF.



2.5  PARTIAL FILE LISTINGS

     THIS SET OF SWITCHES ALLOW THE SELECTION OF A PARTICULAR  PORTION
OF  A  FILE.   THE  PART  OF THE FILE LISTED CAN BE LIMITED BY BLOCKS,
PAGES, LINES, AND COLUMNS.  THESE SWITCHES ARE PROCESSED IN  A  NESTED
FASHION.   BLOCK  COUNTING  STARTS AT THE BEGINNING OF THE FILE.  THEN
THE GIVEN NUMBER OF BLOCKS ARE SKIPPED.  AT THIS POINT  PAGE  COUNTING
STARTS  AND THE GIVEN NUMBER OF PAGES ARE SKIPPED.  AT THIS POINT LINE
COUNTING STARTS AND THE GIVEN NUMBER OF LINES ARE SKIPPED.   THEN  THE
COLUMNS  SWITCH  MAY  BE USED TO SELECT A GIVEN RANGE OF COLUMNS.  THE
LISTING OF A FILE CONTINUES UNTIL ANY ONE OF THE BLOCK, PAGE, OR  LINE
PAGE 7-2			TYPE.DOC     THU 05-JUL-84 9:56

PAGE 8-1			TYPE.DOC     THU 05-JUL-84 9:56

TYPE - PROGRAM TO LIST FILES                                    PAGE 8


LIMITS ARE EXCEEDED OR UNTIL THE END OF FILE IS ENCOUNTERED.



2.5.1  LIMITING FILE PRINTING BY BLOCKS - THERE  ARE  4  SWITCHES  FOR
LIMITING THE RANGE OF BLOCKS LISTED.  ON NON-DIRECTORY DEVICES A BLOCK
IS EQUIVALENT TO A BUFFER OR A RECORD.



2.5.1.1  BSTART:N - CAUSES N BLOCKS TO BE SKIPPED AT THE BEGINNING  OF
THE  FILE.   THIS  SWITCH  CURRENTLY  ONLY  EFFECTS  DISK FILES AND IS
TREATED AS A NO-OP ON OTHER DEVICES.  THE  /SKRECORDS  SWITCH  MAY  BE
USED  TO  OBTAIN  EQUIVALENT  RESULTS  ON  MAGTAPE.  BLOCK SKIPPING IS
TREATED AS A NO-OP ON COBOL SIXBIT FILES.



2.5.1.2  BEND:N - CAUSES FILE LISTING TO CEASE AFTER THE N'TH BLOCK IS
LISTED.   THIS  SWITCH  MAY BE USED FOR ANY INPUT DEVICE.  HOWEVER, IF
THE DEVICE IS DISK, A NEGATIVE VALUE MAY BE GIVEN WHICH IS INTERPRETED
RELATIVE  TO  THE  LAST  BLOCK  (I.E.   -1=LAST BLOCK, -2=NEXT TO LAST
BLOCK, ETC.).



2.5.1.3  BRANGE:N:M - THIS SWITCH IS EQUIVALENT  TO  /BSTART:N/BEND:M.
IT HAS ONE ADDITIONAL FEATURE.  IF ONLY ONE VALUE IS GIVEN, IT IS USED
FOR BOTH N AND M.  THEREFORE  A  SINGLE  BLOCK  CAN  BE  LISTED  (E.G.
/BRANGE:2 == /BRANGE:2:2).



2.5.1.4  NBLOCKS:N - THIS SWITCH DEFINES A RELATIVE NUMBER  OF  BLOCKS
TO  BE  LISTED  AFTER THE STARTING BLOCK (E.G.  /BSTART:2/NBLOCKS:3 ==
/BRANGE:2:4).



2.5.2  LIMITING FILE PRINTING BY PAGES - THERE  ARE  4  SWITCHES   FOR
LIMITING  THE  RANGE OF PAGES LISTED.  A PAGE IS ALWAYS DELIMITED BY A
FORM-FEED.  THIS IS THE ONLY CRITERION USED TO DETERMINE WHERE A  PAGE
ENDS.  WITH /FORTRAN, THE "1" CARRIAGE CONTROL CHARACTER IS EQUIVALENT
TO A FORM-FEED.  WITH /COBOL, ANY PAGE LIMITS ARE IGNORED SINCE  THERE
ARE NEVER ANY FORM-FEEDS IN A COBOL SIXBIT FILE.  PAGE COUNTING STARTS
WITH PAGE 1.



2.5.2.1  PSTART:N - THIS SWITCH CAUSES FILE LISTING TO  START  AT  THE
N'TH PAGE AFTER THE INITIAL BLOCK SKIPPING.
PAGE 9-1			TYPE.DOC     THU 05-JUL-84 9:56

TYPE - PROGRAM TO LIST FILES                                    PAGE 9


2.5.2.2  PEND:N - THIS SWITCH CAUSES FILE  LISTING  TO  BE  TERMINATED
AFTER THE N'TH PAGE OF THE FILE.



2.5.2.3  PRANGE:N:M - THIS SWITCH IS EQUIVALENT  TO  /PSTART:N/PEND:M.
LIKE /BRANGE, IF ONLY ONE VALUE IS GIVEN, IT IS USED FOR BOTH M AND N.
THEREFORE  A  SINGLE  PAGE  CAN  BE   LISTED   (E.G.    /PRANGE:2   ==
/PRANGE:2:2).



2.5.2.4  NPAGES:N - THIS SWITCH DEFINES A RELATIVE NUMBER OF PAGES  TO
BE  LISTED  AFTER  THE  STARTING  PAGE  (E.G.   /PSTART:2/NPAGES:3  ==
/PRANGE:2:4).



2.5.3  LIMITING FILE PRINTING BY LINES - THERE  ARE  4  SWITCHES   FOR
LIMITING  THE RANGE OF LINES LISTED.  A LINE IS ALWAYS TERMINATED BY A
LINE-FEED.  THIS IS THE ONLY CRITERION USED TO DETERMINE WHERE A  LINE
ENDS.    WITH   /FORTRAN,  SEVERAL  CARRIAGE  CONTROL  CHARACTERS  ARE
EQUIVALENT TO ONE OR MORE LINE-FEEDS.  WITH /COBOL, A  CARRIAGE-RETURN
LINE-FEED  IS  ADDED  AT  THE  END  OF EACH COBOL SIXBIT RECORD.  LINE
COUNTING STARTS AT 1.



2.5.3.1  LSTART:N - THIS SWITCH CAUSES FILE LISTING TO  START  AT  THE
N'TH LINE AFTER THE INITIAL BLOCK AND PAGE SKIPPING.



2.5.3.2  LEND:N - THIS SWITCH CAUSES FILE  LISTING  TO  BE  TERMINATED
AFTER THE N'TH LINE IS PASSED.



2.5.3.3  LRANGE:N:M - THIS SWITCH IS EQUIVALENT  TO  /LSTART:N/LEND:M.
LIKE /BRANGE, IF ONLY ONE VALUE IS GIVEN, IT IS USED FOR BOTH N AND M.
THEREFORE  A  SINGLE  LINE  CAN  BE   LISTED   (E.G.    /LRANGE:2   ==
/LRANGE:2:2).



2.5.3.4  NLINES:N - THIS SWITCH DEFINES A RELATIVE NUMBER OF LINES  TO
BE   LISTED   AFTER  THE  STARTING  LINE  (E.Q  /LSTART:2/NLINES:3  ==
/LRANGE:2:4).
PAGE 10-1			TYPE.DOC     THU 05-JUL-84 9:56

TYPE - PROGRAM TO LIST FILES                                   PAGE 10


2.5.4  COLUMNS:N:M - THIS SWITCH ALLOWS THE SELECTION OF A  PARTICULAR
RANGE  OF COLUMNS FOR LISTING.  ONLY THESE COLUMNS AND ANY END OF LINE
CHARACTERS ARE LISTED.  THE COLUMNS ARE COUNTED FROM  THE  INPUT  FILE
AFTER   ANY  SPECIAL  CONVERSIONS  NEEDED  FOR  THE  FILE  FORMAT  ARE
PERFORMED.  ALL CONTROL CHARACTERS,  EXCEPT  END  OF  LINE  CHARACTERS
(CR,LF,VT,FF) AND TABS ARE TREATED AS OCCUPYING A SINGLE COLUMN.  LINE
NUMBERS WILL COUNT AS COLUMNS IF THEY  ARE  NOT  SUPPRESSED  WITH  THE
/NOSEQUENCE SWITCH.



2.6  OUTPUT FILE FORMAT CONTROL

     THESE SWITCHES CONTROL WHAT THE OUTPUT LISTING LOOKS LIKE.   THEY
ARE  INDEPENDENT  OF  THE  INPUT  FILE FORMAT.  SOME OF THESE SWITCHES
EFFECT THE LISTING OF ALL INPUT FILES  WHEREAS  OTHERS  MAY  REFER  TO
INDIVIDUAL  INPUT FILES OR GROUPS OF INPUT FILES.  THIS ASPECT WILL BE
DISCUSSED UNDER THE INDIVIDUAL SWITCHES.



2.6.1  PAGE SIMULATION SWITCHES - THERE ARE TWO SWITCHES FOR  DEFINING
THE  PHYSICAL  LENGTH  OF  THE OUTPUT FORM.  ONLY ONE OF EACH OF THESE
SWITCHES MAY BE GIVEN PER COMMAND LINE.  THEY AFFECT ALL INPUT  FILES.
IF  NEITHER  /PAGESIZE  OR  /BREAKSIZE  IS  GIVEN,  THE OUTPUT WILL BE
ASSUMED TO BE GOING TO A DEVICE WHICH HAS FORMS CONTROL.  IF EITHER OR
BOTH  OF  THESE  SWITCHES  ARE  USED,  THE  TYPE PROGRAM WILL SIMULATE
FORM-FEEDS WITH MULTIPLE LINE-FEEDS.  THIS ALLOWS A FORMED  OUTPUT  TO
GO TO A DEVICE WITHOUT HARDWARE FORMS CONTROL.  DEFAULTS ARE FILLED IN
FOR EITHER SWITCH IF THE OTHER IS PRESENT.  SOME EXAMPLES ARE:

        /PAGESIZE       = /PAGESIZE:66/BREAKSIZE:6
        /BREAKSIZE      = /PAGESIZE:66/BREAKSIZE:6
        /PAGESIZE:70    = /PAGESIZE:70/BREAKSIZE:6
        /BREAKSIZE:5    = /PAGESIZE:66/BREAKSIZE:5

     WHEN ONE OF THESE SWITCHES IS SPECIFIED, SPECIAL SETUP OPERATIONS
MUST  BE PERFORMED.  IF OUTPUT IS GOING TO A DEVICE OTHER THAN THE TTY
RUNNING THE TYPE PROGRAM, IT WILL  BE  ASSUMED  THAT  THIS  DEVICE  IS
POSITIONED  AT  TOP  OR FORM.  IF OUTPUT IS TO THE TTY TYPE IS RUNNING
ON, TYPE WILL REQUEST THAT THE PAPER BE POSITIONED  AT  TOP  OF  FORM.
THEN  A  SPACE SHOULD BE TYPED, AND PRINTING OF THE FILE WILL START ON
THAT LINE.  AN ADDITIONAL CARRIAGE-RETURN IS OUTPUT TO  MOVE  BACK  TO
THE START OF THE LINE BEFORE THE FILE ACTUALLY STARTS PRINTING.



2.6.1.1  PAGESIZE:N - THIS SWITCH DEFINES THE  ACTUAL  LENGTH  OF  THE
FORMS  AS  N  LINES  LONG.  THIS IS NOT THE PRINTABLE NUMBER OF LINES.
THIS VALUE IS COMPUTED AS  THE  VALUES  OF  THE  /PAGESIZE  MINUS  THE
/BREAKSIZE  VALUE  (E.G.   /PAGESIZE:66/BREAKSIZE:6 YIELD 60 PRINTABLE
LINES).  THE DEFAULT VALUE FOR /PAGESIZE IS 66.
PAGE 11-1			TYPE.DOC     THU 05-JUL-84 9:56

TYPE - PROGRAM TO LIST FILES                                   PAGE 11


2.6.1.2  BREAKSIZE:N - THIS SWITCH DEFINES THE NUMBER OF LINES TO SKIP
BETWEEN EACH FORM.  THEREFORE THE NUMBER OF LINES PRINTED ON A FORM IS
THE ACTUAL FORMS SIZE MINUS THE NUMBER OF LINES SKIPPED.  THE  DEFAULT
VALUE FOR /BREAKSIZE IS 6.



2.6.2  TAB AND SPACE CONVERSIONS - THIS  SET   OF   SWITCHES   PERFORM
SPECIAL  ACTIONS  ON  SPACES.   THEY  ALLOW THE CONVERSION OF MULTIPLE
SPACES TO TABS AND THE SUPPRESSION OF  LEADING  AND  TRAILING  SPACES.
NOTE  THAT  ONLY  SPACES AND NOT TABS ARE SUPPRESSED.  IF THE /COLUMNS
SWITCH IS USED, THESE SWITCHES WILL ACT ON THE SECTION  OF  EACH  LINE
THAT IS OUTPUT AND NOT ON WHAT THE INPUT LINE LOOKED LIKE.



2.6.2.1  TABS - THIS SWITCH CONVERTS MULTIPLE SPACES TO TABS.  THIS IS
THE  DEFAULT  IF  THE  OUTPUT  IS  DIRECTED  TO A TTY THAT UNDERSTANDS
HARDWARE TABS (I.E.  SET TTY TAB).



2.6.2.2  NOTABS - THIS SWITCH SUPPRESSES THE  CONVERSION  OF  MULTIPLE
SPACES TO TABS.  THIS IS THE DEFAULT FOR ALL DEVICES EXCEPT TTY'S THAT
UNDERSTAND TABS.



2.6.2.3  SUPPRESS - THIS SWITCH SUPPRESSES  THE  LISTING  OF  TRAILING
SPACES.   THIS  IS  THE  DEFAULT.   NOTE  THAT  TRAILING  TABS ARE NOT
SUPPRESSED.



2.6.2.4  NOSUPPRESS - THIS SWITCH ALLOWS TRAILING SPACES TO BE LISTED.



2.6.2.5  LSUPPRESS - THIS SWITCH WILL SUPPRESS LEADING  SPACES.   NOTE
THAT LEADING TABS ARE NOT SUPPRESSED.



2.6.2.6  NOLSUPPRESS - THIS SWITCH WILL ALLOW  LEADING  SPACES  TO  BE
OUTPUT.  THIS IS THE DEFAULT.



2.6.3  WIDTH CONTROL SWITCHES - THIS SET  OF  SWITCHES  ALLOW  CONTROL
OVER THE WIDTH OF THE OUTPUT FORMS.  THEY ALSO SIGNIFY WHAT TO DO WHEN
THE WIDTH OF THE FORM IS EXCEEDED.
PAGE 12-1			TYPE.DOC     THU 05-JUL-84 9:56

TYPE - PROGRAM TO LIST FILES                                   PAGE 12


2.6.3.1  WIDTH:N - THIS SWITCH WILL DEFINE THE  WIDTH  OF  THE  OUTPUT
LISTING.   IF NO WIDTH SWITCH IS GIVEN, A DEFAULT VALUE OF 132 IS USED
FOR ANY OUTPUT DEVICE EXCEPT TTY.  FOR A TTY, THE DEFAULT  WIDTH  USED
IS  THE CURRENT WIDTH SETTING OBTAINED FROM THE MONITOR.  NOTE THAT IF
OUTPUT IS TO A TTY AND A WIDTH SWITCH IS GIVEN, THE TYPE PROGRAM  WILL
RESET THE TTY'S WIDTH TO THE GIVEN SWITCH VALUE.



2.6.3.2  TRUNCATE - THIS SWITCH CAUSES LINES  LONGER  THAN  THE  GIVEN
WIDTH TO BE TRUNCATED.



2.6.3.3  NOTRUNCATE - THIS SWITCH CAUSES LINES LONGER THAN  THE  GIVEN
WIDTH  TO WRAP AROUND.  THAT IS, A CR-LF IS OUTPUT AND THE REST OF THE
LINE IS LISTED ON THE NEXT OUTPUT LINE.  THIS IS THE DEFAULT.



2.6.4  MISCELLANEOUS OUTPUT FORMAT SWITCHES - THIS  SET  OF   SWITCHES
ALLOW  SPECIAL  FORMATING  AND CHARACTER CONVERSION TO BE PERFORMED ON
THE OUTPUT.  ANY OF THESE ACTIONS OCCURE  ONLY  ON  THE  PART  OF  THE
OUTPUT  FILE  SELECTED  BY  THE PREVIOUSLY DESCRIBED SWITCHES.  ALL OF
THESE  SWITCHES  EXCEPT  /BACKSPACE  AND  /NOBACKSPACE  MAY  BE  GIVEN
INDIVIDUALLY FOR EACH FILE SPECIFICATION.



2.6.4.1  HEADER:"TEXT" - THIS SWITCH PLACES A HEADING ON  THE  TOP  OF
EACH OUTPUT FORM.  IT WILL LIST THE FILENAME AND EXTENSION STARTING AT
THE LEFT MARGIN.  IF "TEXT" IS GIVEN, IT IS OUTPUT AT  THIS  POINT  IN
THE HEADER LINE.  AND A PAGE NUMBER IS OUTPUT NEAR THE RIGHT MARGIN AS
DEFINED BY THE /WIDTH SWITCH.  IF THE ARGUMENT TO /HEADER IS  OMITTED,
ONLY  THE FILENAME, EXTENSION, AND PAGE NUMBER ARE OUTPUT AS A HEADER.
A HEADER IS OUTPUT AFTER EACH FORM-FEED IS OUTPUT AND BEFORE THE FIRST
CHARACTER  OF  THE  FILE  IS  LISTED.   A SPECIAL CASE OCCURES IF PAGE
SIMULATION IS IN EFFECT, IF EITHER A /PAGESIZE  OR  /BREAKSIZE  SWITCH
WAS  GIVEN.   IN  THIS  CASE,  HEADINGS  ARE OUTPUT AT THE TOP OF EACH
PHYSICAL PAGE, AND ALSO AT THE TOP OF EACH LOGICAL PAGE.  IF A LOGICAL
PAGE  IS  ENCOUNTERED, A SUB-PAGE NUMBER IS INCREMENTED INSTEAD OF THE
PAGE NUMBER, AND BOTH ARE OUTPUT IN THE HEADER.   THIS  METHOD  ALLOWS
THE PAGE NUMBER TO REFLECT THE PHYSICAL PAGE CORRECTLY.



2.6.4.2  SPACING:S - THIS SWITCH ALLOWS MULTIPLE  BLANK  LINES  TO  BE
SKIPED  BETWEEN EACH LINE OUTPUT.  IT CONVERTS EACH LINE-FEED TO 1, 2,
OR 3 LINE-FEEDS CORRESPONDING TO THE LEGAL SWITCH  VALUES  OF  SINGLE,
DOUBLE, AND TRIPLE.  THE DEFAULT IS SINGLE SPACING.
PAGE 13-1			TYPE.DOC     THU 05-JUL-84 9:56

TYPE - PROGRAM TO LIST FILES                                   PAGE 13


2.6.4.3  INDENT:N - THIS SWITCH ALLOWS INDENTATION OF EACH OUTPUT LINE
AND  THE  HEADER  IF  PRESENT  BY  N SPACES.  THIS INDENTATION OCCURES
INDEPENDENT OF THE /COLUMNS OR /LSUPPRESS SWITCHES.  THE DEFAULT VALUE
IF  NO /INDENT IS PRESENT IS 0.  IF /INDENT IS PRESENT AND NO VALUE IS
GIVEN, A DEFAULT VALUE OF 8 IS USED.



2.6.4.4  BACKSPACE - THIS SWITCH WILL OUTPUT THE  BACKSPACE  CHARACTER
DIRECTLY  AND  NOT  AS  A  CONTROL-H (^H).  IT ASSUMES THAT THE OUTPUT
DEVICE HAS A HARDWARE BACKSPACE FUNCTION.



2.6.4.5  NOBACKSPACE - THIS SWITCH CAUSES THE BACKSPACE  CHARACTER  TO
BE OUTPUT AS A CONTROL-H (^H).  THIS IS THE DEFAULT.



2.6.4.6  ALTMODE - THIS SWITCH CAUSES THE ALTMODE CHARACTER (OCTAL 33)
TO BE OUTPUT AS A DOLLAR SIGN ($) RATHER THAN A CONTROL-[ (^[).



2.6.4.7  NOALTMODE - THIS SWITCH CAUSES THE ALTMODE  CHARACTER  (OCTAL
33) TO BE OUTPUT AS A CONTROL-[ (^[).  THIS IS THE DEFAULT.



2.6.4.8  BELL - IF OUTPUT IS TO A TTY,  THIS  SWITCH  OUTPUTS  A  BELL
CHARACTER AS A CONTROL-G (^G) AND ALSO RINGS THE BELL BY OUTPUTTING IT
DIRECTLY.



2.6.4.9  NOBELL - THIS SWITCH CAUSES THE BELL CHARACTER TO  BE  OUTPUT
AS A CONTROL-G (^G).  THE BELL IS NOT RUNG.  THIS IS THE DEFAULT.



2.7  MAGTAPE FUNCTION CONTROL SWITCHES

     THIS GROUP OF SWITCHES ALLOW  VARIOUS  MAGTAPE  FUNCTIONS  TO  BE
PERFORMED.   THESE  ONLY  AFFECT  INPUT  DEVICES  WHICH  ARE  PHYSICAL
MAGTAPES.  THE ORDER OF THE TAPE MOVEMENT SWITCHES ARE:  REWIND,  EOT,
SKFILES  AND  BKFILES, SKRECORDS AND BKRECORDS.  NOTE THAT ALL MAGTAPE
OPERATIONS ARE PERFORMED BEFORE THE FILE IS READ.
PAGE 14-1			TYPE.DOC     THU 05-JUL-84 9:56

TYPE - PROGRAM TO LIST FILES                                   PAGE 14


2.7.1  REWIND - THIS SWITCH WILL  REWIND  THE  MAGTAPE  TO  IT'S  LOAD
POINT.



2.7.2  NOREWIND - THIS SWITCH INHIBITS THE REWINDING OF THE MAGTAPE TO
IT'S LOAD POINT.  THIS IS THE DEFAULT.



2.7.3  EOT - THIS SWITCH WILL SKIP TO THE LOGICAL END OF THE MAGTAPE.



2.7.4  NOEOT - THIS SWITCH INHIBITS SKIPPING TO  LOGICAL  END  OF  THE
MAGTAPE.  THIS IS THE DEFAULT.



2.7.5  SKFILES:N - THIS SWITCH WILL CAUSE N FILES TO BE SKIPPED ON THE
MAGTAPE  BEFORE  THE  FILE  IS  READ.  IF NO VALUE IS GIVEN AFTER THIS
SWITCH, A DEFAULT OF 1 IS ASSUMED.



2.7.6  SKRECORDS:N - THIS SWITCH WILL CAUSE N RECORDS TO BE SKIPPED ON
THE  MAGTAPE  BEFORE THE FILE IS READ.  IF NO VALUE IS GIVEN AFTER THE
SWITCH, A DEFAULT OF 1 IS ASSUMED



2.7.7  BKFILES:N - THIS SWITCH WILL CAUSE N  FILES  TO  BE  BACKSPACED
OVER  ON  THE  MAGTAPE  BEFORE THE FILE IS READ.  IF NO VALUE IS GIVEN
AFTER THE SWITCH, A DEFAULT OF 1 IS ASSUMED.



2.7.8  BKRECORDS:N - THIS SWITCH WILL CAUSE N RECORDS TO BE BACKSPACED
OVER  ON  THE  MAGTAPE  BEFORE THE FILE IS READ.  IF NO VALUE IS GIVEN
AFTER THE SWITCH, A DEFAULT OF 1 IS ASSUMED.



2.7.9  DENSITY:S - THIS SWITCH WILL SET WHAT DENSITY THE INPUT MAGTAPE
IS  TO  BE  READ  AT.   THE VALUE S MAY BE ONE OF 200, 556, 800, 1600,
6250, OR INSTALLATION.



2.7.10  PARITY:S - THIS SWITCH SETS THE PARITY OF  THE  MAGTAPE.   THE
VALUES MAY EITHER BE ODD OR EVEN.
PAGE 15-1			TYPE.DOC     THU 05-JUL-84 9:56

TYPE - PROGRAM TO LIST FILES                                   PAGE 15


2.8  MISCELLANEOUS TYPE SWITCHES

     THIS SET OF  SWITCHES  CONTROL  VARIOUS  FUNCTIONS  OF  THE  TYPE
PROGRAM THAT DON'T REALLY FIT IN ANY ONE OF THE PREVIOUS CATEGORIES.



2.8.1  ACCESS - THIS SWITCH WILL CAUSE TYPE TO CHANGE THE ACCESS  DATE
OF THE INPUT FILE WHEN IT IS LISTED.



2.8.2  NOACCESS - THIS SWITCH WILL INHIBIT THE CHANGING OF THE  ACCESS
DATE OF THE INPUT FILE.  THIS IS THE DEFAULT.



2.8.3  NAME - THIS SWITCH WILL TYPE OUT A FILE DESCRIPTION ON THE  TTY
BEFORE  A  GIVEN FILE IS LISTED.  THE FILE DESCRIPTION CONSISTS OF THE
FILE SPECIFICATION AND THE ACCESS AND CREATION DATES.



2.8.4  NONAME - THIS   SWITCH   WILL   INHIBIT   THE   INITIAL    FILE
SPECIFICATION TYPE OUT.  THIS IS THE DEFAULT.



2.8.5  ENAME - THIS SWITCH WILL TYPE OUT A FILE DESCRIPTION ON THE TTY
AFTER A GIVEN FILE IS LISTED.  THE FORMAT IS THE SAME AS FOR /NAME.



2.8.6  NOENAME - THIS SWITCH WILL INHIBIT THE FINAL FILE SPECIFICATION
TYPE OUT.  THIS IS THE DEFAULT.



2.9  ADDITIONAL SCAN SWITCHES

     THIS GROUP OF SWITCHES ARE STANDARD SCAN SWITCHES  WHICH  MAY  BE
USED  WITH  OTHER  SYSTEM  PROGRAMS  SUCH AS DIRECT, QUEUE, AND LOGIN.
THESE SWITCHES PERFORM GLOBAL FUNCTIONS WHICH ARE NOT ASSOCIATED  WITH
A GIVEN FILE OR COMMAND.



2.9.1  EXIT - THIS SWITCH WILL CAUSE TYPE  TO  EXIT  TO  MONITOR  MODE
AFTER THE GIVEN COMMAND IS COMPLETED.
PAGE 16-1			TYPE.DOC     THU 05-JUL-84 9:56

TYPE - PROGRAM TO LIST FILES                                   PAGE 16


2.9.2  HELP - THIS SWITCH WILL TYPE OUT THE TYPE HELP FILE ON THE TTY.



2.9.3  HELP:SWITCHES - THIS  SWITCH  WILL  TYPE  OUT  A  LIST  OF  THE
SWITCHES ACCEPTED BY THE TYPE PROGRAM ON THE TTY.



2.9.4  MESSAGE:S - THIS SWITCH WILL SET THE  LENGTH  OF  THE  MESSAGES
THAT  ARE  PRODUCED  BY  TYPE.  THE VALUES "S" CAN TAKE ON ARE PREFIX,
FIRST, CONTINUATION, AND ADDRESS.



2.9.5  NOOPTION - THIS  SWITCH  SUPPRESSES  READING  OF  THE  STANDARD
OPTIONS FOR THE TYPE PROGRAM FROM THE SWITCH.INI[-] FILE.



2.9.6  OPTION:S - THIS SWITCH USES OPTION "S" FROM  THE  OPTIONS  FILE
SWITCH.INI[-] TO FILL IN THE DEFAULTS ON THE CURRENT COMMAND LINE.



2.9.7  RUN:FILE - THIS SWITCH WILL CAUSE THE GIVEN FILE TO BE RUN AS A
PROGRAM AFTER THE CURRENT COMMAND LINE PROCESSING IS COMPLETED.



2.9.8  RUNCORE:N - THIS SWITCH WILL SET THE  AMOUNT  OF  CORE  THAT  A
PROGRAM  WILL  BE  RUN  IN.  THIS IS USED IN CONJUNCTION WITH THE /RUN
SWITCH.



2.9.9  RUNOFFSET:N - THIS SWITCH WILL SET THE OFFSET  FROM  THE  START
ADDRESS  AT  WHICH  A  PROGRAM WILL BE RUN.  IF NO VALUE N IS GIVEN, A
DEFAULT OF 1, THE CCL STARTING  POINT,  IS  USED.   THIS  IS  USED  IN
CONJUNCTION WITH THE /RUN SWITCH.



2.9.10  TMPFIL:XXX:"TEXT" - THIS SWITCH WILL GENERATE A TEMPORARY FILE
WITH NAME "XXX" CONTAINING THE GIVEN TEXT.  THIS SWITCH IS USEFUL WHEN
USED TO RUN A PROGRAM AT IT'S CCL OFFSET.
PAGE 17-1			TYPE.DOC     THU 05-JUL-84 9:56













                             APPENDIX A

                  FORMAT OF DATE-TIME SWITCH VALUES



     THE SWITCHES IN TYPE WHICH ACCEPT A DATE-TIME VALUE ARE /ABEFORE,
/ASINCE, /BEFORE, AND /SINCE.  THESE SWITCH VALUES MAY BE IN THE FORMS
GIVEN IN THIS APPENDIX.  THE MNEMONICS FOR THE PREDEFINED  TIMES  ARE:
NOON,  MIDNIGHT,  AND  LOGIN.   THE DAY MAY BE SPECIFIED AS YESTERDAY,
TODAY, AND TOMORROW AS WELL AS THE STANDARD DAY OF THE WEEK NAMES.


FORMATS:
        [ [  DAY IN WEEK            ]                ]
        [ [     NNND                ]                ]
        [ [ [   MM-DD  [-Y   ] ]  : ] [HH[:MM[:SS]]] ]
        [ [ [  MMM-DD  [-YY  ] ]    ]                ]
        [ [ [  DD-MMM  [-YYYY] ]    ]                ]
        [              MNEMONIC                      ]
WHERE:
        D       LETTER D
        DD      DAY IN MONTH (1-31)
        HH      HOURS (00-23)
        MM      MONTH IN YEAR (1-12)
            OR  MINUTES (00-59)
        MMM     MNEMONIC MONTH OR ABBREVIATION
        SS      SECONDS (0-59)
        Y       LAST DIGIT OF THIS DECADE
        YY      LAST TWO DIGITS OF THIS CENTURY
        YYYY    YEAR
        DAY IN WEEK IS MNEMONIC OR ABBREVIATION
        MNEMONIC IS A SET OF PREDEFINED TIMES
PAGE 18-1			TYPE.DOC     THU 05-JUL-84 9:56

                                                          PAGE INDEX-1


                          INDEX OF SWITCHES




ABEFORE  . . . . . . . . . . . . .  5, A-1
ACCESS . . . . . . . . . . . . . .  15
ALTMODE  . . . . . . . . . . . . .  13
APPEND . . . . . . . . . . . . . .  3
ASINCE . . . . . . . . . . . . . .  5, A-1

BACKSPACE  . . . . . . . . . . . .  12 TO 13
BEFORE . . . . . . . . . . . . . .  4, A-1
BELL . . . . . . . . . . . . . . .  13
BEND . . . . . . . . . . . . . . .  8
BKFILES  . . . . . . . . . . . . .  13 TO 14
BKRECORDS  . . . . . . . . . . . .  13 TO 14
BRANGE . . . . . . . . . . . . . .  8 TO 9
BREAKSIZE  . . . . . . . . . . . .  10 TO 12
BSTART . . . . . . . . . . . . . .  8

COBOL  . . . . . . . . . . . . . .  6 TO 9
COLUMNS  . . . . . . . . . . . . .  7, 10 TO 11, 13
CRYPT  . . . . . . . . . . . . . .  7

DENSITY  . . . . . . . . . . . . .  14

ENAME  . . . . . . . . . . . . . .  15
EOT  . . . . . . . . . . . . . . .  13 TO 14
ERBINARY . . . . . . . . . . . . .  6
ERNONE . . . . . . . . . . . . . .  6
ERPROTECTION . . . . . . . . . . .  6
ERSUPERSEDE  . . . . . . . . . . .  3
ESTIMATE . . . . . . . . . . . . .  4
EXIT . . . . . . . . . . . . . . .  15

FORTRAN  . . . . . . . . . . . . .  6 TO 9

HEADER . . . . . . . . . . . . . .  12
HELP . . . . . . . . . . . . . . .  16
HELP:SWITCHES  . . . . . . . . . .  16

IMAGE  . . . . . . . . . . . . . .  4
INDENT . . . . . . . . . . . . . .  13

LEND . . . . . . . . . . . . . . .  9
LENGTH . . . . . . . . . . . . . .  5
LRANGE . . . . . . . . . . . . . .  9
LSTART . . . . . . . . . . . . . .  9
LSUPPRESS  . . . . . . . . . . . .  11, 13

MESSAGE  . . . . . . . . . . . . .  16

NAME . . . . . . . . . . . . . . .  15
NBLOCKS  . . . . . . . . . . . . .  8
PAGE 18-2			TYPE.DOC     THU 05-JUL-84 9:56

PAGE 19-1			TYPE.DOC     THU 05-JUL-84 9:56

NLINES . . . . . . . . . . . . . .  9
NOACCESS . . . . . . . . . . . . .  15
NOALTMODE  . . . . . . . . . . . .  13
NOBACKSPACE  . . . . . . . . . . .  12 TO 13
NOBELL . . . . . . . . . . . . . .  13
NOENAME  . . . . . . . . . . . . .  15
NOEOT  . . . . . . . . . . . . . .  14
NOIMAGE  . . . . . . . . . . . . .  4
NOLSUPPRESS  . . . . . . . . . . .  11
NONAME . . . . . . . . . . . . . .  15
NOOPTION . . . . . . . . . . . . .  16
NOPHYSICAL . . . . . . . . . . . .  4 TO 5
NOREWIND . . . . . . . . . . . . .  14
NOSEQUENCE . . . . . . . . . . . .  6 TO 7, 10
NOSTRS . . . . . . . . . . . . . .  5
NOSUPPRESS . . . . . . . . . . . .  11
NOTABS . . . . . . . . . . . . . .  11
NOTRUNCATE . . . . . . . . . . . .  12
NOWILD . . . . . . . . . . . . . .  3
NPAGES . . . . . . . . . . . . . .  9

OCTAL  . . . . . . . . . . . . . .  6 TO 7
OKBINARY . . . . . . . . . . . . .  6
OKNONE . . . . . . . . . . . . . .  6
OKPROTECTION . . . . . . . . . . .  6
OKSUPERSEDE  . . . . . . . . . . .  4
OPTION . . . . . . . . . . . . . .  16

PAGESIZE . . . . . . . . . . . . .  10, 12
PARITY . . . . . . . . . . . . . .  14
PEND . . . . . . . . . . . . . . .  9
PHYSICAL . . . . . . . . . . . . .  4 TO 5
PRANGE . . . . . . . . . . . . . .  9
PROTECT  . . . . . . . . . . . . .  4
PSTART . . . . . . . . . . . . . .  8

REWIND . . . . . . . . . . . . . .  13 TO 14
RUN  . . . . . . . . . . . . . . .  16
RUNCORE  . . . . . . . . . . . . .  16
RUNOFFSET  . . . . . . . . . . . .  16

SEQUENCE . . . . . . . . . . . . .  7
SINCE  . . . . . . . . . . . . . .  5, A-1
SKBINARY . . . . . . . . . . . . .  6 TO 7
SKFILES  . . . . . . . . . . . . .  13 TO 14
SKRECORDS  . . . . . . . . . . . .  8, 13 TO 14
SPACING  . . . . . . . . . . . . .  12
STRS . . . . . . . . . . . . . . .  5
SUPPRESS . . . . . . . . . . . . .  11

TABS . . . . . . . . . . . . . . .  11
TMPFIL . . . . . . . . . . . . . .  16
TRUNCATE . . . . . . . . . . . . .  12

VERSION  . . . . . . . . . . . . .  4

WIDTH  . . . . . . . . . . . . . .  7, 12
WILD . . . . . . . . . . . . . . .  3
PAGE 19-2			TYPE.DOC     THU 05-JUL-84 9:56

PAGE 20-1			TYPE.DOC     THU 05-JUL-84 9:56

PAGE 1-1			ADDPAK.DOC     THU 05-JUL-84 9:56

			FOR ALL NON KS SYSTEMS
	THERE IS A BUG IN THE CURRENT K MONITOR WHICH WILL CAUSE THE 
SYSTEM TO CRASH WHENEVER A NEW DISK PACK(S) IS TO BE ADDED TO THE SYSTEM.
HOWEVER, THE PROBLEM CAN BE EASILY AVOIDED BY GOING IN WITH EDDT, OR
ELSE IT COULD BE ELIMINATED ALTOGETHER IF SOMEONE WAS WILLING TO PUT A
LITTLE TIME INTO THE PROBLEM.

	WHAT HAPPENS IS THAT IN ORDER TO ADD PACKS, THE OPERATOR
ENTERS THE FILES DIALOGUE AT THE ONCE PROMPT, AND THEN ADDS, AND IS
THEN REQUESTED BY ONCE TO ENTER THE PACK ID NAME OR NUMBER. AFTER THAT
IS ENTERED, THE SYSTEM CRASHES WITH SOME MESSAGE ABOUT FATAL
INCONSISTENT PACK ID AND IT THEN COMES UP TO BOOT>. THE QUICK AND
DIRTY WAY TO GET AROUND THIS IS TO GO IN WITH DDT AT THE ONCE PROMPT
AND DO THE FOLLOWING: GET OUT THE MICROFICHE IF YOU HAVE IT, BUT IT'S
NOT ESSENTIAL. IN THE MODULE REFSTR.MAC THERE IS A ROUTINE (WITHIN
PAKREF) CALLED SWPCP3. AT SWPCP3+5 THERE IS A PUSHJ P, GETPRM, AND AT 
SWPCP3+6 THERE IS A STOPCD. I DON'T KNOW THE DETAILS BUT FOR WHATEVER
REASON, THE GETPRM ROUTINE DID SOME ID CHECKING THAT WAS NECESSARY AT
ONE TIME BUT IS NOW NO LONGER NEEDED, IN FACT, IT NOW WILL CRASH THE
SYSTEM. WHAT TO DO IS WHILE IN EDDT, REPLACE THE PUSHJ P, GETPRM
INSTRUCTION WITH A JFCL 0, AND THE STOPCD WITH JRST .+1. PERHAPS THE
PUSHJ COULD EVEN BE REPLACED WITH A JRST .+2, BUT THIS HAS NEVER BEEN
TRIED SO USE THAT AT YOUR OWN RISK.

	OF COURSE THE PERMANENT SOLUTION WOULD BE TO PUT A PATCH IN
THE MONITOR INSTEAD OF WAITING TO GET CALLS FROM FRANTIC OPERATORS AT
1:00 AM. HOPEFULLY, THIS WILL BE REALIZED SOMEDAY.

			FOR KS SYSTEMS
	AT THE PRESENT TIME, IT APPEARS THAT IT IS IMPOSSIBLE TO ADD
DISK PACKS WITHOUT DOING A COMPLETE REBUILD. THERE WAS AN ATTEMPT MADE
TO ADD A DISK PACK TO SYSTEM 24, BUT THE SYSTEM HUNG (IT WOULDN'T WORK
AND IT WOULDN'T CRASH). THE DIALOGUE WENT SOMETHING LIKE THIS:
BOOTS> <CR>
 <MUMBLE>
ONCE>FILES <CR>
 <MUMBLE>
FILES*ADD <CR>
ENTER NAME OF UNIT TO ADD
RMA3 <CR>
ZERO UNIT ID - NEW ID NEEDED
DSKB3 <CR>
UNIT HAS SWAPPING SPACE, SUGGEST CHANGING SWAPING LIST
 <THE SYSTEM HANGS AT THIS POINT>

	THERE WERE TWO PLACES THAT I FOUND WHERE THE SYSTEM WAS
HANGING. THE FIRST WAS IN A ROUTINE CALLED SETCHG WHICH I JFCLD AROUND
WHEN IT WAS CALLED IN ONCDSK. THE NEXT PLACE IT GOT HUNG UP WAS IN A
ROUTINE CALLED IOSEL WHICH IS INSIDE OF FILIO. THERE IS A CHECK MADE
SOMEWHERE INSIDE IOKON1 TO COMPARE THE CONTENTS OF U WITH THE CONTENTS
OF (P). IF A MATCH IS NOT FOUND THEN IT LOOPS BACK UP TO IOKON.
ALTHOUGH AT ONE TIME THE RH OF (P) EQUALED (U), THE LH OF (P) WAS ALWAYS
ALL ONES AND SO A MATCH WAS IMPOSSIBLE AND IT JUST SAT THERE IN A LOOP.
ALTHOUGH I COULD MAKE IT GET OUT OF THE LOOP EASY ENOUGH WITH DDT, THE
WHOLE PROCESS GOT HUNG UP AGAIN SOMEWHERE ELSE AND FURTHER WORK IS
NECESSARY TO REWRITE THE ONCDSK CODE SO THAT PACKS CAN BE ADDED
WITHOUT HAVING TO DO THE REBUILD. I'VE SAVED SOME NOTES AND CTY
PRINTOUT IF ANYONE IS INTERESTED IN LOOKING AT THIS FURTHER.
PAGE 1-2			ADDPAK.DOC     THU 05-JUL-84 9:56


-GREG MATOKAPAGE 1-1			ICP.DOC     THU 05-JUL-84 9:56


TEXT: ICP; PROGRAM TO MONITOR SYSTEM USE                                  PAGE 1

DISPLAY SELECTION

THERE ARE FIVE KINDS OF OUTPUT FROM ICP:

	JOB LISTS
	FILE LISTS
	JOB SUMMARIES
	FILE SUMMARIES
	SYSTEM STATISTICS

THEY ARE CONTROLLED BY SWITCHS AS FOLLOWS

	JOB	PRODUCES A JOB LIST WITH ENTRIES FOR ALL JOBS,
		AND A JOB SUMMARY

	ACTIVE	PRODUCES A JOB LIST WITH ENTRIES FOR ALL ACTIVE
		JOBS (ALL JOBS NOT IN TTY I/O WAIT OR HIBERS),
		AND A JOB SUMMARY

	FILE	PRODUCES A FILE LIST WITH ENTRIES FOR ALL
		FILES CURRENTLY OPEN OR WITH PAGES MAPPED
		FROM THEM, AND A FILE SUMMARY

	SHARED	PRODUCES A FILE LIST WITH ENTRIES FOR ALL
		FILES POSESSING A SHARED PAGE TABLE (THIS
		IS ROUGHLY ALL FILES A PAGE OF WHICH HAS
		EVER BEEN SHARED), AND A FILE SUMMARY

	SUMMARY	IN COMBINATION WITH ANY OF THE ABOVE,
		TURNS OFF THE JOB AND FILE LISTS, LEAVING
		ONLY THE SUMMARIES

	STATISTICS
		PRODUCES A LIST OF SYSTEM STATISTICS ABOUT
		PAGING PERFORMANCE

THE MODIFIER

	REPEAT <WAIT TIME>

CAUSES THE SELECTED DISPLAY TO REPEAT FOREVER, WAITING
<WAIT TIME> SECONDS BETWEEN DISPLAYS.













PAGE 1-2			ICP.DOC     THU 05-JUL-84 9:56

                                       3
PAGE 2-1			ICP.DOC     THU 05-JUL-84 9:56


TEXT: ICP; PROGRAM TO MONITOR SYSTEM USE                                  PAGE 2

OTHER COMMANDS

OTHER ICP COMMANDS ARE:

	QUIT	LEAVES ICP

	OPEN <FILE NAME>
		CAUSES SUBSEQUENT ICP OUTPUT TO GO TO
		THE SPECIFIED FILE RATHER THAN TO THE
		TERMINAL (INPUT STILL COMES FROM THE
		TERMINAL)

	CLOSE	DIRECTS ICP OUTPUT BACK TO THE TERMINAL

	DISPLAY	ENABLES A CRUDE ADM3-ORIENTED MODE, WHICH
		IS MOSTLY USEFUL FOR REPEATING DISPLAYS
		(ONLY THE FIELDS THAT CHANGE ARE UPDATED
		ON THE SCREEN)





































PAGE 2-2			ICP.DOC     THU 05-JUL-84 9:56

                                       4
PAGE 3-1			ICP.DOC     THU 05-JUL-84 9:56


TEXT: ICP; PROGRAM TO MONITOR SYSTEM USE                                  PAGE 3

JOB LISTS

THE COLUMNS OF A JOB LIST ARE

	JOB	THE JOB NUMBER (DECIMAL)

	PROGRAM	THE PROGRAM NAME

	SIZE	THE NUMBER OF EXISTANT PAGES FOR THE
		JOB

	WSS	THE NUMBER OF PAGES IN THE JOB'S WORKING
		SET. AN ASTERISK IS PRINTED TO THE LEFT OF
		THIS COLUMN IF THE NUMBER IS GREATER THAN
		THE SYSTEM-WIDE JOB WORKING SET LIMIT.

	ACT	THE NUMBER OF PAGES CURRENTLY IN CORE FOR
		THE JOB (MORE OR LESS). A + IS PRINTED TO
		THE LEFT OF THIS COLUMN IF THE PAGES ARE
		CURRENTLY PROTECTED FROM BEING STOLEN BY
		THE SWAPPER FOR ANOTHER JOB. A - IS PRINTED
		IF THEY ARE NOT SO PROTECTED AND THE SWAPPER
		HAS AT LEAST THOUGHT ABOUT TAKING SOME OF
		THEM.

	ICP	THE NUMBER OF JIFFIES LEFT IN THE JOB'S IN-
		CORE QUANTUM. IF THIS IS NONZERO, THE JOB'S
		PAGES WILL BE PROTECTED FROM THE SWAPPER.

	MC/S	MICROCYCLES PER SECOND SINCE ICP WAS STARTED
		OR SINCE THE LAST JOB LIST WAS OUTPUT BY ICP

	IO/S	BLOCKS PER SECOND OF (SIMULATED) DISK I/O

	STATE	THE JOB'S STATE




















PAGE 3-2			ICP.DOC     THU 05-JUL-84 9:56

                                       5
PAGE 4-1			ICP.DOC     THU 05-JUL-84 9:56


TEXT: ICP; PROGRAM TO MONITOR SYSTEM USE                                  PAGE 4

JOB STATES

THE STATE FIELD IS MORE OR LESS THE SAME AS SYSTAT'S. A MINOR
EXCEPTION IS THAT TI AND TO ARE BOTH GIVEN AS TI. THE MAJOR
EXCEPTION IS THAT RN JOBS GET EXTRA INFORMATION PRINTED
ABOUT THEM:

	Q<QUEUE NUMBER>.<QUEUE POSITION>
		INDICATES WHICH OF THE FOUR RUN QUEUES
		THE JOB IS CURRENTLY IN AND WHERE IT STANDS
		IN THE QUEUE (ICP'S METHOD OF OBTAINING
		THIS INFORMATION IS SOMEWHAT UNRELIABLE, SO
		THE QUEUE INDICATION DOES NOT ALWAYS APPEAR)

	+MRQ	THE JOB HAS PAGE-FAULTED AND IS NOW BLOCKED
		WAITING FOR THE SWAPPER'S ATTENTION

	+PRF	THE JOB (DIRECTLY OR VIA THE DISK I/O
		SIMULATOR) HAS PREREFERENCED A PAGE AND THE
		SWAPPER HAS NOT FINISHED THE PREREFERENCING

	+SWPINP	THE SWAPPER IS CURRENTLY BRINGING IN PAGES
		FOR THE JOB

THE SW STATE, IT SHOULD BE NOTED, DOES NOT EXACTLY MEAN
"SWAPPED OUT". WHEN A JOB PAGE-FAULTS, IT STAYS IN RN BUT
+MRQ GETS SET. EVENTUALLY THE SWAPPPER COMES AROUND AND
DECIDES TO GET ALL THE JOB'S WORKING SET BACK IN AGAIN.
THIS RESULTS IN +SWPINP GETTING SET. WHEN THE SWAPPER HAS
QUEUED DISK REQUESTS FOR ALL OF THE JOB'S SWAPPED-OUT
PAGES, IT LETS THE JOB RUN AGAIN (AND +SWPINP GOES OFF).
IF THE JOB GETS TO A PAGE BEFORE THE CORRESPONDING DISK
REQUEST GETS SATISFIED, THE JOB GOES INTO SW.






















PAGE 4-2			ICP.DOC     THU 05-JUL-84 9:56

                                       6
PAGE 5-1			ICP.DOC     THU 05-JUL-84 9:56


TEXT: ICP; PROGRAM TO MONITOR SYSTEM USE                                  PAGE 5

JOB SUMMARIES

THE ICP JOB SUMMARY FIELDS ARE:

	XX JOBS		XX IS THE NUMBER OF LOGGED-IN JOBS

	XX ACTIVE	XX IS THE NUMBER OF JOBS NOT IN TTY
			I/O WAIT OR HIBERS

	NN (N0+N1+N2+N3) RN
			NN IS THE NUMBER OF JOBS IN THE RN
			STATE. NI IS THE NUMBER IN QUEUE I.

	XX WITH MRQ SET	XX IS THE NUMBER OF (RN STATE) JOBS
			HAVING MRQ SET (SEE JOB STATES)

	XX SW		XX IS THE NUMBER OF SW STATE JOBS
			(SEE JOB STATES)

	XX MICROCYCLES/SECOND
	YY SIMIO BLOCKS/SECOND
			XX AND YY ARE THE TOTALS FROM THE
			CORRESPONDING JOB LIST COLUMNS

	XX MAPPED, YY IN WSS, ZZ IN ACTIVE WSS,
	AA ACTIVATED, BB ICP
			XX, YY, ZZ, AA AND BB ARE IN PAGES
			OVER AVAILABLE CORE PAGES

			XX IS THE SUM OF THE SIZE COLUMN
			YY IS THE SUM OF THE WSS COLUMN
			  (ROUGHLY SYSTAT'S SWAPPING RATIO)
			ZZ IS THE SUM OF THE WSS COLUMN FOR
			  JOBS NOT IN TTY I/O WAIT OR HIBERS
			  (ROUGHLY SYSTAT'S ACTIVE SWAPPING
			  RATIO)
			AA IS THE SUM OF THE ACT COLUMN
			BB IS THE SUM OF THE ACT COLUMN ENTRIES
			  WHICH HAVE A + IN FRONT OF THEM
















PAGE 5-2			ICP.DOC     THU 05-JUL-84 9:56

                                       7
PAGE 6-1			ICP.DOC     THU 05-JUL-84 9:56


TEXT: ICP; PROGRAM TO MONITOR SYSTEM USE                                  PAGE 6

FILE LISTS

THE COLUMNS OF A FILE LIST ARE:

	DIRECTORY FILE EXT
		THE FILE'S DIRECTORY, NAME, AND EXTENSION

	U	THE NUMBER OF JOBS WITH THIS FILE OPEN IN
		UPDATE MODE

	R	THE NUMBER OF JOBS WITH THIS FILE LOOKED UP

	EOF	THE POSITION OF THE END-OF-FILE (IN
		DECIMAL PAGES/DECIMAL WORDS)

	PRV	THE PROTECTION CODE IN OCTAL

	MD	THE DATA MODE

	PAGES	THE NUMBER OF ALLOCATED PAGES FOR THE FILE
		(INCLUDING RIB PAGES)

	MAPPED	THE NUMBER OF PAGES BEING MAPPED FROM THE FILE

	SHR	THE "SHARING FACTOR" -- THE AVERAGE NUMBER OF
		JOBS HAVING EACH PAGE MAPPED





























PAGE 6-2			ICP.DOC     THU 05-JUL-84 9:56

                                       8
PAGE 7-1			ICP.DOC     THU 05-JUL-84 9:56


TEXT: ICP; PROGRAM TO MONITOR SYSTEM USE                                  PAGE 7

FILE SUMMARY

THE FILE SUMMARY CONSISTS OF THE TOTAL MAPPED-PAGE COUNT FOR
THE SYSTEM AND THE AVERAGE SHARING FACTOR.



















































PAGE 7-2			ICP.DOC     THU 05-JUL-84 9:56

                                       9
PAGE 8-1			ICP.DOC     THU 05-JUL-84 9:56


PAGE 1-1			UNDEL.DOC     THU 05-JUL-84 9:56


	UNDEL WORKS IN CONJUNCTION WITH DIRIT TO UNDELETE
	DELETED FILES.  WHEN DIRIT IS PASSED THE /3 SWITCH AND A
	FILE IS DELETED, THE FILE IS RENAMED TO ######.TMP.  THAT IS,
	IT IS SOFT DELETED.  SOFT DELETED FILES MAY BE RECLAIMED
	UP TO THE POINT WHEN THEY ARE EXPUNGED BY EITHER GFD, LOGOUT,
	OR THE UNDEL "PURGE" COMMAND.  UNDEL CAN BE CALLED
	DIRECTLY OR A COMMAND STRING MAY BE PASSED TO IT WITH THE
	MONITOR UNDEL COMMAND.  THE USER NEED NOT KNOW OF THE /3
	DIRIT SWITCH TO TAKE ADVANTAGE OF SOFT DELETION.  THE
	MONITOR COMMAND "UN/E" WILL SET UP THE APPRORIATE INI FILE FOR
	DIRIT.
PAGE 1-1			SSCAN.DOC     THU 05-JUL-84 9:56



      TO ANALYZE SYSTEM USE FOR SPECIFIC USER USING STREAM ACCOUNTING


SSCAN READS INFORMATION IN THE STREAM ACCOUNTING AND PRODUCES A REPORT.
STREAM ACCOUNTING .SAT FILES ARE WRITTEN INTO (UN1) AND THEN KEPT IN
(BILLING10) FOR THE REST OF THE MONTH.  AT THE END OF THE MONTH THE
FILES ARE DELETED.  IF CURRENT INFORMATION IS NEEDED SSCAN WILL READ THE
CORRECT FILES, BUT FOR STREAM ACCOUNTING DATA FOR PREVIOUS MONTHS THE
APPROPRIATE FILES WILL HAVE TO BE RESTORED TO YOUR DIRECTORY.  IT IS
USUALLY WISE TO RESTORE BOTH THE DATE NEEDED AND THE FOLLOWING DAY,
SINCE THE SESSION MAY RUN OVER MIDNIGHT GMT TIME.

THE FILES HAVE DATE NAMES IN THE FORMAT MMDDYY.SAT AS IN 122582.SAT FOR
CHRISTMAS DAY, L982.  SINCE THE ALL FILES OR INCREMENTALS MAY BE PULLING
FILES FROM EITHER STREAM ACCOUNTING DIRECTORY, THE BATCH REQUEST SHOULD
SAY THAT THE FILES COULD BE EITHER IN UN1 OR BILLING10.

SSCAN WILL READ FILES OFF THE DIRECTORY FROM WHICH IT IS RUN AS WELL AS
THE ACCOUNTING DIRECTORIES.

WHEN THE FILES ARE RESTORED, SSCAN CAN BE RUN.  RF SHOULD BE SET IF THE
USER NAME IS TO BE PRINTED (OTHERWISE THE GAN, PPN WILL BE PRINTED).
TIMES ON BILLING RECORDS ARE IN GMT; SSCAN WILL EITHER CONVERT TIMES TO
YOUR TIME ZONE OR LEAVE THEM IN GMT.  GENERALLY JOB LICENSE IS NOT OF
INTEREST.  PROMPTS FOR OUTPUT FILE NAME AND WHETHER TO DETACH WILL ONLY
BE PRINTED WHEN APPROPRIATE.

SPECIAL EXCESS TRU REPORT GIVES THE COMPLETE LOGOUT RECORD FOR ANY
SESSION THAT EXCEEDS THE THRESHOLD GIVEN.  ADDITIONAL INFORMATION CAN
THEN BE OBTAINED BY RUNNING SSCAN A SECOND TIME.

THE OUTPUT FILE IS WRITTEN IN CHRONOLOGICAL ORDER.  IN ORDER TO GET THE
INFORMATION AS TO A PARTICULAR SESSION YOU MAY NEED TO EDIT THE FILE.

PAGE 2-1			SSCAN.DOC     THU 05-JUL-84 9:56


			    SAMPLE RUN OF SSCAN

.O RF$
.RUN SSCAN
VERSION 20
DEFAULT VALUES SHOWN IN []
OUTPUT TO (FILE,TERM OR BOTH) [TERM]: F
OUTPUT FILE: CS0814
SPECIAL EXCESS TRU REPORT? [NO]:
USER(S) TO WATCH (USER, [PPN], GAN OF USER) [ALL]: COEES0814
PROGRAM TO WATCH ([(USER)][FILE]): 
EXCLUDE OWNER? [NO]: 
EXCLUDE SYS:RPG? [NO]: 
NODE TO WATCH [ALL]: 
PORT TO WATCH [ALL]: 
START DATE (MON,DAY,YR): 2,1,82
NUMBER OF DAYS [ALL]: 2
INCLUDE RECORD TYPES (TYPE LIST, "?" OR <CR>) [ALL]: 
SHOW INCREMENTAL TRUS? [NO]: Y
SHOW SESSION TRUS? [NO]: Y
SHOW JOB LICENSE? [NO]: 
CONVERT TIME? [YES]: N
DETACH? [YES]: N

READING FILE 020182.SAT
READING FILE 020282.SAT
END OF SAIL EXECUTION
.

PAGE 3-1			SSCAN.DOC     THU 05-JUL-84 9:56

		  FIRST PAGE OF OUTPUT FILE (NOT EDITED)


[ 02/01/82 ]
14:46:14 #13[7676,310141] LOGIN 2364:62 TID=G
14:46:15 #13[7676,310141] PJC=ALBQWE,VFY=0
14:46:15 #13[7676,310141] RUN [7676,103006]INIT3 TRUS= 1.3
14:46:15 #13[7676,310141] RUN [7676,103006]INIT2 TRUS= 2.7
14:46:16 #13[7676,310141] RUN [7676,103006]COEES TRUS= 1.8
14:46:40 #13[7676,310141] RUN [7676,103006]2ESPLN TRUS= 2.3
14:50:30 #16[7676,310141] LOGIN 2364:60 TID=1200
14:50:30 #16[7676,310141] PJC=9ERL-EWM,VFY=0
14:50:30 #16[7676,310141] RUN [7676,103006]INIT3 TRUS= .9
14:50:31 #16[7676,310141] RUN [7676,103006]INIT2 TRUS= 2.7
14:50:31 #16[7676,310141] RUN [7676,103006]COEES TRUS= 1.8
14:50:38 #16[7676,310141] RUN [7676,103006]1ESPLN TRUS= 2.1
15:04:39 #11[7676,310141] LOGIN 2364:60 TID=A
15:04:39 #11[7676,310141] PJC=DLTR,VFY=0
15:04:39 #11[7676,310141] RUN [7676,103006]INIT3 TRUS= .8
15:04:40 #11[7676,310141] RUN [7676,103006]INIT2 TRUS= 2.6
15:04:40 #11[7676,310141] RUN [7676,103006]COEES TRUS= 1.8
15:04:56 #11[7676,310141] RUN [7676,103006]1PCLN1 TRUS= 2.3
15:05:49 #13[7676,310141] RUN [7676,103006]COEES TRUS= 61.6
15:05:57 #13[7676,310141] RUN [7676,103006]2ESPLN TRUS= 2.2
15:11:54 #23[7676,310141] LOGIN 2364:60 TID=E
15:11:54 #23[7676,310141] PJC=RGA,VFY=0
15:11:55 #23[7676,310141] RUN [7676,103006]INIT3 TRUS= .8
15:11:56 #23[7676,310141] RUN [7676,103006]INIT2 TRUS= 3.0
15:11:57 #23[7676,310141] RUN [7676,103006]COEES TRUS= 2.0
15:12:11 #23[7676,310141] RUN [7676,103006]1OCLN3 TRUS= 2.3
15:15:30 #11[7676,310141] RUN [7676,103006]COEES TRUS= 384.7
15:16:40 #11[7676,310141] RUN [7676,103006]2ESPLN TRUS= 2.5
15:20:47 #16[7676,310141] RUN [7676,103006]COEES TRUS= 994.5
15:21:11 #16[7676,310141] RUN [1,4]LOGOUT TRUS= 1.4
15:21:11 #16[7676,310141] LOGOUT, TOTAL TRUS= 1003.3
  LOOKUPS                       136    USETI, USETOS                  18
  BLOCKS READ                 13352    BLOCKS WRITTEN                132
  CHARS IN                      887    CHARS OUT                   50867
  ATTACH TIME                  1846    MAPPED PAGE COUNT            1776
  MICROCYCLES               9315255    PREM CHARG                      0
  SECONDS BLOCK PORT IO           0    BLOCK PORT CHARS                0
  LOOKUPS*SIZE                 6116    ENTER + RENAMES*SIZE          795
  BLOCKS READ*SIZE           711281    BLOCKS WRITTEN*SIZE          7476
  SECONDS ELAPSED*SIZE        85954    BREAK CHARS*SIZE             3272
  KILO CORE TICKS         514287272

15:23:45 #23[7676,310141] RUN [7676,103006]COEES TRUS= 318.5
15:23:59 #23[7676,310141] RUN [7676,103006]1PCLN1 TRUS= 2.3
15:39:47 #23[7676,310141] RUN [1,4]LOGOUT TRUS= 263.1
15:39:47 #23[7676,310141] LOGOUT, TOTAL TRUS= 592.1
  LOOKUPS                       150    USETI, USETOS                  37
  BLOCKS READ                  7459    BLOCKS WRITTEN                199
  CHARS IN                      315    CHARS OUT                    6496
  ATTACH TIME                  1674    MAPPED PAGE COUNT            1077
  MICROCYCLES               8969150    PREM CHARG                      0
  SECONDS BLOCK PORT IO           0    BLOCK PORT CHARS                0
  LOOKUPS*SIZE                 5352    ENTER + RENAMES*SIZE         1316
  BLOCKS READ*SIZE           343444    BLOCKS WRITTEN*SIZE          8582
PAGE 3-2			SSCAN.DOC     THU 05-JUL-84 9:56

  SECONDS ELAPSED*SIZE        51232    BREAK CHARS*SIZE             1211
  KILO CORE TICKS         407056080
PAGE 4-1			SSCAN.DOC     THU 05-JUL-84 9:56


				EDITED FILE


[ 02/01/82 ]
14:50:30 #16[7676,310141] LOGIN 2364:60 TID=1200
14:50:30 #16[7676,310141] PJC=9ERL-EWM,VFY=0
14:50:30 #16[7676,310141] RUN [7676,103006]INIT3 TRUS= .9
14:50:31 #16[7676,310141] RUN [7676,103006]INIT2 TRUS= 2.7
14:50:31 #16[7676,310141] RUN [7676,103006]COEES TRUS= 1.8
14:50:38 #16[7676,310141] RUN [7676,103006]1ESPLN TRUS= 2.1
15:20:47 #16[7676,310141] RUN [7676,103006]COEES TRUS= 994.5
15:21:11 #16[7676,310141] RUN [1,4]LOGOUT TRUS= 1.4
15:21:11 #16[7676,310141] LOGOUT, TOTAL TRUS= 1003.3
  LOOKUPS                       136    USETI, USETOS                  18
  BLOCKS READ                 13352    BLOCKS WRITTEN                132
  CHARS IN                      887    CHARS OUT                   50867
  ATTACH TIME                  1846    MAPPED PAGE COUNT            1776
  MICROCYCLES               9315255    PREM CHARG                      0
  SECONDS BLOCK PORT IO           0    BLOCK PORT CHARS                0
  LOOKUPS*SIZE                 6116    ENTER + RENAMES*SIZE          795
  BLOCKS READ*SIZE           711281    BLOCKS WRITTEN*SIZE          7476
  SECONDS ELAPSED*SIZE        85954    BREAK CHARS*SIZE             3272
  KILO CORE TICKS         514287272

15:11:54 #23[7676,310141] LOGIN 2364:60 TID=E
15:11:54 #23[7676,310141] PJC=RGA,VFY=0
15:11:55 #23[7676,310141] RUN [7676,103006]INIT3 TRUS= .8
15:11:56 #23[7676,310141] RUN [7676,103006]INIT2 TRUS= 3.0
15:11:57 #23[7676,310141] RUN [7676,103006]COEES TRUS= 2.0
15:12:11 #23[7676,310141] RUN [7676,103006]1OCLN3 TRUS= 2.3
15:23:45 #23[7676,310141] RUN [7676,103006]COEES TRUS= 318.5
15:23:59 #23[7676,310141] RUN [7676,103006]1PCLN1 TRUS= 2.3
15:39:47 #23[7676,310141] RUN [1,4]LOGOUT TRUS= 263.1
15:39:47 #23[7676,310141] LOGOUT, TOTAL TRUS= 592.1
  LOOKUPS                       150    USETI, USETOS                  37
  BLOCKS READ                  7459    BLOCKS WRITTEN                199
  CHARS IN                      315    CHARS OUT                    6496
  ATTACH TIME                  1674    MAPPED PAGE COUNT            1077
  MICROCYCLES               8969150    PREM CHARG                      0
  SECONDS BLOCK PORT IO           0    BLOCK PORT CHARS                0
  LOOKUPS*SIZE                 5352    ENTER + RENAMES*SIZE         1316
  BLOCKS READ*SIZE           343444    BLOCKS WRITTEN*SIZE          8582
  SECONDS ELAPSED*SIZE        51232    BREAK CHARS*SIZE             1211
  KILO CORE TICKS         407056080
PAGE 5-1			SSCAN.DOC     THU 05-JUL-84 9:56


            SAMPLE RUN OF SSCAN FOR SPECIAL EXCESS TRU REPORT

.O RF$
.RUN SSCAN
VERSION 20
DEFAULT VALUES SHOWN IN []
OUTPUT TO (FILE,TERM OR BOTH) [TERM]: TERM
SPECIAL EXCESS TRU REPORT? [NO]: YES
TRU/HOUR THRESHOLD?: 5000
USER(S) TO WATCH (USER, [PPN], GAN OF USER) [ALL]: COEES0814
START DATE (MON,DAY,YR): 2,1,82
NUMBER OF DAYS [ALL]: 1
CONVERT TIME? [YES]: N

READING FILE 020182.SAT
[ 02/01/82 ]
16:59:17 #7(COEES0814) LOGOUT, TOTAL TRUS= 791.3
  LOOKUPS                       196    USETI, USETOS                  49
  BLOCKS READ                  8663    BLOCKS WRITTEN                330
  CHARS IN                      252    CHARS OUT                   64002
  ATTACH TIME                   959    MAPPED PAGE COUNT            1287
  MICROCYCLES              14037500    PREM CHARG                      0
  SECONDS BLOCK PORT IO           0    BLOCK PORT CHARS                0
  LOOKUPS*SIZE                 6552    ENTER + RENAMES*SIZE         1752
  BLOCKS READ*SIZE           370770    BLOCKS WRITTEN*SIZE         15649
  SECONDS ELAPSED*SIZE        32931    BREAK CHARS*SIZE              870
  KILO CORE TICKS         599789184

17:17:20 #12(COEES0814) LOGOUT, TOTAL TRUS= 378.9
  LOOKUPS                        94    USETI, USETOS                  26
  BLOCKS READ                  5293    BLOCKS WRITTEN                170
  CHARS IN                      156    CHARS OUT                    2976
  ATTACH TIME                   282    MAPPED PAGE COUNT             863
  MICROCYCLES               5277844    PREM CHARG                      0
  SECONDS BLOCK PORT IO           0    BLOCK PORT CHARS                0
  LOOKUPS*SIZE                 3079    ENTER + RENAMES*SIZE          984
  BLOCKS READ*SIZE           237658    BLOCKS WRITTEN*SIZE          7512
  SECONDS ELAPSED*SIZE         9684    BREAK CHARS*SIZE              735
  KILO CORE TICKS         228679844

18:16:20 #3(COEES0814) LOGOUT, TOTAL TRUS= 419.2
  LOOKUPS                        94    USETI, USETOS                  17
  BLOCKS READ                  5891    BLOCKS WRITTEN                103
  CHARS IN                      317    CHARS OUT                    3455
  ATTACH TIME                   578    MAPPED PAGE COUNT             715
  MICROCYCLES               4527593    PREM CHARG                      0
  SECONDS BLOCK PORT IO           0    BLOCK PORT CHARS                0
  LOOKUPS*SIZE                 3678    ENTER + RENAMES*SIZE          611
  BLOCKS READ*SIZE           294268    BLOCKS WRITTEN*SIZE          5064
  SECONDS ELAPSED*SIZE        21353    BREAK CHARS*SIZE             1108
  KILO CORE TICKS         229038348
PAGE 1-1			PCOM.DOC     THU 05-JUL-84 9:56

PCOM - PERIODIC COMMAND FILE PROCESSOR FOR TYMCOM-X               PAGE 1
INTRODUCTION


     1.0  INTRODUCTION

          THE PCOM PROGRAM PROVIDES  A  MECHANISM  WITHIN  THE  TYMCOM-X
     SYSTEM  ENVIRONMENT FOR A USER TO EXECUTE A LIST OF COMMANDS FROM A
     FILE.  THE FILE MAY CONTAIN XEXEC COMMANDS, INPUT TO USER  PROGRAMS
     AND SPECIAL COMMANDS TO PCOM.

          PCOM READS THE SPECIFIED FILE OF  COMMANDS  (HEREAFTER  CALLED
     THE  COMMAND FILE) AND PASSES THOSE COMMANDS TO ANOTHER FRAME WHICH
     PROCESSES THEM.  PCOM THEN RECORDS THE OUTPUT FROM  THE  PROCESSING
     FRAME  IN  A  LOG  FILE.   ANY  RESPONSE  FROM  THE JOB WHICH WOULD
     NORMALLY  BE  PRINTED  ON  THE  TERMINAL  DURING   AN   INTERACTIVE
     TIMESHARING SESSION IS WRITTEN IN THE PCOM LOG FILE.

          WHEN THE PCOM JOB IS COMPLETED, THE  PCOM  PROGRAM  TERMINATES
     THE  PROCESSING  FRAME,  CLOSES  THE  LOG  FILE  AND EXITS.  A MORE
     DETAILED EXPLANATION OF  THE  OPTIONS  AND  COMMANDS  AVAILABLE  IS
     LISTED BELOW.



     2.0  NOTATIONAL CONVENTIONS AND DEFINITIONS

          THE TERMS JOB AND FRAME TEND TO BE USED INTERCHANGEABLY ON THE
     TYMCOM-X  ENVIRONMENT.  HOWEVER, IN THIS DOCUMENT THEY REFER TO TWO
     DISTINCT CONCEPTS.  JOB IS USED TO REFER TO EACH SINGLE  INVOCATION
     OF  THE  PCOM  PROGRAM.   FRAME  IS USED TO DESCRIBE THE PROCESSING
     FRAME, THAT IS:   THE  FRAME  THAT  ACTUALLY  EXECUTES  THE  USER'S
     COMMANDS FROM THE PCOM FILE.

          SQUARE BRACKETS "[" AND "]" ARE USED TO ENCLOSE OPTIONAL ITEMS
     OR OPTIONAL SYNTAX AND ARE NOT PART OF THE ACTUAL PCOM SYNTAX.

          ANGLE BRACKETS "<" AND ">"  ARE  USED  TO  ENCLOSE  CONCEPTUAL
     IDEAS AND ENTITIES AND ARE NOT PART OF THE PCOM SYNTAX.

          IN  THE  EXAMPLES  USED  IN  THIS  DOCUMENT,  LINES  PRECEEDED
     IMMEDIATELY  WITH  A  DASH (-) ARE USUALLY COMMANDS TYPED TO XEXEC.
     THESE COMMANDS WORK BOTH IN PDP10 MODE AND IN XEXEC MODE.  HOWEVER,
     FOR CONVENIENCE, XEXEC MODE IS USED IN THIS DOCUMENT.
PAGE 2-1			PCOM.DOC     THU 05-JUL-84 9:56

PCOM - PERIODIC COMMAND FILE PROCESSOR FOR TYMCOM-X               PAGE 2
GETTING STARTED


     3.0  GETTING STARTED

          TO USE PCOM, THE USER MUST  FIRST  CREATE  A  "COMMAND"  FILE.
     THIS  IS  A  FILE  WHICH  CONTAINS COMMANDS WHICH WOULD NORMALLY BE
     TYPED AT THE TERMINAL DURING A TIMESHARING SESSION.   FOR  EXAMPLE,
     IF THE TERMINAL SESSION LOOKS LIKE:

        -RUN PROGRM
        OVERLAP PERIOD: DAILY
        SEPARATE DIVISIONS: YES
        SELECTION CRITERIA: COLLECT ALL
        OUTPUT FILE NAME: REPORT.LST

     THEN, THE PCOM COMMAND FILE WOULD CONTAIN THE FOLLOWING:

        RUN PROGRM
        DAILY
        YES
        COLLECT ALL
        REPORT.LST

          THE PCOM COMMAND FILE IS A  NORMAL  TEXT  FILE  WHICH  MAY  BE
     CREATED  USING  ANY  TEXT  EDITOR AVAILABLE, (EDITOR, TECO, EDIT10,
     ETC.), OR BY ANY PROGRAM WHICH WRITES  NORMAL  TEXT  (FOR  EXAMPLE,
     OUTPUT FROM A SAIL OR FORTRAN PROGRAM).

          TO EXECUTE THE COMMANDS IN AN EXISTING PCOM COMMAND FILE,  THE
     USER WOULD TYPE ONE OF THE FOLLOWING COMMANDS:

        -R PCOM [; [ LOGFILE = ] COMMANDFILE [PARAM] [/SWITCHES] ]

            OR 

        -R PCOM
        PCOM VERSION 1.60
        (TYPE ? FOR HELP)
        COMMAND FILE: [ LOGFILE = ] COMMANDFILE [PARAM] [/SWITCHES]

     WHERE LOGFILE IS THE FILENAME FOR THE PCOM LOG FILE, COMMANDFILE IS
     THE FILENAME OF THE COMMAND FILE, PARAM IS AN OPTIONAL LIST OF USER
     DEFINABLE PARAMETERS AND /SWITCHES IS ONE OR  MORE  OF  THE  OPTION
     SWITCHES AVAILABLE.

          IN TYMCOM-X MONITORS VERSION  P034/L  AND  LATER  TWO  MONITOR
     COMMANDS  ARE PROVIDED FOR CONVENIENCE TO RUN PCOM DIRECTLY.  THESE
     ARE:  PCOM AND DCOM.  THEIR FORMATS ARE AS FOLLOWS:

        -PCOM [ LOGFILE = ] COMMANDFILE [PARAM] [/SWITCHES]
        -DCOM [ LOGFILE = ] COMMANDFILE [PARAM] [/SWITCHES]

     THE DCOM COMMAND WORKS IDENTICALLY TO TYPING "R PCOM ;" FOLLOWED BY
     THE  APPROPRIATE  COMMAND-LINE  SYNTAX.  THE PCOM COMMAND, HOWEVER,
     TELLS THE PCOM PROGRAM TO PROCESS THE JOB IN NODETACH  MODE.   (SEE
     THE SECTION ON OPTION SWITCHES BELOW FOR FURTHER INFORMATION).
PAGE 2-2			PCOM.DOC     THU 05-JUL-84 9:56

PAGE 3-1			PCOM.DOC     THU 05-JUL-84 9:56

PCOM - PERIODIC COMMAND FILE PROCESSOR FOR TYMCOM-X               PAGE 3
GETTING STARTED


          IF THE LOGFILE IS NOT SPECIFIED  ON  THE  COMMAND  LINE,  PCOM
     READS  THE FIRST LINE OF THE INPUT COMMAND FILE TO SEARCH FOR A LOG
     FILE SPECIFICATION IN THE FORM:

        :LOGFILE LOGFILENAME

     WHERE "LOGFILENAME" IS THE NAME OF THE FILE INTO WHICH PCOM  WRITES
     LOGGING INFORMATION.  FOR A LIMITED TIME THE TYMCOM-IX PERP FORMAT:

        :LOGFILENAME

     WILL ALSO BE ACCEPTED.  HOWEVER, A WARNING MESSAGE WILL BE  PRINTED
     AS A REMINDER TO CONVERT PERP COMMAND FILES TO USE PCOM FORMAT.  IF
     A LOGFILE HAS NOT BEEN SPECIFIED EITHER ON THE COMMAND LINE OR  THE
     FIRST  LINE OF THE COMMANDFILE, PCOM WILL GENERATE A LOGFILENAME OF
     THE FORM ###PCO.LOG WHERE "###" IS THE FRAME  NUMBER  OF  THE  PCOM
     PROCESSOR.



     4.0  OPTION SWITCHES

          PCOM ALLOWS THE USER TO SPECIFY THE FOLLOWING OPTION  SWITCHES
     ON THE INITIAL COMMAND LINE, OR ON THE COMMAND-FILE PROMPT LINE.

        /APPEND     - IF LOGGING, APPEND TO THE SPECIFIED LOG FILE
        /DETACH     - RUN THE JOB IN DETACHED MODE  (DEFAULT)
        /HELP[:ARG] - PRINTS A HELPFUL MESSAGE
                      /HELP OR ?     PRINTS A HELPFUL MESSAGE
                      /HELP:TEXT     SAME AS /HELP
                      /HELP:SWITCHES PRINTS A BRIEF LIST OF SWITCHES
        /LICENSE    - PASS USER'S CURRENT LICENSE TO THE PROCESSING
     FRAME
        /LOG[:ARG]  - SPECIFY LOG FILE CREATION AND DELETION CRITERIA
                      /LOG:NONE   - DO NOT CREATE A LOGFILE (/NOLOG)
                      /LOG:ON     - ALWAYS CREATE A LOGFILE (/LOG)
                      /LOG:DELETE - CREATE A LOG, DELETE IT WHEN DONE
                      /LOG:ERROR  - CREATE A LOG, DELETE IF NO ERRORS
        /MAIL       - SEND MAIL WHEN THE PCOM JOB COMPLETES
        /NEWS       - PRINTS THE LATEST ENHANCEMENTS, IF ANY
        /SUPERSEDE  - OVERWITE EXISTING LOGFILE, IF ANY  (DEFAULT)
        /TIME:N     - SET THE TIME LIMIT FOR PROCESSING TO N MINUTES
        /TRULIMIT:N - SET THE TRU LIMIT FOR PROCESSING TO N TRUS
        /WATCH      - WATCH THE PROGRESS OF THE DETACHED PCOM PROCESS


          IF NO SWITCHES ARE SPECIFIED, THE NORMAL  DEFAULT  VALUES  FOR
     THE  OPTION  SWITCHES  ARE:   /DETACH,  /LOG,  /MAIL,  /TIME:60 AND
     /SUPERSEDE.  OF COURSE, THESE DEFAULTS MAY BE OVERRIDDEN SIMPLY  BY
     SPECIFYING  THE  DESIRED  OPTION  WITH  THE APPROPRIATE SWITCH.  AS
     MENTIONED ABOVE,  THE  PCOM  COMMAND  CHANGES  THE  DEFAULT  OPTION
     SWITCHES TO /NODETACH, /NOMAIL AND /LOG:DELETE.
PAGE 4-1			PCOM.DOC     THU 05-JUL-84 9:56

PCOM - PERIODIC COMMAND FILE PROCESSOR FOR TYMCOM-X               PAGE 4
OTHER PCOM FEATURES


     5.0  OTHER PCOM FEATURES

          AS MENTIONED EARLIER, PCOM COMMAND  FILES  MAY  CONTAIN  XEXEC
     COMMANDS,  INPUT  TO  PROGRAMS AND VARIOUS COMMANDS TO PCOM ITSELF.
     THESE IMBEDDED PCOM COMMANDS ARE SIMILAR TO THOSE AVAILABLE IN  THE
     TYMCOM-IX  PERP SYSTEM AND HAVE THE SAME FORMAT.  EACH PCOM COMMAND
     MUST BEGIN IN COLUMN 1 WITH A COLON (:), FOLLOWED IMMEDIATELY  WITH
     THE COMMAND.

      :COM <FILE>         - BEGINS TAKING COMMANDS FROM THE NAMED  FILE.
                            COMMAND  FILES MAY BE NESTED APPROXIMATELY 5
                            DEEP WITH THIS COMMAND.  AN OPTIONAL  SYNTAX
                            INCLUDES  SPECIFYING  PARAMETERS ON THE SAME
                            LINE AFTER THE FILENAME.  FOR EXAMPLE,
                                :COM <FILE> PARAMETER,PARAMETER,...
      :<PAR>=<VAL> [,...] - ASSIGNS VALUE "VAL" TO PARAMETER "PAR".
      :DEFINE <PAR>=<VAL> - ASSIGNS VALUE  "VAL"  TO  PARAMETER-VARIABLE
                            "PAR".    THIS   COMMAND  IS  IDENTICAL  TO,
                            :<PAR>=<VAL> ABOVE AND  IS  INCLUDED  TO  BE
                            COMPATIBLE WITH TYMCOM-IX PERP.  NOTE:  BOTH
                            FORMS  OF  THIS   COMMAND   ALLOW   MULTIPLE
                            ASSIGNMENTS.
      :ESCAPE             - FORCES THE PROCESSING FRAME TO EXEC LEVEL.
      :GOTO LABEL         - TRANSFERS CONTROL TO LABEL.
      :LOGFILE <FILE>     - USED ON THE FIRST LINE OF THE  COMMAND  FILE
                            TO  DEFAULT  THE  LOG-FILE  NAME  TO "FILE".
                            THIS  COMMAND  SUPERSEDES   THE   PERP-STYLE
                            CONVENTION  OF  ":LOGFILENAME"  ON THE FIRST
                            LINE OF THE PERP COMMAND FILE.
      :PARAMETERS <PARAMETER-NAME-LIST>
                          - DEFINE A LIST OF PARAMETER NAMES.
      :QUIT               - CAUSE  NORMAL  TERMINATION  OF  THE  RUNNING
                            FRAME.
      :REMARK             - THIS LINE IS A COMMENT TO PCOM.
      :SEND KEY ARG       - TRANSMITS UNFORMATTED TEXT TO THE PROCESSING
                            FRAME.   NORMALLY,  PCOM  REMOVES LINE-FEEDS
                            AND OTHER END OF LINE  CHARACTERS  FROM  THE
                            COMMAND  FILE.   IN SOME INSTANCES, THE USER
                            WILL  NEED  TO   SEND   SPECIAL   CHARACTERS
                            DIRECTLY.
      :SEND CHARACTER NN  - TRANSMITS THE CHARACTER REPRESENTED  BY  THE
                            OCTAL NUMBER NN.
      :SEND STRING "TEXT" - TRANSMITS THE LITERAL STRING "TEXT".
      :SEND FILE <FILE>   - TRANSMITS THE CONTENTS OF <FILE>.  LINE-FEED
                            CHARACTERS     IMMEDIATELY    FOLLOWING    A
                            CARRIAGE-RETURN ARE  REMOVED.   HOWEVER,  NO
                            OTHER DATA INTERPRETATION OCCURS.
      :STOP               - CAUSE ABNORMAL TERMINATION  OF  THE  RUNNING
                            FRAME.   IF  THE OPTION SWITCH /LOG:ERROR IS
                            SPECIFIED, THEN :STOP WILL CAUSE THE LOGFILE
                            TO BE SAVED.
      :TIME N             - CHANGES THE TIME LIMIT TO  N  MINUTES.   THE
                            DEFAULT  TIME  LIMIT FOR JOB EXECUTION IS 60
                            MINUTES.
PAGE 4-2			PCOM.DOC     THU 05-JUL-84 9:56

PAGE 5-1			PCOM.DOC     THU 05-JUL-84 9:56

PCOM - PERIODIC COMMAND FILE PROCESSOR FOR TYMCOM-X               PAGE 5
ADVANCED FEATURES - SUBSTITUTION PARAMETERS


     6.0  ADVANCED FEATURES - SUBSTITUTION PARAMETERS

          PCOM HAS THE CAPABILITY  TO  PASS  PARAMETERS  INTO  THE  PCOM
     COMMAND  FILE  FROM  COMMAND  LEVEL.   THIS  IS  DONE  THROUGH  THE
     INTRODUCTION OF ORDERED KEYWORDS DEFINED BY THE USER.  TO  USE  THE
     PARAMETER  SUBSTITUTION  MECHANISM,  THE USER MUST EITHER SPECIFY A
     LIST OF PARAMETERS ON THE COMMAND  LINE,  OR  PROVIDE  A  PARAMETER
     DECLARATION INSIDE THE COMMAND FILE.

          EACH OF THE FOLLOWING COMMAND LINES, WILL ENABLE THE PARAMETER
     SUBSTITUTION  MECHANISM.  THE FIRST TWO LINES ARE ENTERED TO XEXEC,
     AND THE REMAINING TWO LINES WOULD BE PART OF A PCOM  COMMAND  FILE.
     IF  NEITHER  OF  THE  PARAMETER-LIST  OR THE PARAMETER-NAME-LIST IS
     SPECIFIED, PCOM INITIALLY DISABLES PARAMETER SUBSTITUTION.

         -R PCOM ; COMMANDFILE PARAMETER-LIST /SWITCHES
         -PCOM LOGFILE=COMMANDFILE PARAMETER-LIST /SWITCHES
         :COM COMMANDFILE PARAMETER-LIST
         :PARAMETERS PARAMETER-NAME-LIST


     PARAMETER-LIST      IS THE LIST OF VALUES, SEPARATED BY  COMMAS  OR
                         SPACES,  WHICH  THE  USER  WANTS  TO SUBSTITUTE
                         INSIDE THE PCOM COMMAND FILE.  IMBEDDED  SPACES
                         AND SPECIAL CHARACTERS MAY BE USED BY ENCLOSING
                         THE SUBSTITUTION STRING  IN  SINGLE  OR  DOUBLE
                         QUOTES, (') OR (").

     PARAMETER-NAME-LIST IS THE LIST OF PARAMETER NAMES WHICH  THE  USER
                         WANTS TO HAVE REPLACED WITH THE VALUES FROM THE
                         PARAMETER-LIST.  PARAMETER  NAMES  MAY  CONTAIN
                         ANY  ALPHABETIC  CHARACTER (A-Z AND A-Z), WHERE
                         "A" IS THE SAME AS  "A",  AND  THE  PUNCTUATION
                         CHARACTERS DASH (-) AND UNDERSCORE (_).



     6.1  PARAMETERS TYPES

          THERE ARE THREE DISTINCT TYPES OF PARAMETERS:  ORDERED,  NAMED
     AND  PRE-DECLARED.   THE  "ORDERED"  PARAMETERS  ARE TAKEN FROM THE
     PARAMETER-LIST  IN  THE  ORDER  THEY  ARE  SPECIFIED  AND   MATCHED
     ONE-BY-ONE  AGAINST THE NAMES SPECIFIED IN THE PARAMETER-NAME-LIST.
     FOR EXAMPLE:

         -R PCOM ; FILENAME SUB1,SUB2,SUB3,...,SUBN
         :PARAMETERS  A,B,C,...,N

     WILL MATCH THE STRING "SUB1" WITH PARAMETER NAME "A",  "SUB2"  WITH
     "B", "SUB3" WITH "C", AND SO ON.  "NAMED" PARAMETERS ALLOW THE USER
     TO SPECIFY THE DEFAULT VALUE OF A DECLARED PARAMETER  NAME,  OR  TO
     DECLARE NEW PARAMETERS BY NAME.  FOR EXAMPLE:

PAGE 6-1			PCOM.DOC     THU 05-JUL-84 9:56

PCOM - PERIODIC COMMAND FILE PROCESSOR FOR TYMCOM-X               PAGE 6
ADVANCED FEATURES - SUBSTITUTION PARAMETERS


         -R PCOM ; FILENAME FILE=TEST,NEW=WANTED,OLD="A FORMALITY"
         :PARAMETERS  USER,FILE,SYSTEM

     WILL ASSIGN THE STRING "TEST" TO PARAMETER FILE AND THE NULL STRING
     TO  PARAMETERS  USER  AND  SYSTEM.   IT  WILL  ALSO  DEFINE TWO NEW
     PARAMETER NAMES:  NEW AND OLD, AND  WILL  ASSIGN  THEM  THE  VALUES
     SPECIFIED "WANTED" AND "A FORMALITY".

          THE INTERACTION BETWEEN "ORDERED" AND  "NAMED"  PARAMETERS  IS
     VERY  IMPORTANT TO UNDERSTAND.  IN THE PREVIOUS EXAMPLE, THERE WERE
     THREE PARAMETERS SPECIFIED:  FILE, NEW AND OLD, AND THREE "ORDERED"
     PARAMETERS DECLARED:  USER, FILE AND SYSTEM.  BOTH OF THE "ORDERED"
     PARAMETERS NOT SPECIFIED:  USER AND SYSTEM WERE ASSIGNED  THE  NULL
     STRING.  THE "ORDERED" PARAMETER FILE WAS ALSO "NAMED", AND THEREBY
     WAS ASSIGNED THE STRING VALUE "TEST".  IF  INSTEAD,  THE  FOLLOWING
     WAS SPECIFIED:


         -R PCOM ; FILENAME SYS,PROG,20,FILE=FOO
         :PARAMETERS USER,FILE,SYSTEM

     THEN THE VALUES "SYS",  "PROG"  AND  "20"  WOULD  BE  MATCHED  WITH
     PARAMETER  NAMES  USER,  FILE  AND SYSTEM RESPECTIVELY.  FILE WOULD
     ALSO BE ASSIGNED THE VALUE "FOO".  AS MIGHT BE GUESSED, FILE CANNOT
     CONTAIN BOTH "FOO" AND "PROG".  THUS, SOME FORM OF ARBITRATION MUST
     OCCUR.  THIS IS DONE BY HAVING "NAMED" PARAMETERS PROVIDE "DEFAULT"
     VALUES  TO  PARAMETER  NAMES.   THE  PARAMETER FILE IS ASSIGNED THE
     DEFAULT VALUE "FOO" FROM THE COMMAND LINE.  WHEN THE  ":PARAMETERS"
     STATEMENT  IS  ENCOUNTERED WITHIN THE COMMAND FILE, THIS DEFAULT IS
     THEN OVERRIDDEN WITH THE SPECIFIED VALUE "PROG".   IF  THE  DEFAULT
     VALUE  IS  CONSTANT,  THEN  IT  MAY BE SPECIFIED INSIDE THE COMMAND
     FILE:

         :PARAMETERS  USER, FILE="PROG", SYSTEM="20"

     TO ALLOW THE DEFAULT VALUE TO BE USED, THE USER SIMPLY  OMITS  THAT
     PARAMETER FROM THE COMMAND LINE.  FOR EXAMPLE:

         -R PCOM ; FILENAME SYS,PROG,20
         -R PCOM ; FILENAME SYS
         -R PCOM ; FILENAME SYS,,20
         -R PCOM ; FILENAME USER=SYS

     WOULD ALL PRODUCE THE SAME RESULTS  USING  THE  ":PARAMETERS"  LINE
     FROM  ABOVE.   AN  IMPORTANT  NOTE:   ALL "ORDERED" PARAMETERS MUST
     APPEAR PRIOR TO ANY "NAMED" PARAMETERS ON THE  COMMAND  LINE.   FOR
     EXAMPLE,

         -R PCOM ; FILENAME SYS, SYSTEM=20, PROG

     IS ILLEGAL, AND AN ERROR WILL RESULT.  AS MENTIONED  ABOVE,  IT  IS
     REASONABLE  TO HAVE DEFAULT VALUES SPECIFIED FOR VARIOUS PARAMETERS
     IN THE COMMAND FILE.  HOWEVER, A USER FAMILIAR WITH THE CONTENTS OF
     A  PARTICULAR  COMMAND FILE MAY PREFER TO SPECIFY A DIFFERENT VALUE
PAGE 6-2			PCOM.DOC     THU 05-JUL-84 9:56

PAGE 7-1			PCOM.DOC     THU 05-JUL-84 9:56

PCOM - PERIODIC COMMAND FILE PROCESSOR FOR TYMCOM-X               PAGE 7
ADVANCED FEATURES - SUBSTITUTION PARAMETERS


     ON THE COMMAND LINE.  THUS THE ORDER OF PRECEDENCE FOR DEFAULTS  IS
     AS FOLLOWS:

         (1) - A SPECIFIED "ORDERED" PARAMETER ON THE COMMAND LINE.
         (2) - A SPECIFIED "NAMED" PARAMETER ON THE COMMAND LINE.
         (3) - A SPECIFIED DEFAULT VALUE IN THE COMMAND FILE.



     6.2  PRE-DECLARED PARAMETERS

          THE THIRD TYPE OF PARAMETER IS  THE  "PRE-DECLARED"  PARAMETER
     VARIABLE.   THESE  PARAMETERS ARE PRE-DECLARED BY PCOM AND ARE USED
     TO EXAMINE OR CHANGE THE USER ENVIRONMENT.   PCOM  CURRENTLY  KNOWS
     ABOUT THE FOLLOWING SYSTEM VARIABLES:

     $DAYTIME      - IS A STRING CONTAINING THE CURRENT TIME OF  DAY  IN
                     THE  FORM HH:MM:SS USING THE 24-HOUR CLOCK 00:00:00
                     TO 23:59:59.  (READ-ONLY)
     $DELIMITER    - IS A CHARACTER VARIABLE WHICH CONTAINS THE VALUE OF
                     THE  CHARACTER  USED  TO  DELIMIT  SUBSTITUTION  OF
                     PARAMETERS.  INITIALLY THE VALUE IS BACK-SLASH (\).
     $FALSE        - IS A BOOLEAN VARIABLE EQUAL TO 0.  (READ-ONLY)
     $LOGGING      - IS A BOOLEAN VARIABLE FOR  CONTROLLING  THE  OUTPUT
                     SENT  TO THE LOG FILE (IF ONE EXISTS).  IF THERE IS
                     NO LOG FILE, THEN THIS VARIABLE  BECOMES  READ-ONLY
                     AND IS EQUAL TO 0.  (FALSE)
     $MAIL         - IS A BOOLEAN VARIABLE WHICH CONTROLLS WHETHER  MAIL
                     IS  TO  BE  SENT TO THE USER UPON COMPLETION OF THE
                     PCOM JOB.  THE INITIAL VALUE DEPENDS ON  THE  VALUE
                     OF THE /MAIL SWITCH.
     $SUBSTITUTION - IS A BOOLEAN VARIABLE FOR CONTROLLING  THE  IN-LINE
                     SUBSTITUTION OF PARAMETERS.  THE INITIAL VALUE IS 0
                     (FALSE) UNLESS A  PARAMETER  IS  SPECIFIED  ON  THE
                     COMMAND   LINE   OR   A  :PARAMETERS  STATEMENT  IS
                     ENCOUNTERED.
     $TIMELIMIT    - IS A DECIMAL VALUE CONTAINING  THE  REMAINING  TIME
                     LIMIT  FOR  THE PROCESSING FRAME.  THIS VARIABLE IS
                     SET INITIALLY TO THE VALUE OF THE /TIME SWITCH  AND
                     MAY  BE  RESET  DIRECTLY OR BY THE :TIME N COMMAND.
                     IF THIS VARIABLE IS SET TO 0, THEN THERE IS NO TIME
                     LIMIT.
     $TRUE         - IS A BOOLEAN VARIABLE EQUAL TO 1.  (READ-ONLY)
     $TRULIMIT     - IS A DECIMAL VALUE CONTAINING  THE  REMAINING  TRUS
                     FOR   THE   PROCESSING  FRAME.   THIS  VARIABLE  IS
                     INITIALLY SET TO 0 WHICH MEANS  THAT  THERE  IS  NO
                     INITIAL  TRU  LIMIT.   SETTING  THIS VARIABLE MEANS
                     THAT FROM THE CURRENT POINT, THAT MANY TRUS MAY  BE
                     ACCRUED  BEFORE  THE  JOB IS STOPPED.  THIS IS VERY
                     USEFUL IF THE USER EXPECTS A PROGRAM TO USE A SMALL
                     NUMBER OF TRUS AND SOMETHING GOES WRONG.  PCOM WILL
                     PREVENT THE PROGRAM FROM RUNNING UP TOO MANY TRUS.

PAGE 8-1			PCOM.DOC     THU 05-JUL-84 9:56

PCOM - PERIODIC COMMAND FILE PROCESSOR FOR TYMCOM-X               PAGE 8
ADVANCED FEATURES - SUBSTITUTION PARAMETERS


     6.3  USING PARAMETER SUBSTITUTION

          SUBSTITUTION PARAMETERS MAY BE USED ANYWHERE WITHIN A  COMMAND
     FILE  AFTER  THEY HAVE BEEN DECLARED, INCLUDING PCOM COMMAND LINES.
     THE WAY TO INVOKE A SUBSTITUTION IS TO  PRECEDE  THE  NAME  OF  THE
     PARAMETER   WITH   THE   PARAMETER-DELIMITER  CHARACTER.   THIS  IS
     INITIALLY SET TO THE CHARACTER BACKSLASH (\) BUT MAY BE CHANGED  AT
     THE  DISCRETION  OF  THE  USER.   FOR EXAMPLE, TO USE THE PARAMETER
     NAMED USER FROM THE EXAMPLES ABOVE:

         (\USER\)
            OR
         COPY (\USER\)FILE.EXT TO SAME

     WOULD FILL IN THE USERNAME FROM THE PARAMETER USER.  THE  PARAMETER
     NAME MUST BE PRECEEDED BY THE DELIMITER AND MUST BE TERMINATED WITH
     A SECOND DELIMITER.  FOR EXAMPLE, "\PAR-NAME\TEXT" OR "\PAR\\PAR\".

          THE USER  MAY  ALSO  DECLARE  "NAMED"  PARAMETERS  INSIDE  THE
     COMMAND FILE VIA THE ":DEFINE" COMMAND.  FOR EXAMPLE:

         :DEFINE RHYME="MARY HAD A LITTLE LAMB.", SPEC="\NAME\.\EXT\"
           OR
         :RHYME="MARY HAD A LITTLE LAMB.", SPEC="\NAME\.\EXT\"

     DECLARES THE TWO PARAMETER NAMES:  RHYME AND SPEC AND ASSIGNS  THEM
     THEIR  RESPECTIVE  VALUES.   NOTE  THAT  THIS COMMAND IS USEFUL FOR
     COMBINING PREVIOUSLY DEFINED PARAMETERS (E.G. NAME  AND  EXT)  INTO
     NEW PARAMETERS.

          AS MENTIONED ELSEWHERE, THE DELIMITER CHARACTER MAY BE CHANGED
     AT  THE DISCRETION OF THE USER.  TO CHANGE THE DELIMITER TO ANOTHER
     CHARACTER  (OTHER  THAN  "\"),  SIMPLY  SET  THE   VALUE   OF   THE
     PRE-DECLARED  PARAMETER VARIABLE "$DELIMITER" TO ANOTHER CHARACTER.
     FOR EXAMPLE,

         :$DELIMITER="<CHAR>"

     WHERE "CHAR" IS THE NEW  DESIRED  DELIMITER  CHARACTER.   THE  USER
     SHOULD  NOTE  AND  UNDERSTAND  THAT  THE  SETTING  OF THE DELIMITER
     FOLLOWS THE SCOPE  RULES  OF  ALGOL-LIKE  LANGUAGES.   A  DELIMITER
     DECLARED  IN  AN  OUTER  LEVEL COMMAND FILE IS PASSED DOWN TO INNER
     LEVEL COMMAND FILES.  HOWEVER, A DELIMITER DECLARED INSIDE AN INNER
     LEVEL  COMMAND  FILE  REVERTS  BACK  TO  THE PREVIOUS DELIMITER SET
     OUTSIDE THAT FILE WHEN THE INNER LEVEL FILE IS COMPLETED.

     IMPORTANT:  THE DELIMITER MUST BE A CHARACTER WHICH IS NOT VALID IN
     A  PARAMETER  NAME,  OTHERWISE  PCOM  WILL NOT BE ABLE TO DETERMINE
     WHERE YOUR PARAMETER NAME "REALLY" ENDS.
PAGE 9-1			PCOM.DOC     THU 05-JUL-84 9:56

      
PAGE 1-1			NODLOG.DOC     THU 05-JUL-84 9:56

*************************************************************************
*                                                                       *
*			TYMSHARE MICRONODE/11				*
*			 N O D E       L O G                            *
*                                                                       *
*************************************************************************

(NOVEMBER 18, 1983)

_________________________________________________________________________
                                                                 
 NODE  HOST  NEIGH-  SYNC  SYNC   GRO-    GENERAL DESCRIPTION    
  #     #    BOR #  LINE # SPEED  UPS                            
-------------------------------------------------------------------------

-------------------------------------------------------------------------
  54     54   2037      1   4800    3  FIRST NODE FOR 2020 HOST  
             KH:551                      54 IN DEMO ROOM OF VG3. 
                                         CONNECTION TO BUBBNET   
-------------------------------------------------------------------------
  54A    54   XXXX      X   XXXX    X  SECOND NODE FOR HOST 54.  
                                         NO TYMNET  CONNECTION.  
-------------------------------------------------------------------------
   64   170   2040      9   4800    3  PARIS (CEGI-TYMSHARE)     
                                                                 
-------------------------------------------------------------------------
  104   575   2243      8   9600    6  OFFICE-11. F4/AUGMENT.    
             KH:1562                     VG2 LAB ROOM.           
-------------------------------------------------------------------------
  112  1087   2457     15   9600    6  OFFICE-12. F4/AUGMENT.    
             KH 783                      BUILDING C.             
-------------------------------------------------------------------------
  124   193   2405     15   9600    6  OFFICE-16. F4/AUGMENT.    
             KH 1860                     BUILDING C.             
-------------------------------------------------------------------------
  152   301   2030      5   4800    2  PARIS (CEGI-TYMSHARE) 2020
                                       AT CT(ST.-CLOUD)          
-------------------------------------------------------------------------
  161  2794   3035      ?   4800    3  INFOMEDIA/BURLINGAME, CA  
             KH:2591                    RSX-11M DYNASTY          
-------------------------------------------------------------------------
  167   895   2045     14   9600    6  OFFICE-7. F3/AUGMENT.     
             KH:1746                     BUILDING A.             
-------------------------------------------------------------------------
  177   232   3341      9   9600    6  OFFICE-3-2B. F4/AUGMENT.  
             KH 3478                     BUILDING A.             
-------------------------------------------------------------------------
  207   249   2405     ??   9600    6  OFFICE-17. F4/AUGMENT.    
             KH 1860                     BUILDING C.             
-------------------------------------------------------------------------
  210    92   2030      6   4800    2  PARIS (CEGI-TYMSHARE) 2020
                                       AT CT(ST.-CLOUD)          
-------------------------------------------------------------------------
  212  1088   2170     15   9600    6  OFFICE-01. F4/AUGMENT.    
             KH:1332                     BUILDING C.             
-------------------------------------------------------------------------
  213   264   2040      5   4800    2  PARIS (CEGI-TYMSHARE) 2020
                                       AT CT FOR SOCIETE GENERALE
PAGE 1-2			NODLOG.DOC     THU 05-JUL-84 9:56

-------------------------------------------------------------------------
  260  1643   2456     15   9600    6  OFFICE-02. F4/AUGMENT.    
             KH:766                      BUILDING C.             
-------------------------------------------------------------------------
PAGE 2-1			NODLOG.DOC     THU 05-JUL-84 9:56


(NOVEMBER 18, 1983)

_________________________________________________________________________
                                                                 
 NODE  HOST  NEIGH-  SYNC  SYNC   GRO-    GENERAL DESCRIPTION    
  #     #    BOR #  LINE # SPEED  UPS                            
-------------------------------------------------------------------------

-------------------------------------------------------------------------
  304   384   3340     ??   9600    6  OFFICE-12/2. F4/AUGMENT.  
             KH:3428                     BUILDING C.             
-------------------------------------------------------------------------
  350  2399   2554     11   4800    4  PAYMENT AND TRANSFER RSTS,
             KH:2103                   LEWISTON, MAINE.          
       2407    431      1   9600    6                            
-------------------------------------------------------------------------
  354  1311   2045      7   9600    6  OFFICE-14. F4/AUGMENT.    
             KH:1746                     BUILDING A.             
-------------------------------------------------------------------------
  356   145   2356     14   9600    6  TYMSOFT TEST MACHINE.     
             KH:1775                   2020/TOPS-20.             
-------------------------------------------------------------------------
  364  896    2045     13   9600    6  OFFICE-6. F3/AUGMENT.     
             KH:1746                     BUILDING A              
-------------------------------------------------------------------------
  370  1292   2040     12   4800    2  PARIS (CEGI-TYMSHARE) 2020
                                       AT CT FOR SOCIETE GENERALE
-------------------------------------------------------------------------
  375   397   2141      2   9600    4  BLDG. G, A BUBBNET NODE.  
             KH:629                     RSX-11M DYNASTY          
-------------------------------------------------------------------------
  421  897    201       1   9600    6  OFFICE-3 BUBB LAB ROOM.   
                                                                 
-------------------------------------------------------------------------
  470  1051  2503       6   4800    3  RAINIER BANK.             
             KH:872                      2020/TYMCOM-X. INSD     
-------------------------------------------------------------------------
  470B 1051   XXXX      X   XXXX    X  REMOTE NODE FOR RAINIER   
                                         BANK. NO TYMNET LINK.   
-------------------------------------------------------------------------
  514   33    2014      4   9600    6  TRW PRIVATE NETWORK,      
              2015      4           4    2020/TYMCOM-X. BASE.    
-------------------------------------------------------------------------
  515  818    2242     11   4800    2  OFFICE-F. AUGMENT TEST    
             KH:1561                     FOONLEY IN MT. VIEW.    
-------------------------------------------------------------------------
  522  148    2243      5   9600    6  BASE NODE FOR F4/AUGMENT  
             KH:1562                     HOST 148 (OFFICE-4).    
                                         VG-2.                   
-------------------------------------------------------------------------
  522A XXX    XXXX      X   XXXX    X  REMOTE NODE TO 522.       
                                                                 
-------------------------------------------------------------------------
  522B XXX    XXXX      X   XXXX    X  REMOTE NODE TO 522A.      
                                                                 
-------------------------------------------------------------------------
  543  185    2252      8   9600    6  OFFICE-5. AUGMENT DEVELOP-
PAGE 2-2			NODLOG.DOC     THU 05-JUL-84 9:56

             KH:573                      MENT MACHINE. BLDG. A   
-------------------------------------------------------------------------
  545  169   3001       2   4800    3  MALLENCROKT. INSD         
             KH:2492                     2020/TYMCOM-X. ON=1676  
-------------------------------------------------------------------------
PAGE 3-1			NODLOG.DOC     THU 05-JUL-84 9:56


(NOVEMBER 18, 1983)

_________________________________________________________________________
                                                                 
 NODE  HOST  NEIGH-  SYNC  SYNC   GRO-    GENERAL DESCRIPTION    
  #     #    BOR #  LINE # SPEED  UPS                            
-------------------------------------------------------------------------

-------------------------------------------------------------------------
  552  118    2243      9   9600    2  CORPORATE HEADQUARTERS    
       930   KH:1562                      (VG2-B).  BASE FOR F3  
       934                                HOSTS - 930, 934.      
-------------------------------------------------------------------------
  553  2300   3146      2   9600    3  F4 TEST NODE. OFFICE-13   
             KH:2782                     FREMONT OFFICE.         
-------------------------------------------------------------------------
  554  118    XXXX      X   XXXX    X  BASE FOR 2020/TYMCOM-X    
                                         HOST 118.  NO TYMNET    
                                         LINK. (BUBBNET LINK)    
-------------------------------------------------------------------------
  555  118    2033          9600    2  SECOND BASE FOR HOST 118, 
  (67)                                   BUBBNET HOST 67. BUBBNET
                                         LINK ONLY.              
-------------------------------------------------------------------------
  625   59    2040      6   4800    2  PARIS (CEGI-TYMSHARE)     
                                         2020/TYMCOM-X           
-------------------------------------------------------------------------
  642   24    2457      9   4800    2  BASE NODE FOR OTIS 2020   
             KH:783                      HOST 24.                
-------------------------------------------------------------------------
  662  2193   2052      1   9600    6  BASE NODE FOR F4/AUGMENT  
             KH:1666                     HOST OFFICE-10.         
                                         BUILDING A.             
-------------------------------------------------------------------------
  732  370    2247     10   4800    2  FIRST NODE FOR FAYEZ'S    
             KH:1566                     2020 HOST. (HOUSTON)    
                                                                 
-------------------------------------------------------------------------
  732A 370    XXXX      X   XXXX    X  SECOND NODE  FOR FAYEZ.   
                                         NO TYMNET  CONNECTION.  
                                                                 
-------------------------------------------------------------------------
  751  184    2040      7   4800    2  MICROBASE. CEGI-TYMSHARE  
                                       2020 AT UNCEF             
-------------------------------------------------------------------------
  764  180    2171     13   9600    6  BASE NODE FOR F4/AUGMENT  
             KH:1333                     HOST OFFICE-12.         
                                         BUILDING C.             
-------------------------------------------------------------------------
  1030 XXX    2056          9600    8  MICROSAT ON BUBBNET.      
                                         TYMNET QA               
-------------------------------------------------------------------------
  1162 XXX    2007     15   9600    2  FIELD TEST MICROSAT IN    
             KH:127                      BLDG. D                 
-------------------------------------------------------------------------
  1163 XXX    2153      4   9600    2  DCP TEST MICROSAT IN      
             KH:627                      BLDG. D LAB.            
PAGE 3-2			NODLOG.DOC     THU 05-JUL-84 9:56

-------------------------------------------------------------------------
  1200 XXXX   2560      1   9600    6  AUGMENT MARKETING TYMSAT  
             KH 2111                     NODE IN VIENNA VA.      
-------------------------------------------------------------------------
PAGE 4-1			NODLOG.DOC     THU 05-JUL-84 9:56


(NOVEMBER 18, 1983)

_________________________________________________________________________
                                                                 
 NODE  HOST  NEIGH-  SYNC  SYNC   GRO-    GENERAL DESCRIPTION    
  #     #    BOR #  LINE # SPEED  UPS                            
-------------------------------------------------------------------------

-------------------------------------------------------------------------
  1376 XXX    1372      ?   9600    1  ?? TYMSAT ??              
                                                                 
-------------------------------------------------------------------------
  1421 XXXX   1155      X   4800    2  TYMSAT NODE, NO HOST. HAS 
                                          A TYMNET CONNECTION.   
-------------------------------------------------------------------------
  1454 XXX    1111      X   4800    4  MICROSAT IN EASTERN REGION
                                         FIELD SUPPORT OFFICE    
-------------------------------------------------------------------------
  1605 XXX    473       X   9600    4  SLIGOS EXPERIMENTAL       
                                         MICROSATS.              
                                                                 
-------------------------------------------------------------------------
  SRI2   1                             SRI NODE FOR F4.          
                                                                 
-------------------------------------------------------------------------
 2340         2006     13   9600    8  BLDG. D LAB. T-II TEST    
 K:340       KH:126                      NODE.                   
-------------------------------------------------------------------------
 2341         2044     10   9600    8  BLDG. D LAB. USER TEST    
 K:341       KH:556                      T-II NODE DPV           
-------------------------------------------------------------------------
 2342  399    2153      5   9600    8  BLDG. D LAB. BASE FOR     
 K:342       KH:627                      PDP 11/34 HOST (RSX-11M 
                                          OR RSTS). BUBBNET LINK.
       398                             EXPERIMENTAL X.25 DTE.    
                                         BUBNET HOST 396.        
-------------------------------------------------------------------------
 2343         2007     14   9600    8  BLDG. D LAB. USER TEST    
 K:343       KH:127                      T-II NODE               
-------------------------------------------------------------------------
 2344   54    2037      0   4800    8  FIRST NODE FOR 2020 HOST  
 K:344       KH:551                      54 IN DEMO ROOM OF VG3. 
                                         CONNECTION TO BUBBNET   
-------------------------------------------------------------------------
 2345         2007     15   9600    8  MICROSAT IN BLDG D LAB.   
 K:345       KH:127                      DPV TEST NODE           
-------------------------------------------------------------------------
 2346   67    2033     13   9600    8  BASE FOR EXPERIMENTAL HOST
 K:346       KH:547                      BUBBNET HOST 67. BUBBNET
                                         LINK ONLY.              
-------------------------------------------------------------------------
 2347         2033     11   9600    8  MICROSAT IN VG2 LAB.      
 K:347       KH:547                      FIELD TEST PRODUCTION   
                                         NODE - TTMS USERS.      
                                        A BUBBNET NODE.          
-------------------------------------------------------------------------
 2350         2044      7   9600    8  BLDG. D LAB. FALCON ROM   
PAGE 4-2			NODLOG.DOC     THU 05-JUL-84 9:56

             KH:556                      T-II NODE               
-------------------------------------------------------------------------
 2351         2044      8   1200    8  BLDG. D LAB. TYMSQUIRT    
             KH:556                       ROM T-II NODE          
-------------------------------------------------------------------------
PAGE 5-1			NODLOG.DOC     THU 05-JUL-84 9:56


(NOVEMBER 18, 1983)

_________________________________________________________________________
                                                                 
 NODE  HOST  NEIGH-  SYNC  SYNC   GRO-    GENERAL DESCRIPTION    
  #     #    BOR #  LINE # SPEED  UPS                            
-------------------------------------------------------------------------

-------------------------------------------------------------------------
 2352         2046      0   9600    8  MICROSAT IN VG2 LAB.      
 K:352       KH:558                      FIELD TEST PRODUCTION   
              2033      8   9600    8    NODE - MAGNUM & TOPS20  
             KH:547                     A BUBBNET NODE.          
-------------------------------------------------------------------------
 3212   575   2243      8   9600    8  OFFICE-11. F4/AUGMENT.    
             KH:1562                     VG2 LAB ROOM. (NODE 104)
-------------------------------------------------------------------------
 3213  118    2243      9   9600    2  CORPORATE HEADQUARTERS    
       930   KH:1562                      (VG2-B).  BASE FOR F3  
       934                                HOSTS - 930, 934.      
                                          OLD NODE 552           
-------------------------------------------------------------------------

PAGE 1-1			PAKSIM.DOC     THU 05-JUL-84 9:56

00100	PAKCOP WILL NOW WORK UNDER SIMKL USING THE COMMAND FILE
00200	PAKSIM.CMD TO LOAD. HOWEVER, THERE ARE SOME CONSIDERATIONS:
00300	
00400	1) PAKCOP WILL NOT TOLERATE SPURIOUS INTERRUPTS, AND SIMKL
00500	OCCASIONALLY GIVES THEM DUE TO ITS DESIGN. (SIMKL DOESN'T
00600	POLL ALL DEVICE BITS WHEN DECIDING TO GIVE AN INTERRUPT,
00700	RATHER, FOR EVERY INTERRUPT CAUSING BIT SET IN THE DEVICE
00800	STATUS, A COUNT IS INCREMENTED AND THAT MANY INTERRUPTS
00900	ARE GIVEN. THUS, IN THE REAL SYSTEM, IF N BITS GO ON
01000	IN A DEVICE WHICH CAUSE INTERRUPTS AND THE FIRST INTERRUPT
01100	CLEARS THEM ALL, NO MORE INTERRUPTS OCCUR; BUT IN THE
01200	SIMULATOR, N-1 "SPURIOUS" INTERRUPTS HAPPEN.)
01300	TO PATCH THIS, AT SA0INT+1, PATCH THE JRST CHNDIE TO
01400	JEN @CHINT TO IGNORE SPURIOUS INTERRUPTS.
01500	
01600	2) THERE IS A BUG IN PAKCOP WHICH MUST BE FIXED - SKIPN DTEMTD
01700	AT KTY3 SHOULD BE SKIPE DTEMTD. BUG CAUSES SIMULATOR TO LOOP.
01800	
01900	3) OPERATING INSTRUCTIONS: TO TELL SIMKL WHICH UNITS TO PUT ON LINE,
02000	OPEN SIMKL IN DDT AND SET BPANCB+UNIONL TO -1 FOR ON LINE WRITE ENABLE,
02100	1 TO ON LINE WRITE PROTECT. PUT A BREAKPOINT ON DDTBAK, SO THAT
02200	^X WILL GET TO THE BREAKPOINT - THEN $P WILL PROCEED. DDTPC
02300	CONTAINS THE INTERRUPT PC ON A ^X. IF YOU FORGET TO PUT THE BREAKPOINT
02400	ON, SIMKL WILL SAY <DDT>. TO PROCEED FROM THIS, JUST SAY
02500	DDTBAK$G.
02600	
02700	4) BEWARE - IT TAKES A VERY LONG TIME FOR PAKCOP TO COPY
02800	ONE SIMULATED PACK FROM ANOTHER, AND WILL MAKE THE SIMULATED
02900	DISK DATA AND INDEX FILES VERY LARGE. SUGGEST THAT BREAKPOINTS
03000	BE PUT AT PAKCYL TO TEST OUT A CYLINDER OR TWO, AND THEN
03100	DO AN $G AFTER THE AOBJN CYL, TO "COMPLETE" THE COPY.
03200	
03300	5) SINCE THE SIMULATOR DOES NOT SUPPORT THE WRITE FORMAT COMMAND,
03400	THE FORMAT COMMAND IN PAKCOP WILL CAUSE THE SIMULATOR TO BLOW UP.
PAGE 1-1			WLD7A.DOC     THU 05-JUL-84 9:56




WILD.DOC -- CHANGES FROM VERSION 7 TO 7A
JULY, 1975

COPYRIGHT  1974,  1975,  1976,  DIGITAL   EQUIPMENT   CORP.,
MAYNARD, MASS.





1.0 SUMMARY

1.1    THIS RELEASE SUPPORTS THE SCAN GUIDE WORDS OF  'AND',
       'OR', AND 'NOT'.  'OR' TAKE THE REPLACEMENT OF "+" IN
       PREVIOUS VERSIONS FOR DIRECT AND  QUEUE.   "+"  STILL
       WORKS  FOR  THIS  VERSION, BUT WILL BE CHANGED IN THE
       NEXT VERSION TO MEAN ONLY ITS TRADITIONAL MEANING  OF
       FILE  CONCATENATION.   THIS  VERSION  FIXES  ALL SPRS
       PRIOR TO JAN-1975.

1.2    WILD VERSION 7A RUNS ON ALL MONITORS.   IT  HAS  BEEN
       TESTED  ON  6.02.   THERE  ARE NO KNOWN DEFICIENCIES.
       WILD FULLY SUPPORTS THE DATE-75 PROJECT.

1.3    WILD VERSION 7A IS DOCUMENTED  IN  THE  SPECIFICATION
       WILD.RNO.   ALSO,  IT IS DOCUMENTED IMPLICITLY IN THE
       SOFTWARE NOTEBOOK DESCRIPTION OF DIRECT, AND  BRIEFLY
       IN   CHAPTER   ONE  OF  THE  SYSTEM  COMMAND  MANUAL.
       SUPPORTING DOCUMENTATION CAN BE  FOUND  IN  THE  .DOC
       FILES FOR SCAN VERSION 7 AND DIRECT VERSION 3.

1.4    FUNCTION OF WILD
       WILD IS DESIGNED TO BE USED AS  A  SUBROUTINE  CALLED
       FROM  ANY  PROGRAM  WHICH  NEEDS TO PERFORM WILD-CARD
       LOOKUPS ON ANY DEVICE.  IT IS NEEDED SINCE THE  LOGIC
       FOR  SELECTING  AND  READING  DIRECTORIES  HAS BECOME
       QUITE INVOLVED UNDER THE 5-SERIES MONITOR.  AMONG THE
       SPECIAL CASES HANDLED CORRECTLY BY WILD AND FEW OTHER
       USER-MODE PROGRAMS ARE  SUB-FILE  DIRECTORIES,  NEW:,
       HLP:, SYSA:, AND CONTROLLER CONTROLLER-CLASS AND FILE
       STRUCTURE  ABBREVIATIONS.   MOST   DIGITAL   SUPPLIED
       UTILITIES WILL EVENTUALLY BE CONVERTED TO USE WILD IF
       THEY PERFORM WILD-CARD OPERATIONS.
PAGE 2-1			WLD7A.DOC     THU 05-JUL-84 9:56

WILD.DOC -- CHANGES FROM VERSION 7 TO 7A              PAGE 2


2.0    CHANGES

312    (10-14727) FIX CHKTST TO WORK WITH  FORCED  DIRECTORY
       AND SFD

313    (10-14841) FIXES TO CODE FOR SECONDARY LOOKUP BLOCKS

314    (10-14839) SAVE PROTECT FOR LOOKUP ERROR PRINTOUT

315    (SER S55-076) CORRECT BUG TO FIND  FILES  IF  DEFAULT
       PATH IS AN SFD AND REFERENCE IS ERSATZ

316    (QAR 3672) HANDLE FIVE DEEP SFDS

317    DO NOT CLEAR DIRECTORY IF STRUCTURE NOT MOUNTED

320    ADD EXTERNAL SYMBOL .FRCPP FOR FRCPPN.

321    ADD NEW ENTRY POINT FOR .INSTR WHICH CAUSES FRCPPN TO
       BE SET.

322    MAKE .INIST AND .NXSTR ENTRY POINTS.

323    DON'T DISCARD SFD'S WHEN ERSATZ DEVICE  AND  FILE  IS
       WILD.

324    (SPR-17317) USE 'SYS' AS 'NEW,SYS'  IF  /NEW  ENABLED
       AND ERSATZ DEVICE SYS IS REQUESTED.

325    (SPR 10-17642) ALLOW 'NOT' GUIDE WORD  TO  WORK  WITH
       PPNS.
PAGE 3-1			WLD7A.DOC     THU 05-JUL-84 9:56

WILD.DOC -- CHANGES FROM VERSION 7 TO 7A              PAGE 3


3.0    KNOWN BUGS AND DEFICIENCIES

       NONE.










4.0    CHANGES IN INSTALLATION INSTRUCTIONS

       THE DUMMY LOW-SEGMENT FILE WILDDM  HAS  BEEN  REMOVED
       SINCE  LINK-10  VERSION 2 (RELEASED ON THE JULY, 1974
       DISTRIBUTION TAPE) HAS A SWITCH /ONLY:LOW  WHICH  CAN
       ACHIEVE  THE  SAME EFFECT AND ENSURES THE CORRECT LOW
       SEGMENT  IS  INCLUDED.   THUS,  ALL  COMMANDS   WHICH
       REFERENCE WILDDM SHOULD BE CHANGED TO WILD/ONLY:LOW.

       NOTE THAT ALTHOUGH THERE ARE SEVERAL  PROGRAMS  WHICH
       USE  WILD  AND  SCAN, WE WILL NOT NECESSARILY REBUILD
       ALL OF THEM WHEN WILD IS  RELEASED.   TYPICALLY,  THE
       VARIOUS  UTILITIES  SUCH AS DIRECT AND QUEUE AND DUMP
       WILL BE REBUILT, BUT MAJOR PRODUCTS SUCH AS LINK  AND
       FORTRAN WILL NOT BE REBUILT UNTIL THEIR NEXT RELEASE.
       IF THE  CUSTOMER  WISHES  TO  REBUILD,  HE  MAY,  BUT
       USUALLY  THE  CHANGES TO WILD AND SCAN DO NOT WARRENT
       THE COST OF REBUILDING AND TESTING.










5.0    SUGGESTIONS

       READ THE DIRECTORIES VIA SUPER USETI IF POSSIBLE  FOR
       BETTER  SPEED.   THIS  WOULD  ALSO ALLOW A PACK TO BE
       READ WHEN NOT MOUNTED AS A STRUCTURE.

       SUPPORT A SWITCH TO CONTROL SFD  SCANNING,  GOING  TO
       LIB:   AND  SYS:.   THIS  WOULD  OVERRIDE  THE  JOB'S
       DEFAULT.

       MAKE THE ROUTINE WHICH OUTPUTS "IN USE BY JOB  N"  BE
       GENERALLY AVAILABLE.

       EXTEND THE ERROR MESSAGE ROUTINES TO INCLUDE ALL  THE
PAGE 3-2			WLD7A.DOC     THU 05-JUL-84 9:56

PAGE 4-1			WLD7A.DOC     THU 05-JUL-84 9:56

WILD.DOC -- CHANGES FROM VERSION 7 TO 7A              PAGE 4


       COMPONENTS OF A CONCATENATED SPECIFICATION.

       INCLUDE /BEFORE, ETC., IN THE ERROR MESSAGE "NO  SUCH
       FILE  AS"  SINCE  THE  FILE MAY EXIST, BUT IT IS JUST
       EXCLUDED BY THE CONSTRAINTS.

       EXPAND THE SEARCH LOGIC  TO  ALLOW  CONCATENATION  OF
       DIRECTORIES WHICH ARE DIFFERENT (SPR 10-9943).

       (SPR 10-10209) ADD SWITCHES TO CONTROL THE START  AND
       END OF FILES WHICH MATCH A WILD-CARD.  THUS, THE USER
       COULD "RESTART"  ON  A  SPECIFIED  FILE.   ALSO,  ADD
       SWITCHES  WHICH SPECIFY TO SKIP N FILES AND THEN DO M
       FILES.

       (SPR 10-102019) ADD A  SWITCH  TO  DO  THE  FILES  IN
       REVERSE  ORDER.  THIS WOULD CATCH RECENT FILES BEFORE
       OLDER ONES.

       (SPR 10-13457) ALLOW THE CALLER TO SPECIFY A  CHANNEL
       WHICH  CAN  BE  KEPT  OPEN  IN  ORDER TO SPEED UP THE
       PROCESSING.
PAGE 5-1			WLD7A.DOC     THU 05-JUL-84 9:56

WILD.DOC -- CHANGES FROM VERSION 6 TO 7               PAGE 5


                   EXTRACTS FROM WLD7.RND





300    SUPPORT THE FILE SPECIFICATION SEPARATOR GUIDE  WORDS
       OF 'AND', 'OR', AND 'NOT' AS PASSED FROM SCAN VERSION
       7.  OF THESE, 'OR' HAS LOWER PRECEDENCE, AND 'NOT' IS
       INTERPRETTED  AS THOUGH IT WERE "AND NOT".  A FILE IS
       SELECTED ONLY IF IT MEETS THE CONSTRAINTS OF  ONE  OF
       THE  SETS  SEPARATED BY 'OR'.  WITHIN SUCH A SET, ALL
       MATCHES  MUST  BE  MET  INCLUDING  SWITCHES  SUCH  AS
       /BEFORE   AND   /LENGTH.    'NOT'   IS   INTERPRETTED
       ESSENTIALLY AS AN EXCLUSION, I.E., AS THOUGH THE USER
       SAID "ALL X EXCEPT Y".

301    DEFAULT TO /OKPROTECTION IF THERE ARE ANY WILD CARDS.
       THIS  WILL TEND TO HIDE PROTECTED FILES FROM THE USER
       IN ORDER TO NOT CONFUSE HIM.

302    IF THE INPUT SIDE HAS MORE WILD CARDS THAN THE OUTPUT
       SIDE, GIVE THE MESSAGE ?WLDTWC TOO MANY WILD-CARDS ON
       INPUT FOR OUTPUT.  THIS  MEANS  THAT  THE  USER  MUST
       SPECIFY  THE  SAME  NUMBER OF WILD-CARDS ON INPUT AND
       OUTPUT.

303    WHENEVER THE USER GIVES A DEVICE NAME  WHICH  IMPLIES
       MORE  THAN ONE STRUCTURE, IGNORE ANY STRUCTURES WHICH
       ARE SINGLE ACCESS BY OTHER JOBS THAN THE USER'S.

304    ISSUE A NEW WARNING MESSAGE IF ALL FILES  WHICH  WERE
       FOUND  (OR  ALL DIRECTORIES) HAD PROTECTION FAILURES.
       THE MESSAGE IS %WLDAFP ALL FILES PROTECTED FILE-SPEC.

305    ISSUE A NEW WARNING MESSAGE IF ALL FILES  WHICH  WERE
       FOUND WERE REJECTED EITHER BY SUCH SWITCHES AS /SINCE
       OR BY THE LOGICAL CONDITIONS INTRODUCED BY EDIT  300.
       THE   MESSAGE   IS  %WLDAFR  ALL  FILES  REJECTED  BY
       CONDITIONS FILE-SPEC.

306    (SPR 10-13,944) CORRECT TYPO IN  ONE  OF  THE  LOOKUP
       ERROR MESSAGES.

307    (QAR 2760) ADD ERROR MESSAGE %WLDSDP SOME DIRECTORIES
       PROTECTED WHICH INDICATES THAT THE FILE WAS NOT FOUND
       IN  ANY  DIRECTORIES  LOOKED  AT,  BUT  SOME  OF  THE
       DIRECTORIES  WHICH  MATCHED  THE SPEC WHERE PROTECTED
       AGAINST THE USER.

310    (QAR 2836) CORRECT A BUG INTRODUCED IN EDIT 304.

311    ADD MESSAGE %WLDSFP SOME FILES PROTECTED  WHICH  WILL
       BE  ISSUED IF SOME FILES MATCH AND ALSO SOME FILES OR
       DIRECTORIES WHICH MIGHT HAVE  MATCHED  COULD  NOT  BE
PAGE 5-2			WLD7A.DOC     THU 05-JUL-84 9:56

PAGE 6-1			WLD7A.DOC     THU 05-JUL-84 9:56

WILD.DOC -- CHANGES FROM VERSION 6 TO 7               PAGE 6


       ACCESSED.   THIS  MESSAGE  CAN BE SUPPRESSED WITH THE
       SWITCH /OKNONE, WHICH SUPPRESSES ALL OF  THE  SUMMARY
       WARNING MESSAGES.
PAGE 7-1			WLD7A.DOC     THU 05-JUL-84 9:56

WILD.DOC -- CHANGES FROM VERSION 5 TO 6               PAGE 7


                   EXTRACTS FROM WLD6.RND





143    REMOVE A BUG WHICH CAUSED  [P,PN,*,*,*]  AND  SIMILAR
       CONSTRUCTIONS   TO   NOT   WORK  AS  INTENDED.   THIS
       CONSTRUCTION WILL NOW CORRECTLY FIND ALL FILES.

144    CORRECT A  BUG  IN  THE  HANDLING  OF  WILD-CARDS  ON
       DECTAPES.

145    AS A PERFORMANCE  IMPROVEMENT,  ESPECIALLY  FOR  KJOB
       CALLING OF QUEUE, DELETE DIRECTORY ACCESS TABLES ONLY
       IF THE DIRECTORY DOES NOT BELONG TO THE USER.

146    ADD THE CAPABILITY FOR THE CALLER TO OBTAIN A LIST OF
       STRUCTURES WHICH MATCH THE USER SPECIFIED DEVICE.  IN
       PARTICULAR, "SYS" WILL RETURN  THE  SYS-SEARCH  LIST;
       "ALL"  WILL  RETURN  THE ALL-SEARCH LIST;  "DPA" WILL
       RETURN ALL STRUCTURES ON RP10 NUMBER 0;  ETC.   THERE
       ARE  TWO  NEW  ENTRY  POINTS, .INSTR AND .NXSTR.  THE
       FIRST INITIALIZES  THE  PROCEEDURE  WITH  THE  USER'S
       DEVICE  AND  THE  /PHYSICAL SWITCH IF SPECIFIED;  AND
       SKIP RETURNS WITH A CODE TO INDICATE WHETHER MULTIPLE
       STRUCTURES  MAY  BE  INVOLVED.   THE  SECOND TAKES NO
       ARGUMENT AND RETURNS THE NAME OF THE NEXT  STRUCTURE,
       OR    0    WHEN    DONE.     THESE    ROUTINES    ARE
       SELF-INITIALIZING, BUT CAN NOT BE USED  WHILE  .LKWLD
       IS IN PROGRESS.

147    CONVERT TO USE  C.MAC  AND  SCNMAC.MAC  AS  UNIVERSAL
       FILES.

150    SUPPORT  THE  USER  SPECIFIED  /MESSAGE  LEVEL   FROM
       .GTWCH.   THIS  ALLOWS  THE USER TO OBTAIN EITHER THE
       ERROR PREFIX, OR THE MESSAGE, OR BOTH.

151    MOVE THE ROUTINE .PTWRD TO .SCAN.

152    SUPPORT /MESSAGE SWITCH FROM SCAN.

153    (SPR 10-12368) HANDLE UFD NAMES WHEN THEY OCCUR AS  A
       FILE (NOT AS SIXBIT).

154    FIX /STR WITH  NON-WILD  NAMES  TO  USE  THE  CORRECT
       DIRECTORY  (IF  DEVICE  FORCES  IT)  AND TO ISSUE THE
       CORRECT MESSAGES IF THE FILE OR DIRECTORY IS MISSING.

155    IF /OKNONE IS GIVEN, THEN NO ERROR WILL BE LISTED  IF
       THE  FILE  IS MISSING.  THIS EXTENDS THE INFLUENCE OF
       THE SWITCH TO NON-WILD ENVIRONMENTS AS WELL  AS  WILD
       ONES.
PAGE 8-1			WLD7A.DOC     THU 05-JUL-84 9:56

WILD.DOC -- CHANGES FROM VERSION 5 TO 6               PAGE 8


156    (SPR  10-12368)  SUPPORT  THE  SWITCHES  /BEFORE  AND
       /SINCE ON DEC-TAPES.

157    ADD AN OPTIONAL ARGUMENT TO  .LKWLD  TO  SPECIFY  THE
       ADDRESS   OF  A  ROUTINE  TO  CALL  WHENEVER  END  OF
       DIRECTORY IS REACHED.   THIS  WILL  ALLOW  DIRECT  TO
       ISSUE ITS SUMMARIES MORE RAPIDLY.

160    ADD AN OPTION BIT TO CAUSE SFD SCANNING DOWN TO OCCUR
       AT  THE END OF THE OWNING DIRECTORY INSTEAD OF IN THE
       MIDDLE.  THIS NECESSITATES  A  SECOND  PASS  FOR  ANY
       DIRECTORY  CONTAINING  AN  SFD,  BUT ALLOWS DIRECT TO
       GIVE A  CLEANER  LISTING  WHEN  MULTIPLE  LEVELS  ARE
       SPECIFIED.

161    SUPPORT  THE  SWITCHES  /ABEFORE,  /ASINCE,  /LENGTH,
       /ESTIMATE, /ERSUPERSEDE, AND /VERSION.

162    (QAR 1882) MORE OF EDIT 153.

163    MORE OF EDIT 161.  ALSO, CLEAN UP THE HANDLING OF THE
       SPECIAL ERROR CODE INSERTS.

164    MORE OF EDIT 161.

165    CORRECT NUL:  HANDLING IN 135.
PAGE 9-1			WLD7A.DOC     THU 05-JUL-84 9:56

WILD.DOC -- CHANGES FROM VERSION 4 TO 5               PAGE 9


                   EXTRACTS FROM WLD5.RND





2.0    CHANGES

123    ADD A NEW ERROR MESSAGE "?  NO FILE NAME SPECIFIED".

124    ADD ROUTINE .SCWLD  TO  HANDLE  SECONDARY  WILD-CARDS
       SUCH AS OUTPUT FILES.

125    SIMPLIFY CHECKS FOR END OF DIRECTORY LIST.

126    AT LOCATION WILDK, REPLACE THE HALT WITH  A  JRST  TO
       RECOVER FROM READ ERRORS IN THE DIRECTORY.

127    ADD ROUTINES E.LKEN AND  .TFILB  AS  GENERAL  PURPOSE
       SCAN STYLE TYPEOUT BLOCKS.

130    CREATE A DUMMY MODULE, WILDDM, WHICH  DEFINES  A  LOW
       SEGMENT THE SAME SIZE AS WILDS.  THIS WILL BE UPDATED
       EACH RELEASE.

131    IN .SCWLD, IF THE INPUT AND OUTPUT FILES ARE FOR  THE
       SAME  OWNER,  SET  THE  DEFAULT  PROTECTION TO BE XYY
       WHERE X IS FROM THE SYSTEM STANDARD  FILE  PROTECTION
       AND YY IS FROM THE INPUT FILE.

132    SUPPORT THE DATE75 PROJECT WHEN CHECKING THE  /BEFORE
       AND /SINCE SWITCHES.

133    SUPPORT THE /OKPROTECTION AND /ERPROTECTION SWITCHES.
       /OKPROTECTION   SUPPRESSES   PROTECTION  CHECK  ERROR
       MESSAGES.  THIS IS THE DEFAULT IF THE UFD IS WILD.

134    CORRECT ERROR IN EDIT 127.

135    HANDLE DEVICE NUL: CORRECTLY.  NUL: IS CONSIDERED  TO
       BE A NON-DIRECTORY DEVICE FOR CALLERS OF WILD.

136    (SPR 10-10819) FIX A BUG  IN  THE  DECTAPE  DIRECTORY
       LOGIC  FOR  WILD-CARDING WHICH OMITTED THE FIRST FILE
       OF THE DIRECTORY.

137    TYPE  THE  CORRECT  DIRECTORY  WHEN  THE  UFD  HAS  A
       PROTECTION  ERROR  AND THE USER WAS TRYING TO SPECIFY
       THE DIRECTORY ITSELF.

140    CHANGE ALL ERROR MESSAGES TO HAVE A UNIQUE PREFIX  OF
       SIX  LETTERS STARTING WITH WLD.  THE MESSAGE PREFIXES
       ARE:
          DEM     %DIRECTORY IS EMPTY
          DFO     ?OPEN FAILURE FOR XXX IN USE BY JOB NNN
PAGE 9-2			WLD7A.DOC     THU 05-JUL-84 9:56

PAGE 10-1			WLD7A.DOC     THU 05-JUL-84 9:56

WILD.DOC -- CHANGES FROM VERSION 4 TO 5              PAGE 10


          IOE     %ERROR WHILE READING FILE
          IWC     ?INSUFFICIENT WILD-CARDS IN INPUT FOR
          OUTPUT
          LKE      LOOKUP/ENTER FAILURE (OR MNEMONIC
          MESSAGE)
          LKP     %LOOKUP FAILURE (OR MNEMONIC MESSAGE)
          NDO     ?NULL NAME IN OUTPUT WILD-CARD
          NFS     ?NO FILE NAME SPECIFIED
          NNO     ?NULL DIRECTORY IN OUTPUT WILD-CARD
          NSD     %NO SUCH DIRECTORY
          NSF     %NO SUCH FILES AS
          NXD     %NON-EXISTENT UFD
          NXU     %NON-EXISTENT UFD
          SCO     ?OPEN FAILURE ON XXX IN USE BY JOB NNN
          SLE     %SEARCH LIST EMPTY FOR DEVICE
       EACH ERROR MESSAGE HAS A LOCAL SYMBOL DEFINED OF  THE
       FORM E$$XXX WHERE XXX IS THE UNIQUE ERROR SUFFIX.

141    (SPR 10-11421) VERIFY THAT /STRS  AND  /PHYSICAL  ARE
       THE   SAME   ON   ALL   FILES   OF   A   CONCATENATED
       SPECIFICATION.

142    CORRECTLY STORE FOR THE CALLER  THE  POINTER  TO  THE
       MATCHING INPUT FILE SPEC.  
PAGE 11-1			WLD7A.DOC     THU 05-JUL-84 9:56

WILD.DOC -- CHANGES FROM VERSION 3 TO 4              PAGE 11


                   EXTRACTS FROM WLD4.RND





2.0    CHANGES

100  (INTERNAL) CHANGE TO USE .FX SYMBOLS FROM SCNMAC.

101  USE FX.DFX TO FLAG MFD FIXUPS (USER SPECIFIES EXTENSION
     .UFD).   THIS  GIVES  THE  CONSISTENT INTERPRETATION OF
     FILE  NAME  BEING  IGNORED  AND  DIRECTORY   USED   FOR
     EXTENSION  .UFD.   ALSO,  CORRECT  THE  CODE  TO HANDLE
     SYS:.UFD, ETC., CORRECTLY.

102  REMOVE A  GLITCH  WHICH  PROHIBITED  RE-ENTRY  AFTER  A
     NON-DISK  DEVICE  IS  USED.   BEFORE  THIS  CHANGE, THE
     CALLER HAD TO UPDATE THE INITIAL  POINTER  AND  RESTART
     WILD.

103  ALLOW BOTH FX.ADD  AND  .FXTRO  FOR  THE  INCLUSIVE  OR
     FUNCTION.   THIS  LAYS THE GROUND-WORK TO SWITCH TO "!"
     AS THE INCLUSIVE OR SPECIFICATION  IN  MATCHING  RATHER
     THAT "+".

104  (SPR 10-7182) ADD DEFENSIVE HALT IN CASE  LH(DIRECTORY)
     IS  ZERO.  THIS CAN BE CAUSED ONLY BY AN INTERNAL ERROR
     OR BY A FILSER BUG.

105  (INTERNAL) REPLACE THE INTERN STATEMENTS BY "::".

106  USE THE CORRECT EXTENSION IN THE LOOKUP ERROR MESSAGE.

107  ADD HANDLING OF WILD-CARDS ON  DEC-TAPE.   HANDLING  OF
     NON-DISK  DEVICES  IS  ENABLED  BY  A  NEW  BIT  IN THE
     ARGUMENT BLOCK.  WHEN SET, THE OPEN AND  LOOKUP  BLOCKS
     ARE  SETUP  FOR  ALL  DEVICES.   THE NON-SKIP RETURN IS
     TAKEN ONLY WHEN THE REQUESTS ARE FINISHED.

110  CORRECT SUBSCRIPTING IN E.DFL ROUTINE.

111  FOR  MAG-TAPES,  SET  OPEN  BLOCK  DEPENDING  UPON  THE
     /DENSITY AND /PARITY SWITCHES.

112  CHANGE /BEFORE AND  /SINCE  LOGIC  TO  CONSIDER  -1  AS
     DEFAULT BEHAVIOUR.

113  IF THE USER'S PROJECT NUMBER IS GREATER THAN 7, AND THE
     TARGET  DIRECTORY  PROJECT IS LESS THAN 10, THEN IF THE
     USER TYPED "*" FOR PROJECT AND NOT "*"  FOR  PROGRAMMER
     NUMBER REJECT THE MATCH.  THIS SUPPORTS THE NOTION THAT
     FOR  PROJECTS  BELOW  10,  THE  PROGRAMMER  NUMBER   IS
     INDEPENDENT  OF  THOSE  ABOVE  10.  IN PARTICULAR, WITH
     LIBRARIES, ETC., BEING DEVELOPED FOR PROJECTS BELOW 10,
PAGE 11-2			WLD7A.DOC     THU 05-JUL-84 9:56

PAGE 12-1			WLD7A.DOC     THU 05-JUL-84 9:56

WILD.DOC -- CHANGES FROM VERSION 3 TO 4              PAGE 12


     USERS  LOOKING  FOR  THEIR FILES IN ALL PROJECTS SHOULD
     NOT SEE THESE FILES.  IF EITHER THE PROJECT IS EXPLICIT
     OR  THE  PROGRAMMER  IS  "*", THEN THE OLD BEHAVIOUR IS
     INDICATED.  THUS, [*,*] WILL STILL  SEARCH  ALL  UFD'S.
     NOTE   THAT  [?,X]  WILL  MATCH  PROGRAMMER  X  IN  ALL
     DIRECTORIES BELOW PROJECT  10.   NOTE  ALSO,  THAT  THE
     BEHAVIOUR FROM [1,2] IS UNAFFECTED.

114  HANDLE  [1,1].UFD  CONSISTENT  WITH  THE   OTHER   .UFD
     HANDLING.     THIS    ELIMINATES    THE   NOTATION   OF
     #X0000YY.UFD[1,1].

115  CORRECT A BUG  IN  THE  MFD  CHKACC  LOGIC.   THIS  WAS
     UNCOVERED  BY  A  BUG IN TWICE WHICH CAUSED STRANGE UFD
     PROTECTIONS, BUT THE CODE SHOULD BE CORRECT ANYWAY.

116  CORRECT BUG INTRODUCED BY 107.

117  ADD  ENTRY  POINT  .CHKTA  FOR  DIRECT  TO  CHECK   THE
     BEFORE/SINCE SWITCHES ON MAGTAPES.

120  CHANGE THE MODULE NAME FROM "WILD" TO ".WILD" TO  AVOID
     ANY NAME CONFLICTS.

121  ADD SYMBOLS ".WILDZ" AND ".WILDL"  FOR  THE  START  AND
     LENGTH OF THE LOW SEGMENT AREA.

122  HANDLE NO MFD MESSAGE GRACEFULLY ("NON-EXISTENT MFD  ON
     XXX:").
PAGE 13-1			WLD7A.DOC     THU 05-JUL-84 9:56

WILD.DOC -- CHANGES FROM VERSION 2 TO 3              PAGE 13


                   EXTRACTS FROM WLD3.RND





THE ONLY CHANGE IS TO CORRECT ONE BUG.  THIS BUG CAUSED WILD
TO SKIP THE LAST FILE IN EACH BLOCK OF THE DIRECTORY.
PAGE 14-1			WLD7A.DOC     THU 05-JUL-84 9:56

WILD.DOC -- CHANGES FROM VERSION 1 TO VERSION 2      PAGE 14


                   EXTRACTS FROM WLD2.RND





2.0 EXTERNAL CHANGES

2.1 USER (CONSOLE) CHANGES

2.1.1  SUB-FILE  DIRECTORIES  ARE   FULLY   SUPPORTED.    IN
PARTICULAR,  UP  TO FIVE SFDS MAY BE SPECIFIED FOLLOWING THE
PROJECT,PROGRAMMER NUMBER.  THESE SFDS MAY  INCLUDE  BOTH  *
AND  ?   WILD  CARDS.   THE  SFDS  ARE  SPECIFIED  IN SIXBIT
SEPARATED BY COMMAS.  THUS, FOR EXAMPLE,  TO  REFER  TO  THE
FILE  NAMED  FOO.MAC WITHIN SFD XYZ WHICH RESIDES IN SFD ABC
IN AREA [10,612], ONE TYPES "FOO.MAC[10,612,ABC,XYZ]".

2.1.2  THE  DEFAULT  DIRECTORY  SET  BY  SETSRC   IS   FULLY
SUPPORTED.   THIS  IS NORMALLY INVOKED BY NOT SPECIFYING THE
DIRECTORY IN THE COMMAND.  IF IT IS DESIRED TO  SPECIFY  THE
DEFAULT  DIRECTORY  EXPLICITLY,  THE  NOTATION  "[-]" MAY BE
USED.

2.1.3 FOR CONVENIENCE, A DIRECTORY REFERENCE TO A  DIRECTORY
IN  THE  USER'S PROJECT OR HIS PROGRAMMER NUMBER MAY BE LEFT
BLANK.  THUS [,7] WHEN LOGGED IN AS [10,612], MEANS  [10,7].
SIMILARLY, [11,] WOULD MEAN [11,612].  THIS ALSO CAN BE USED
WITH  SFDS,  SO  THE  EXAMPLE  IN  2.1.1  CAN  BE  TYPED  AS
"FOO.MAC[,,ABC,XYZ]".   IF  THE DEFAULT DIRECTORY IS NOT THE
USER'S LOGGED IN UFD, HIS UFD CAN BE  REFERENCED  AS  "[,]".
NOTE  THAT  THESE NOTATIONS USE THE USER'S LOGGED IN PROJECT
PROGRAMMER NUMBER, NOT HIS DEFAULT DIRECTORY.

2.1.4 A  DEFICIENCY  IN  VERSION  1  HAS  BEEN  FIXED.   THE
NOTATION  "+" IS USED TO COMBINE SEVERAL SPECIFICATIONS INTO
ONE WILD CARD SCAN.  IT  REPRESENTS  AN  OR  FUNCTION.   FOR
EXAMPLE,  A.B+C.D  MEANS  ANY  FILE  NAMED  A.B  OR C.D.  IN
VERSION 1, THIS DID NOT WORK FOR  UFDS.   IN  VERSION  2  IT
WORKS FOR ALL CASES.

2.1.5  (SER  1567)  WILD  NOW   HANDLES   CONTROLLER   CLASS
ABBREVIATIONS,   CONTROLLER   ABBREVIATIONS,  AND  STRUCTURE
ABBREVIATIONS.  THIS IS FULLY  COMPATIBLE  WITH  THE  FILSER
INTERPRETATION OF THESE ABBREVIATIONS.

2.1.6 REPORTING OF DIRECTORY LOOKUP ERRORS  IS  DEFERRED  TO
THE  END  OF  LOOKING AT ALL STRUCTURES.  THUS, IF AN SFD OR
UFD IS MISSING ON ONE  STRUCTURE,  BUT  PRESENT  ON  ANOTHER
STRUCTURE,  NO  ERROR WILL BE GENERATED.  THIS IS COMPATIBLE
WITH THE FILSER INTERPRETATION.

2.1.7 THE OPEN FAILURE MESSAGE NOW INCLUDES A QUESTION  MARK
TO  MAKE  IT  FATAL.   IF POSSIBLE, IT ALSO INCLUDES THE JOB
NUMBER OF THE JOB WHICH IS USING THE DEVICE.
PAGE 14-2			WLD7A.DOC     THU 05-JUL-84 9:56

PAGE 15-1			WLD7A.DOC     THU 05-JUL-84 9:56

WILD.DOC -- CHANGES FROM VERSION 1 TO VERSION 2      PAGE 15


2.1.8 THE FILSER LOOKUP ERROR CODE 24  IS  SUPPORTED.   THIS
CODE  HAPPENS  IF  THE  JOB'S  SEARCH  LIST  IS EMPTY.  WILD
VERSION 1 DETECTED THIS ITSELF FOR WILD CARD LOOKUPS, BUT IT
DEPENDS ON FILSER IF NO WILD CARDS ARE INDICATED.

2.1.9 THE DIRECTORY WILD CARDING WORKS AS FOLLOWS.   A  FILE
IS  A MATCH ONLY IF IT APPEARS AT THE DEPTH INDICATED BY THE
DIRECTORY SPECIFICATION OR IF  0  MATCHES  THE  NEXT  DEEPER
DIRECTORY   SPECIFICATION.    THUS,   IF   THE   USER  TYPES
"[1,2,A,*,C]", FILES WILL MATCH ONLY  IN  [1,2,A]  (SINCE  0
MATCHES  *)  AND  IN  [1,2,A,*,C]  (SINCE THIS IS THE BOTTOM
LEVEL).

2.1.10 SPECIAL HANDLING IS PERFORMED WHEN THE USER SPECIFIES
.UFD AS THE EXTENSION.  IN THIS CASE, THE PROJECT-PROGRAMMER
NUMBER FROM THE DIRECTORY (AFTER DEFAULTING) IS  SUBSTITUTED
FOR  THE  FILE  NAME  AND THE DIRECTORY IS SET TO BE THE MFD
(1,1).

2.1.11 WHEN THE MONITOR DOES A LOOKUP  ON  DEVICES  SUCH  AS
SYS:  OR HLP:, IT IGNORES THE DIRECTORY SPECIFICATION UNLESS
IT TURNS OUT TO BE A LOGICAL DEVICE  NAME.   WILD  DOES  THE
SAME THING.










2.2 CALLER (PROGRAM) CHANGES

2.2.1 WILD NOW OBSERVES THE  STANDARD  CALLING  CONVENTIONS.
ACS  1-4 ARE TEMP AND 5 IS PRESERVED.  PARAMETERS ARE PASSED
TO IT VIA A POINTER IN AC 1.  THE INDEX TO  THE  SCAN  BLOCK
WHICH  MATCHED  THE REQUEST IS STORED IN A LOCATION SELECTED
BY THE CALLER.

2.2.2 WILD HAS BEEN  UPDATED  TO  USE  THE  REVISED  TYPEOUT
ROUTINES  IN  SCAN VERSION 2.  THE CALLING SEQUENCE TO THESE
ROUTINES HAS BEEN CHANGED TO PASS THE VALUE IN AC 1.

2.2.3 DIRECTORIES ARE LISTED  BY  CALLING  THE  NEW  ROUTINE
(.TDIRB) IN SCAN VERSION 2.  THIS ROUTINE HANDLES SFD FORMAT
AND SCAN FORMAT FOR THE TYPEOUT.

2.2.4 ALL DIRECTORY READING IS NOW ON CHANNEL  0,  WHICH  IS
ASSUMED  TO  BE  A  SCRATCH  CHANNEL.   BECAUSE OF THIS, ALL
DIRECTORIES ARE READ IN DUMP MODE.
PAGE 16-1			WLD7A.DOC     THU 05-JUL-84 9:56

WILD.DOC -- CHANGES FROM VERSION 1 TO VERSION 2      PAGE 16


2.2.5 THE DATA READ ROUTINE  (.NXDTW)  NOW  USES  A  CHANNEL
SELECTED  BY  THE  CALLING PROGRAM.  THE DATA CHANNEL IS NOW
OPENED BY THE CALLER.

2.2.6  THE  FLAG  (.WLDFL)  WHICH  INDICATES  WILDCARD   VS.
MULTIPLE  STRS  VS.  SIMPLE LOOKUP, NOW HAS A FOURTH STATE--
VALUE -2 MEANS BOTH MULTIPLE STRS AND WILDCARD.

2.2.7 THE LOOKUP BLOCK IS  NOW  RETURNED  IN  A  CORE  BLOCK
POINTED  TO  FROM  THE  ARGUMENT  BLOCK.   THIS  IS SETUP IN
STANDARD EXTENDED LOOKUP FORMAT.

2.2.8 A ROUTINE (.CHKTM) HAS BEEN ADDED WHICH WILL  VALIDATE
THE  FILE'S  CREATION  TIME AND DATE AGAINST THE /BEFORE AND
/SINCE  SWITCHES  FROM  SCAN.   (THESE  SWITCHES   ARE   NOT
SUPPORTED IN SCAN VERSION 2).










5.0 INTERNAL CHANGES

5.1 C.MAC AND  SCNMAC.MAC  ARE  USED  FOR  ALL  MONITOR  AND
PARAMETER SPECIFICATIONS.

5.2 ALL DIRECTORY READS ARE VALIDATED  BY  THE  CHKACC  UUO.
THIS REMOVES A DEFICIENCY IN QUEUE WHICH ALLOWED THE USER TO
LIST PROTECTED DIRECTORIES.  THUS WILD CAN NOW  BE  USED  IN
ANY PROGRAM RUNNING WITH JACCT TURNED ON.

5.3 THE INDEX POINTER TO THE FILE SPEC AREA IS NOW IN P1 (AC
5).

5.4 THE DIRECTORY READING CODE HAS BEEN REWRITTEN.   IT  NOW
HANDLES  UFDS AND SFDS IN ONE ROUTINE.  WHEN A UFD OR SFD IS
FOUND, THE SEARCH WILL DROP  DOWN  INTO  THAT  DIRECTORY  IF
THERE  IS ANY POSSIBILITY FOR A MATCH.  AT END OF DIRECTORY,
THE  SEARCH  WILL  RETURN  UP  ONE  LEVEL.   LEVELS  OF  THE
DIRECTORY  WITHOUT  WILDCARDS WILL AVOID THE SCAN AND ASSUME
THE RESULT IMMEDIATELY.

5.5 NO SPRS HAVE BEEN RECEIVED.   THE  ONLY  SER  WAS  1567,
WHICH IS ANSWERED.

5.6 WHEN WILD IS DONE WITH A DIRECTORY, IT DOES A CLOSE  100
SO  THE  MONITOR WILL DELETE THE ACCESS TABLES.  THIS SHOULD
DECREASE INTERFERENCE IN THE DORMANT ACCESS TABLES.
PAGE 17-1			WLD7A.DOC     THU 05-JUL-84 9:56

WILD.DOC -- CHANGES FROM VERSION 1 TO VERSION 2      PAGE 17


[END OF WILD.DOC]
PAGE 1-1			PRUNE.DOC     THU 05-JUL-84 9:56

	PRUNE (-DANISH?, AS IN TREES?) A DIRECTORY ORGANIZER.
		----DRAFT 1.1 VERSION 0.5----

-LIBERALLY TRANSLATED FROM A PROGRAM OF THE SAME NAME AT STANFORD 
	ARTIFICIAL INTELLIGENCE LABORATORY WRITTEN BY RALPH GOREN.

WARNING TO AND REQUEST OF PRUNE'S USERS:
	PRUNE'S INTERFACE IS BEING DEVELOPED, AND NOTHING SIGNIFICANT
IS CAST IN ANYTHING BUT WET SAND.  (MPL)PRUNE SHOULD BE REGARDED AS 
A DESIGN DOCUMENT; I AM ACTIVELY SOLICITING EVEN BIZARRE REQUESTS FOR
INTERFACE CHANGES OR COMMENTS ON THIS ONE.  THE EVENTUAL PROGRAM MAY
NOT LOOK A LOT LIKE THIS ONE.  PLEASE COMMENT (IN PERSON, MAIL, GRIPE,
OR ADD COMMENTS TO (DANIELSS:37)PRUNE.MOD).


PURPOSE:
	I HAVE TROUBLE REMEMBERING WHAT VARIOUS FILES ON A GIVEN 
DIRECTORY ARE AFTER A FEW MONTHS, PRUNE IS MEANT TO HELP THAT PROBLEM.
PRUNE IS AN INTERACTIVE PROGRAM TO ASSOCIATE SHORT COMMENTS WITH FILE 
NAMES ON A PARTICULAR DIRECTORY.  IT PROVIDES A FEW OPERATIONS FOR FILE
MANIPULATION, BUT ITS PRIMARY PURPOSE IS TO MAINTAIN THE COMMENTS.

USE:
	WHENEVER YOU RUN PRUNE, IT READS PRUNE.DAT (ITS DATA FILE) FROM
THE DIRECTORY YOU ARE GFDED TO.  IT THEN FINDS THE NAME OF ALL FILES ON
THAT DIRECTORY (EXCLUDING PRUNE.DAT AND *.TMP).  IT THEN (CONCEPTUALLY)
MAKES THREE LISTS: 
	(1) FILES WHICH EXIST AND HAVE COMMENTS, 
	(2) FILES WHICH EXISTS BUT DON'T HAVE COMMENTS,
	(3) FILES WHICH DON'T EXIST BUT DO HAVE COMMENTS
		(TYPICALLY, FILES YOU DELETED SINCE YOU LAST RAN PRUNE)

	IF THERE ANY FILES IN GROUP 3, PRUNE ASKS YOU WHETHER YOU WOULD 
LIKE TO KEEP OR DROP THOSE DESCRIPTIONS (YOU MAY WANT TO KEEP THOSE FOR
FILES WHICH YOU NORMALLY INTEND TO HAVE, BUT DON'T HAVE AT THE MOMENT).

	NOW YOU DIRECT PRUNES BEHAVIOR BY VARIOUS COMMANDS.  THE 
COMMANDS (ALMOST) ALWAYS APPLY TO GROUPS OF FILES, THE GROUP BEING
SPECIFIED DEPENDING ON THE FILES' NAME, EXTENSION, AND WHETHER OR NOT
IT HAS A COMMENT ASSOCIATED WITH IT.  COMMANDS ARE PROVIDED TO ALLOW 
YOU TO COUNT THE FILES IN A GROUP, DELETE THEM, CHANGE THEIR COMMENTS,
SHOW THEIR ENTRIES (WITH THE COMMENTS), AND WRITE THEIR ENTRIES TO A
FILE.  

	WHEN YOU ARE FINISHED, YOU TELL PRUNE TO STOP, AND IT WRITES 
(UPDATES) PRUNE.DAT TO REFLECT ANY CHANGES YOU HAVE MADE.  IF YOU HAD
ASKED FOR ANY FILES TO BE DELETED, PRUNE ASKS YOU WHETHER YOU STILL 
WANT TO DELETE THEM, AND DOES SO IF YOU AGREE (OTHERWISE THEY ARE NOT
DELETED, ONLY THEIR COMMENT LINES ARE GONE).

PAGE 2-1			PRUNE.DOC     THU 05-JUL-84 9:56


ACTUAL PRUNE COMMANDS 
(CASE DOESN'T MATTER TO PRUNE, COMMAND AND RESPONSE CHARACTERS ARE 
 ALWAYS INTERPRETED AS IF THEY WERE IN UPPER CASE, BUT COMMENTS ARE
 PRESERVED IN THE CASE IN WHICH THEY WERE TYPED).

IF GROUP 3 (COMMENTS EXIST FOR FILES WHICH DON'T) IS NOT EMPTY:
PRUNE ASKS YOU WHAT YOU WANT TO DO WITH THE COMMENTS.  YOU REPLY
WITH THE FIRST LETTER OF KEEP, DROP, REVIEW, OR WRITE. 
ACTION TAKEN:
	KEEP: THE COMMENTS ARE TREATED JUST AS IF THEIR FILES EXISTED.
	DROP: THE COMMENTS ARE TREATED AS IF THEY NEVER EXISTED.
	REVIEW: YOU WILL BE ASKED ON A COMMENT-BY-COMMENT BASIS WHETHER
		TO "KEEP" OR "DROP" THAT COMMENT.
	WRITE: THE COMMENTS WILL BE WRITTEN OUT TO A FILE OF YOUR 
		CHOOSING (YOU WILL BE PROMPTED FOR THE NAME), AND THEN
		THEY WILL BE "DROP"ED.

-----

PRUNE COMMANDS:
	 THE PROMPT IS A COLON (":"); COMMANDS ARE INPUT BY TYPING 
	THE COMMAND FOLLOWED BY A <RETURN>.  

TO GET OUT OF PRUNE WITHOUT CHANGING PRUNE.DAT OR DELETING ANY OF THE 
	FILES YOU HAVE SPECIFIED, SIMPLY TYPE YOUR ESCAPE CHARACTER 
	(EITHER ^C OR ESC).

TO EXIT GRACEFULLY (UPDATING PRUNE.DAT, AND REALLY DELETING FILES)
	USE EITHER QUIT OR XIT(=EXIT) [THESE COMMANDS ARE SYNONYMOUS].

THE REST OF THE COMMANDS SPECIFY GROUPS OF FILE-COMMENT LINES.  THEY ALL
	HAVE THREE PARTS WITH (HOPEFULLY USEFUL) DEFAULTS PROVIDED IF
	SOME PORTION IS LEFT OUT: THE PREFIX, COMMAND, AND MASK.

THE MASK IS SOMEWHAT LIKE A TYMCOM-X "WILD-CARD" FILE NAME.  IT HAS A
	NAME AND AN EXTENSION PART (NO USERNAMES OR PPNS PLEASE).  IF
	YOU DON'T SPECIFY THE NAME (OR GIVE A BLANK NAME), THEN "*" IS
	USED.  SIMILARLY, IF YOU DON'T SPECIFY AN EXTENSION (THE ONLY
	WAY TO NOT SPECIFY AN EXTENSION IS TO NOT INCLUDE A "." IN THE
	MASK), "*" IS ASSUMED FOR THE EXTENSION.  "#" WORKS AS USUAL,
	BUT "*" MAY BE USED AT THE END OF THE NAME OR EXTENSION TO 
	INDICATE "FILL THIS OUT WITH THE APPROPRIATE NUMBER OF #'S."
	IF THE ENTIRE MASK IS LEFT OUT, "*.*" IS USED.
	   EXAMPLES:
		PR => PR.*	PR. => PR.	.PR => *.PR
		P* => P#####.*	.P* => *.P##	P#R*.P => P#R###.P


THE PREFIX IS USED TO SPECIFY WHETHER YOU WANT TO WORK ONLY ON FILES
	WITH COMMENTS, ONLY ON FILES WITHOUT COMMENTS, OR ON ALL FILES
	WHICH MATCH THE MASK REGARDLESS OF WHETHER THEY HAVE COMMENTS.
	IF YOU LEAVE OFF A PREFIX, THE ONE ASSUMED DEPENDS ON THE
	COMMAND GIVEN.  PREFIXES ARE A SINGLE CHARACTER:
		A =ALL (ALL FILES WHICH MATCH THE MASK)
		B =BLANK (FILES WITHOUT COMMENTS WHICH MATCH THE MASK)
		N =NONBLANK (FILES WITH COMMENTS WHICH MATCH THE MASK)

PAGE 2-2			PRUNE.DOC     THU 05-JUL-84 9:56

PAGE 3-1			PRUNE.DOC     THU 05-JUL-84 9:56

THE COMMAND IS ALSO A SINGLE-CHARACTER ENTITY (THE FIRST LETTER OF THE
	NAMES LISTED HERE).  THE WORD IN PARENTHESES FOLLOWING THE NAME
	OF THE COMMAND IS ITS ASSUMED PREFIX.

COUNT (ALL)	TYPES THE NUMBER OF FILES SPECIFIED.

DELETE (BLANK)	REMOVES THE ENTRIES FOR ALL FILES SPECIFIED, AND MARKS
		THEM "READY FOR DELETING" (SEE PREVIOUS COMMENT ON THE
		QUIT AND XIT COMMANDS).

FIND (ALL)	TYPES THE ENTRIES FOR ALL SPECIFIED FILES.  YOU CAN
		STOP A RUNAWAY FIND WITH CONTROL-O (^O).

MODIFY (BLANK)	THIS PROCEEDS ONE FILE AT A TIME THROUGH THE PREFIX-
		MASK SPECIFIED FILES.  IT SHOWS YOU THE ENTRY FOR A 
		FILE AND ASKS YOU FOR A NEW (REPLACEMENT) COMMENT FOR
		THIS FILE.  IF YOU DON'T WANT TO CHANGE THE COMMENT,
		JUST TYPE <RETURN>.  IF YOU WANT TO USE THE SAME COMMENT
		AS YOU LAST TYPED TO MODIFY (IGNORING SUCH THINGS AS
		<RETURN>), TYPE CONTROL-X (^X).  IF YOU ARE BORED OR
		FRUSTRATED, TYPE CONTROL-D (^D), AND PRUNE WILL ASK
		FOR ANOTHER COMMAND.

REMOVE (ALL)	REMOVES THE ENTRIES FOR ALL FILES SPECIFIED.  (THIS IS
		JUST LIKE THE DELETE COMMAND, EXCEPT THAT THE ACTUAL
		DISK FILE IS NOT DELETED).

TYPE (BLANK)	ALLOWS RUDIMENTARY EXAMINATION OF FILES. THIS PROCEEDS 
		ONE FILE AT A TIME THROUGH THE PREFIX-MASK SPECIFIED 
		FILES.  IF THE EXTENSION IS ONE OF THE STANDARD BINARY
		EXTENSIONS (REL,SAV,LOW,SHR,SWR), IT MAKES SURE YOU 
		REALLY MEAN TO TYPE THAT FILE.  FOR EACH FILE, IT 
		DISPLAYS A FEW LINES OF TEXT, AND ASKS IF YOU WANT TO
		SEE MORE.  AS LONG AS YOU REPLY "Y" (AND AS LONG AS 
		THERE IS ANY MORE FILE LEFT) IT DISPLAYS THE NEXT FEW
		LINES AND ASKS AGAIN.  IF YOU REPLY "N" (OR JUST ABOUT
		ANY OTHER CHARACTER), IT WILL MERRILY GO TO THE NEXT 
		FILE.  IF YOU ARE BORED OR FRUSTRATED, TYPE CONTROL-D 
		(^D), AND PRUNE WILL ASK FOR ANOTHER COMMAND.

WRITE (NONBLANK) THIS WRITES THE ENTRIES FOR ALL SPECIFIED FILES TO AN
		OUTPUT FILE (YOU WILL BE ASKED WHAT FILE NAME YOU WANT
		TO USE).
PAGE 4-1			PRUNE.DOC     THU 05-JUL-84 9:56

FORMAT OF PRUNE.DAT:

1) PRUNE.DAT IS A TEXT FILE WHICH CAN BE MODIFIED WITH YOUR FAVORITE
   EDITOR.  TABS AND SPACES ARE SIGNIFICANT ONLY INSOFAR AS THEY 
   PRODUCE WHITE SPACE (HOW MUCH IS NOT IMPORTANT).

2) PRUNE.DAT IS SORTED BY EXTENSION FIRST, THEN NAME.  IF YOU 
   RE-ARRANGE LINES, HOWEVER, PRUNE WILL RE-SORT THEM AS IT READS 
   THEM IN.  [DON'T MAKE TWO ENTRIES FOR THE SAME FILE, HOWEVER].

3) PRUNE.DAT CONTAINS ONLY LINES FOR FILES WHICH HAVE NON-NULL COMMENTS.

4) THE FOLLOWING LINE FORMATS ARE CURRENTLY ACCEPTABLE TO PRUNE 
   (BUT THIS MAY CHANGE AS FEATURES CHANGE).
THE PREFERRED FORMAT:
	FILE .EXT        ;DESCRIPTION
OTHER ACCEPTABLE FORMATS:	[USER IS A RESERVED FIELD]
	FILE  EXT USER   DESCRIPTION
	FILE .EXT (USER) DESCRIPTION
	FILE  EXT (USER) DESCRIPTION
	FILE      (USER) DESCRIPTION
	FILE  EXT        ;DESCRIPTION
	FILE             ;DESCRIPTION
	(USER) FILE .EXT DESCRIPTION
	(USER) FILE  EXT DESCRIPTION
	(USER) FILE      ;DESCRIPTION

PAGE 1-1			PHOTO.DOC     THU 05-JUL-84 9:56

PHOTO VERSION #2	"HALT SUBJECT" CAPABILITY ADDED.
			"HELP" ADDED TO MOST QUESTIONS.

PHOTO IS A PROGRAM TO GRAB THE ADDRESS SPACE OF A RUNNING FRAME.
	YOU SHOULD HAVE RC AND SY LICENSE WHEN RUNNING IT.  IN ADDITION
	YOU SHOULD HAVE WC TURNED ON IF YOU INTEND TO "HALT" THE
	SUBJECT FRAME.

IT WANTS A JOB NUMBER FOR THE FRAME YOU WANT TO "PHOTOGRAPH",
	AND A FILE NAME TO DEVELOP THE PICTURE ON.

THE RESULT FILE IS "HOLEY", WITH FILE PAGE N CONTAINING 
	WHAT FRAME PAGE N-1 HAD (INCLUDING THE POSSIBILITY OF A HOLE). 
*** EXCEPTION: FILE PAGE 1 ALWAYS EXISTS, SO THE ACS HAVE A PLACE TO GO

WARNING: THE VALUES MAY NOT BE ENTIRELY CONSISTENT, SINCE IT TAKES TIME
	TO COPY A PROGRAM, AND THE PROGRAM MAY BE MADLY MANGLING ITS 
	ADDRESS SPACE IN THE MEANTIME.  IF THE PROGRAM IS DEAD, THIS 
	WILL OBVIOUSLY NOT BE A PROBLEM.

PRAISES AND THANKSGIVINGS SHOULD BE SENT TO (SDANIELS:930),
COMPLAINTS AND BRICKS CAN BE THROWN AT YOURSELF.
	-SCOTT

PAGE 1-1			CLRALC.DOC     THU 05-JUL-84 9:56

CLRALC IS A PROGRAM THAT CORRECTS A SITUATION WHICH OCCURS AFTER
AN ALL FILES RESTORE IN WHICH DSKCLN CANNOT ALLOCATE ENOUGH CORE
TO CLEAR THE "ALLOCATION HAS CHANGED" BIT (RIPALC) FOR ALL THE NEWLY RESTORED
FILES.

THE NEW "FAST" DSKCLN (INTRODUCED IN P034/E) DEPENDS ON A BIT CALLED
RIPALC. WHEN THE ALLOCATION CHANGES FOR A FILE, THIS BIT IS SET.
THE BIT IS CLEARED 1)BY DSKCLN IN FAST AND FULL MODES, AND 
2) EVERY TIME A FILE IS LOOKED UP AND ALL MONITOR BUFFERS THAT
THE FILE USED TO CHANGE ITS ALLOCATION ARE KNOWN TO HAVE BEEN WRITTEN
OUT.

WHEN A FILE STRUCTURE IS REFRESHED AND ITS FILES ARE RESTORED FROM
TAPE, THE FILES ARE ENTERED, THEREBY HAVING THEIR ALLOCATION CHANGED.
HOWEVER, MOST OF THEM ARE NOT LOOKED UP AGAIN. THE RESULT IS THAT
ALMOST ALL FILES ON THE SYSTEM HAVE THE RIPALC BIT SET. IF THERE
ARE ENOUGH FILES ON THE FILE STRUCTURE, DSKCLN MAY NOT HAVE ENOUGH
FREE STORAGE IN WHICH TO REMEMBER ALL THESE FILES (DSKCLN CANNOT
TURN THE BITS OFF UNTIL ALL ITS PROCESSING IS COMPLETE).
THEREFORE, CLRALC IS USED TO LOOK THE FILES UP AFTER THE RESTORE
TO CLEAR THE RIPALC BITS.

THE PROCEDURES FOR AN ALL FILES RESTORE SHOULD BE MODIFIED AS FOLLOWS:

CLRALC SHOULD BE RUN IMMEDIATELY AFTER COMPLETION OF THE RESTORE.
IF THE SYSTEM CRASHES BEFORE THE RESTORE IS COMPLETE, AN ATTEMPT SHOULD
BE MADE TO ALLOW DSKCLN TO RUN AS USUAL. IF DSKCLN FAILS TO COMPLETE
(GETS AN ILL MEM REF OR COMPLAINS ABOUT BEING OUT OF CORE)
BRING THE SYSTEM UP MANUALLY AND RUN CLRALC. THEN BRING THE SYSTEM BACK
DOWN AND BRING IT UP SUCH THAT THE SYSTEM RUNS FULL DSKCLN.
FOR EXAMPLE:

*START ALL FILES RESTORE.

*SYSTEM CRASHES.

*BRING SYSTEM BACK UP, DSKCLN FAILS TO COMPLETE (GETS ILL MEM REF MESSAGE)
 MODE WAS FULL.


*OPERATOR BRINGS SYSTEM DOWN, BRINGS IT UP MANUALLY. LOGS IN AND
 RUNS CLRALC ACCORDING TO INSTRUCTIONS.

*OPERATOR BRINGS SYSTEM DOWN. BRINGS SYSTEM BACK UP, SPECIFYING
 FULL DSKCLN

*OPERATOR CONTINUES ALL FILES RESTORE.

IF DSKCLN STILL FAILS TO COMPLETE AFTER RUNNING CLRALC, CALL SOMEONE
IN THE OPERATING SYSTEMS GROUP.

THE TYPICAL SEQUENCE OF EVENTS IF THERE IS NO CRASH DURING FILE RESTORE
IS AS FOLLOWS:

*FILE STRUCTURE REFRESHED

*ALL TAPES RESTORED

PAGE 1-2			CLRALC.DOC     THU 05-JUL-84 9:56

*CLRALC IS RUN

INSTRUCTIONS FOR RUNNING CLRALC
-------------------------------

SET RF LICENSE.

RUN CLRALC. IT ASKS "FIX?" TYPE IN A Y. IT WILL START PROCESSING
IMMEDITALEY (NO CARRIAGE RETURN IS NEEDED).

WHEN IT IS DONE, IT WILL EXIT. A FILE CALLED CLRALC.DAT WILL BE
WRITTEN OUT WHICH GIVES A SUMMARY OF HOW MANY FILES WITH RIPALC
WERE FOUND OUT OF THE TOTAL NUMBER, FOR EACH DIRECTORY AND FOR THE
ENTIRE FILE STRUCTURE.
PAGE 1-1			EDIT10.DOC     THU 05-JUL-84 9:56

00100	THIS FILE DESCRIBES THE CALLING CONVENTIONS FOR EDIT10.
00200	THERE ARE THREE WAYS TO CALL EDIT10 FROM OTHER PROGRAMS.
00300	  1) PLACE DATA IN THE AC'S BEFORE DOING THE RUN UUO.
00400	  2) PLACE COMMANDS IN TMPCOR:EDT.
00500	  3) PLACE COMMANDS IN DSK:NNNEDT.TMP.
00600	THE COMMANDS MENTIONED IN 2) AND 3) ARE IDENTICAL AND
00700	WILL BE DESCRIBED BELOW, THE AC CONVENTION IS DESCRIBED
00800	ON THE LAST PAGE.
PAGE 2-1			EDIT10.DOC     THU 05-JUL-84 9:56

00100	TMPCOR:EDT OR DSK:NNNEDT.TMP CALLING CONVENTIONS:
00200	
00300	S<FILE>[.<EXT>][[<GAN>,<UUN>]]<CRLF>
00400	<ANY EDIT10 COMMAND><CRLF>
00500	
00600	IF THE FILE DOES NOT EXIST AND IS TO BE CREATED, PLACE A RIGHT-
00700	CURLY-BRACE "" BETWEEN THE FILE NAME AND THE <CRLF>.
00800	
00900	EDIT10 SHOULD THEN BE RUN AT START+1
PAGE 3-1			EDIT10.DOC     THU 05-JUL-84 9:56

00100	AC CALLING CONVENTIONS:
00200	
00300	AC 11:	<GAN>,,<UUN>		; IN BINARY
00400	AC 12:  0,,0			; IN BINARY
00500	AC 13:  <EXTENSION>,,0		; IN SIXBIT
00600	AC 14:  <FILE NAME>		; IN SIXBIT
00700	AC 15:  <LINE NUMBER>		; IN ASCII
00800	AC 16:  <PAGE NUMBER>		; IN BINARY
00900	AC 17:  0,,525252		; IN BINARY
01000	
01100	(DON'T ASK WHY - IT JUST IS!)
01200	
01300	EDIT10 SHOULD THEN BE RUN AT START+1
PAGE 1-1			F3MAN.DOC     THU 05-JUL-84 9:56


    23-MAY-84                                               PAGE 1


                           TYMCOM-X ON THE F3


    MOST PROCEDURES FOR BACKUP ARE THE SAME AS FOR TYMCOM-X ON A KI
    OR KL.  MOST OF THE STANDARD UTILITIES FOR TYMCOM-X PERFORM AS
    EXPECTED.

    THE RESTART PROCEDURES ARE DIFFERENT, AND INVOLVE SETTING AND
    TOGGLING HARDWARE SWITCHES ON THE MACHINE ITSELF.  (SEE PAGES
    2-4)

    THE BASE FOR AN F3 IS A MICRONODE PDP 11/03, SIMILAR TO THE SET
    UP FOR A 2020.  HOWEVER THE F3 WILL NOT CURRENTLY RESYNCH WITH
    ITS BASE, AND THEREFORE IF THE BASE CRASHES, IS RELOADED, OR IN
    SOME OTHER WAY DROPS THE CONNECTION, THE F3 MUST BE RELOADED
    WITH A WARM RESTART.  IN THE EVENT THAT NEW CODE IS TO BE LOADED
    INTO THE BASE, THE F3 SHOULD BE BROUGHT DOWN GRACEFULLY USING
    TAKEIT, AND THEN BE BROUGHT UP AGAIN AFTER THE RELOAD.

PAGE 2-1			F3MAN.DOC     THU 05-JUL-84 9:56

                                                          PAGE 2

                      F3 BOOTSTRAP PROCEDURES




    1.0  HOW TO BOOT IF MONITOR WAS RUNNING

         1.  SET ALL SWITCHES TO DOWN POSITION EXCEPT FOR MI AND
             MEM PAR STOP.

         2.  SWITCH CONSOLE STOP UP AND THEN DOWN.   THIS  STOPS
             THE MACHINE.

         3.  PRESS THE MOMENTARY CONSOLE RESET UP.  THIS  RESETS
             THE  MACHINE.   THE PROG HALT LIGHT SHOULD BE ON AT
             THIS POINT.

         4.  SET THE ADDRESS SWITCHES TO 147 OCTAL.

         5.  PRESS CONSOLE START UP.  THIS SHOULD  INITIATE  THE
             BOOTSTRAP  PROCEDURE.   THE MESSAGE "BOOTS:" SHOULD
             APPEAR ON THE CONSOLE, AND EVENTUALLY
             "LOADING (SYS)SYSTEM.SAV"  SHOULD APPEAR.  THE SYSTEM 
             SHOULD COME UP WITHIN 5-15 MINUTES.



    IF THE SYSTEM DOES NOT SUCCESSFULLY  BOOT  USING  THE  ABOVE
    PROCEDURE,  USE  THE  PROCEDURE FOR LOADING THE MONITOR FROM
    TAPE.  (SEE ALSO NOTES ON PAGE 5)



    2.0  LOADING THE MONITOR FROM TAPE

         1.  MOUNT THE CURRENT MONITOR  BOOTSTRAP  TAPE  (MARKED
             USE  ME)  ON  THE  TAPE  DRIVE,  SET THE DENSITY TO
             1600BPI.

         2.  MAKE SURE ALL SWITCHES ARE IN  THE  DOWN  POSITION,
             INCLUDING MI AND MEM PAR STOP.

         3.  SET 5000 OCTAL IN THE ADDRESS SWITCHES.

         4.  SET THE MICRO PROCESSOR STOP SWITCH UP.

         5.  SET THE MICRO PROCESSOR MI PC FROM SW SWITCH UP.

         6.  PRESS THE MOMENTARY MICRO PROCESSOR CLR SWITCH UP.

         7.  PRESS THE MOMENTARY MICRO PROCESSOR CONT SWITCH UP.
PAGE 3-1			F3MAN.DOC     THU 05-JUL-84 9:56

                                                          PAGE 3


         8.  SET THE MICRO PROCESSOR MI  PC  FROM  SW  AND  STOP
             SWITCHES BACK DOWN.

         9.  SET THE MICRO PROCESSOR MI PARITY STOP SWITCH UP.

        10.  PRESS THE MOMENTARY MICRO PROCESSOR CONT SWITCH UP.
             THIS  SHOULD  START  THE TAPE READING IN.  IF IT IS
             SUCCESSFUL, ALL THE LIGHTS  UNDER  DATA  SHOULD  BE
             OFF.  THE TAPE TAKES ABOUT 5-10 SECONDS TO READ IN.

        11.  WHEN THE TAPE STOPS READING IN, CLEAR  THE  ADDRESS
             SWITCHES AND SET 140 OCTAL IN THEM.

        12.  PRESS THE MOMENTARY CONSOLE START SWITCH UP.

        13.  PRESS THE MOMENTARY CONSOLE RESET SWITCH UP.

        14.  SET THE MICRO PROCESSOR MEM PARITY STOP SWITCH UP.

        15.  PRESS  THE  MOMENTARY  CONSOLE  START  SWITCH   UP.
             OUTPUT  SHOULD  NOW  APPEAR ON THE CONSOLE TERMINAL
             WHICH INCLUDES  THE  PHRASE  MONITOR  JUST  LOADED.
             AFTER ABOUT 5-15 MINUTES, THE SYSTEM SHOULD BE BACK
             ON THE AIR.  IF THE MONITOR ASKS FOR  DSKCLN  TYPE,
             TYPE  IN  "FULL"  UNLESS  YOU KNOW THAT IT IS OK TO
             GIVE ANOTHER ANSWER.




    3.0  MICROCODE LOAD PROCEDURE

         1.  MOUNT CURRENT MICROCODE TAPE ON TAPE DRIVE (THE ONE
             MARKED "USE ME")

         2.  SET  DENSITY  SWITCH  TO   DENSITY   INDICATED   ON
             MICROCODE TAPE LABEL.

         3.  MAKE SURE ALL SWITCHES ARE IN  THE  DOWN  POSITION,
             INCLUDING MICRO PROCESSOR MI AND MEM PAR STOP.

         4.  SET 10 OCTAL IN THE ADDRESS SWITCHES

         5.  SET THE MICRO PROCESSOR STOP SWITCH UP.

         6.  SET THE MICRO PROCESSOR MI PC FROM SW SWITCH UP.

         7.  PRESS THE MOMENTARY MICRO PROCESSOR CLR SWITCH UP.

         8.  PRESS THE MOMENTARY MICRO PROCESSOR CONT SWITCH UP.

         9.  SET THE MICRO PROCESSOR MI  PC  FROM  SW  AND  STOP
             SWITCHES BACK DOWN.
PAGE 4-1			F3MAN.DOC     THU 05-JUL-84 9:56

                                                           PAGE 4


        10.  PRESS THE MOMENTARY MICRO PROCESSOR CONT SWITCH UP.
             THIS  SHOULD  START  THE TAPE READING IN.  IF IT IS
             SUCCESSFUL, ALL THE LIGHTS  UNDER  DATA  SHOULD  BE
             OFF.  THE TAPE TAKES ABOUT A SECOND TO READ IN.

        11.  SET THE MICRO PROCESSOR MI PARITY STOP SWITCH UP.

        12.  REMOVE  THE MICROCODE  TAPE AND  MOUNT THE  CURRENT
             MONITOR TAPE.

        13.  PRESS THE  CONSOLE CONTINUE SWITCH UP.  THIS SHOULD
             START  THE TAPE  READING IN.  THE TAPE TAKES  ABOUT
             5 - 10 SECONDS TO READ IN.

        14.  WHEN THE TAPE STOPS READING IN, CLEAR  THE  ADDRESS
             SWITCHES AND SET 140 OCTAL IN THEM.

        15.  PRESS THE MOMENTARY CONSOLE START SWITCH UP.

        16.  SET THE MICRO PROCESSOR MEM PARITY STOP AND MICRO
             PROCESSOR MI PARITY STOP SWITCHES UP.

        17.  PRESS  THE  MOMENTARY  CONSOLE  START  SWITCH   UP.
             OUTPUT  SHOULD  NOW  APPEAR ON THE CONSOLE TERMINAL
             WHICH INCLUDES  THE  PHRASE  MONITOR  JUST  LOADED.
             AFTER ABOUT 5-15 MINUTES, THE SYSTEM SHOULD BE BACK
             ON THE AIR.  IF THE MONITOR ASKS FOR  DSKCLN  TYPE,
             TYPE  IN  "FULL"  UNLESS  YOU KNOW THAT IT IS OK TO
             GIVE ANOTHER ANSWER.



    4.0  POWER UP PROCEDURE FOR F3

         1.  TURN OFF MAIN POWER TO DISKS.  SWITCHES ARE LOCATED
             IN  THE  BACK  OF THE CDC DISK UNITS, ON LOWER LEFT
             HAND SIDE.

         2.  TURN OFF POWER TO THE F3  PROCESSOR.   THE  CORRECT
             POWER  SWITCH  IS  THE SILVER COLORED TOGGLE SWITCH
             LOCATED ON THE POWER SUPPLY PANEL OF  THE  F3,  AND
             NOT THE BLACK CIRCUIT BREAKER WHICH IS LOCATED NEAR
             THE BOTTOM OF THE MACHINE.

         3.  POWER THE F3 BACK UP USING THE SILVER TOGGLE SWITCH

         4.  POWER  UP  THE  DISKS  ONE  AT  A  TIME.   THIS  IS
             NECESSARY  BECAUSE ALL THREE DISKS BEING POWERED UP
             AT ONCE WILL CAUSE AN OVERLOAD AND TRIP THE CIRCUIT
             BREAKER.   AFTER  POWERING  UP A DISK, WAIT FOR ITS
             READY LIGHT TO GO ON BEFORE POWERING  UP  THE  NEXT
             ONE.

         5.  LOAD  MICROCODE  AND  MONITOR  (SEE  MICROCODE  AND
             MONITOR LOAD PROCEDURES)
PAGE 4-2			F3MAN.DOC     THU 05-JUL-84 9:56

PAGE 5-1			F3MAN.DOC     THU 05-JUL-84 9:56

                                                              PAGE 5

    NOTES ON RELOADING:


    1.  SOMETIMES THE F3 TAKES SEVERAL TRIES TO FIND SYSTEM.SAV.
        THEREFORE IT IS WORTHWHILE IF BOOTS COMES BACK WITH AN ERROR
        SUCH AS:

        READ ERROR OR EOF

        OR

        NO FILE

        AND RETURN TO 

        BOOTS:

        TO TRY JUST A CARRIAGE RETURN A FEW TIMES.

    2.  THE F3 CANNOT PRESENTLY RESYNCH WITH ITS BASE.  IF THE BASE
        SHOULD CRASH, OR SOMEHOW STOP "TALKING" TO THE F3, THE F3
        SHOULD BE RECYCLED.  THIS IS NORMALLY ACCOMPLISHED WITH A
        147 RESTART.  (SEE PAGE 2)

    3.  IF THE F3 DOES NOT GET THE DATE AND TIME FROM THE NETWORK 
        WITHIN THE SOFTWARE TIME LIMIT SET, A MESSAGE WILL APPEAR ON
        THE CONSOLE AFTER THE INITIALIZATION COMPLETE MESSAGE:

            INITIALIZATION COMPLETED
        ? DATE AND TIME NOT SET

        AN OPERATOR SHOULD LOG IN, SET THE DATE AND TIME IN THE
        FORMATS GIVEN, AND "UNSHUT" THE SYSTEM BY SETTING THE
        SCHEDULE TO 0.  THIS IS DONE BY SETTING OP LICENSE, AND THEN
        GIVING THE COMMAND

        SCH 0

    4.  IF YOU WANT TO DO ANYTHING DIFFERENT IN BRINGING UP AN F3
        THAT WOULD REQUIRE YOU TO TALK TO ONCE, YOU MUST SET SENSE
        SWITCH 4 BEFORE BRINGING UP THE MACHINE.  THIS IS
        ACCOMPLISHED BY MANUALLY SETTING THE SWITCH ON THE FRONT OF
        THE MACHINE.

    5.  IN THE EVENT OF A POWER FAILURE, THE BASE MUST BE LOADED
        FIRST, THEN THE F3 BROUGHT UP FROM TAPE STARTING WITH
        MICROCODE.

PAGE 6-1			F3MAN.DOC     THU 05-JUL-84 9:56

                                                              PAGE 6

NODE 421 LOADING:

    421 IS THE BASE FOR 897 (BLDG A, BUBB ROAD FOONLY)

    IF YOU NOTICE THE NODE IS DOWN OR HALTED, FIRST CHECK THE
    CONSOLE FOR 421 TO FIND OUT WHICH CONDITION IT IS IN.  IF IT IS
    HALTED, IT MAY BE PROCEEDED, OR RESTARTED WITHOUT RELOADING (ALL
    COMMANDS ARE UPPER CASE ONLY):

    @P                                             ; "P" FOR PROCEED
            OR
    @1000G                                         ; "G" FOR GO

    IF THIS DOES NOT WORK, THEN SOMETHING MUST BE WRONG WITH THE
    CURRENT IMAGE OF THE NODE IN MEMORY, AND IT MUST BE RELOADED.

    ------------

    421 CAN ONLY BE RELOADED FROM THE NETWORK.  HIT THE RESTART
    BUTTON ON 421.  THE HALT SWITCH SHOULD BE UP.  (RUN LIGHT SHOULD
    BE ON AFTER RESTART BUTTON IS TOGGLED; TWO LIGHTS SHOULD BE ON.)

    NOTE:  ONLY A FEW USERNAMES ARE AUTHORIZED BY LOADII TO LOAD
    421.  NETWORK CONTROL (117-5195) CAN RELOAD.  YOU WILL HAVE TO
    GIVE THEM ALL THE PERTINENT INFORMATION AS THEY GET RATHER
    CONFUSED BY MICRONODES.

    LOGIN TO :57 OR :39  (THIS CANNOT BE AN AUX CIRCUIT!)

    SET LICENSE

    .GF CURR11              ;CURRENT FILE MAY BE NEW11
    .R LOADII               ;THIS WILL ONLY WORK FOR AUTHORIZED USERS
    
    NODE LOADER VERSION- 2.11
    ENTER FUNCTION:L
    ENTER NEIGHBOR NODE:2767
    ENTER KERNEL HOST ON NODE 2243: 2439
    ENTER LINE NUMBER:15
    ENTER OBJECT FILE NAME:ND421.BND
    <PROGRAM BEGINS LOADING SEQUENCE>
    .

    IT IS NORMAL TO HAVE A GREAT MANY LOST PACKETS REPORTED BY
    LOADII.

    IF YOU GET A MESSAGE THAT THE SYSTEM IS UNAVAILABLE, AND WILL
    RETRY IN 30 SECONDS, JUST BE PATIENT; HOWEVER, IF YOU GET SYSTEM
    UNAVAILABLE LOGIN ERROR, RESPONSE:000000000004 SOMEONE AT TYMNET
    HAS PROBABLY SHUT DOWN ALL ACCESS AND PASS THROUGHS TO NODE
    2767,AND YOU WILL HAVE TO WAIT UNTIL IT IS BACK UP AND
    AVAILABLE.

    ------------

    ORDER TO FOLLOW WHEN THERE IS A POWER HIT:
PAGE 6-2			F3MAN.DOC     THU 05-JUL-84 9:56


    1.  RELOAD 421 FROM 39 OR 57

    2.  RELOAD 897 WITH FULL DSKCLN (SET SENSE SWITCH 4 BEFORE
        LOADING MONITOR, COMMAND FULL TO ONCE)

PAGE 1-1			CSCAN.DOC     THU 05-JUL-84 9:56

		 CSCAN - PROGRAM TO ANALYZE SYSTEM USE


CSCAN READS INFORMATION IN THE STREAM ACCOUNTING AND PRODUCES A REPORT
FOR ALL OR SELECTED USER IN GAN 7676.  STREAM ACCOUNTING .SAT FILES ARE
WRITTEN INTO (UN1) AND THEN KEPT IN (BILLING10) FOR THE REST OF THE
MONTH.  AT THE END OF THE MONTH THE FILES ARE DELETED.  IF CURRENT
INFORMATION IS NEEDED CSCAN WILL READ THE CORRECT FILES, BUT FOR STREAM
ACCOUNTING DATA FOR PREVIOUS MONTHS THE APPROPRIATE FILES WILL HAVE TO
BE RESTORED TO YOUR DIRECTORY.  IT IS USUALLY WISE TO RESTORE BOTH THE
DATE NEEDED AND THE FOLLOWING DAY, SINCE THE SESSION MAY RUN OVER
MIDNIGHT GMT TIME.

THE FILES HAVE DATE NAMES IN THE FORMAT MMDDYY.SAT AS IN 122582.SAT FOR
CHRISTMAS DAY, L982.  SINCE THE ALL FILES OR INCREMENTALS MAY BE PULLING
FILES FROM EITHER STREAM ACCOUNTING DIRECTORY, THE BATCH REQUEST SHOULD
SAY THAT THE FILES COULD BE EITHER IN UN1 OR BILLING10.

CSCAN WILL READ FILES OFF THE DIRECTORY FROM WHICH IT IS RUN AS WELL AS
THE ACCOUNTING DIRECTORIES.

WHEN THE FILES ARE RESTORED, CSCAN CAN BE RUN.  TIMES ON BILLING RECORDS
ARE IN GMT; CSCAN WILL EITHER CONVERT TIMES TO YOUR T(5^