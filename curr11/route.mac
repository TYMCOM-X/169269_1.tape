	.TITLE	ROUTE   NETWORK ROUTEING MAPS
	.SBTTL	ROUTE  - NEXILIS/JRG

	XLPAR				;DON'T LIST PARAMETER FILE

	PURE

	.LIST	MEB

	.DSABL	SCM

;DEFINE MACROS USED IN THE CONFIGURATION FILE (NODNAM.CFG)
;  THIS PASS DEFINES SYMBOLS FOR EACH DIRECTLY NODE OR HOST

	.MACRO	DEFINE	SYM,VAL
	.ENDM

	.MACRO	TRMDFT	XXX
	.ENDM

	.MACRO	CHRDFT	X,Y
	.ENDM

	.MACRO	NAME  .XXX
	DEF	.XXX,-1
	.WR50	1,.XXX,NAM$1
	.WR50	4,.XXX,NAM$2
	.ENDM

	.MACRO	TYMSAT
	.ENDM

	.MACRO	LINK  NAM,PRV,AUX,NN,MS,X,XXX
	DEF	NAM,.LNK	;DEFAULT TO NODE-TO-NODE LINK
$$$LNK=	0
.IF DIF <A>,<X>
  .IF DIF <B>,<X>
    .IF DIF <C>,<X>
	;TYPE D, E, F, G, OR H
	DEF	NAM,.LNK+100000	;THIS IS A LINK TO A HOST OR A GATEWAY
	$$$LNK=	1
    .ENDC
  .ENDC
.ENDC
.IF NE $$$LNK
  .IF DIF <H>,<X>
    .IF DIF <E>,<X>
      .IF DIF <G>,<X>
	DEF	NAM,.LNK+140000 ;THIS IS A LINK TO A HOST
      .ENDC
    .ENDC
  .ENDC
.ENDC
.LNK=!.LNK+2
	.ENDM

	.MACRO	LNKL  X1,X2,X3,X4,X5,X6
	.ENDM

	.MACRO	LNKH  TYM,NEX,HOSPRT
	.ENDM

	.MACRO	DEF  NN,VAL
	.IRPC	MM,<NN>
.IF LE ''MM-100			;IF NAME IS NUMERIC
  $'NN=!VAL
.IFF				;IF NAME IS SYMBOLIC
  NN=!VAL
.ENDC
	.MEXIT
	.ENDM
	.ENDM

.LNK=!0

	.MACRO	DEV  DV,PRV,XXX
	.ENDM

	.MACRO	SOC  SN,TYPE,X1,X2,X3,X4,X5,X6
	.ENDM

	.MACRO	HCL  A,LIST
	.ENDM

	.MACRO	DHOST  NAME
	.ENDM

	.MACRO	LINX  FRST,NUM,TYPE,XXX
	.ENDM

.MACRO	LINE  LN,AF,OBR,IBR,CODE,CMX,TYPE,PROFIL,ASK,SNM,CMD,ACD,ROB,KIND,HCL,PRIV
	.ENDM

        .MACRO  PVC     STRING,P1,P2
        .ENDM

	.MACRO	MOD	STRING
	.ENDM

;INVOKE THE CONFIGURATION DEFINATION TO DEFINE SYMBOLS FOR DIRECTLY CONNECTED
;  NODES AND HOSTS

	CONFIG

;DEFINE MACROS USED IN THE GLOBAL NETWORK DEFINIATION (MAP.MAC)

	.MACRO	NODE  .NAME
	.IRPC	MM,<.NAME>
.IF LT ''MM-100
	NODEX	$'.NAME
.IFF
	NODEX	.NAME
.ENDC
	.MEXIT
	.ENDM
	.ENDM

	.MACRO	NODEX  .NAME
.IF NDF .NAME
  .SW=!0
.IFF
  .IF EQ .NAME+1
    .SW=!1
  .IFF
    .SW=!0
  .ENDC
.ENDC
	.ENDM

;GENERATE FIRST HALF OF THE NAME TABLES

	.MACRO	NPATH  .NOD,.PRI,.SEC
.IF NE .SW
	.WR50  1,.NOD		;GENERATE FIRST HALF OF NAME TABLE
.ENDC
	.ENDM

	.MACRO	HPATH	.HST,.PRI,.SEC
	.ENDM

NODN$1::.WORD	NAM$1
	ROUTE
NODN$X==!.-NODN$1

	.MACRO	NPATH  .NOD,.PRI,.SEC
	.ENDM

	.MACRO	HPATH  .HST,.PRI,.SEC
.IF NE .SW
	.WR50  1,.HST
.ENDC
	.ENDM

HSTN$1::ROUTE
HSTN$X==!.-HSTN$1
HSOF$X==!HSTN$1-NODN$1

;GENERATE SECOND HALF OF THE NAME TABLE

	.MACRO	NPATH	.NOD,.PRI,.SEC
.IF NE .SW
  .WR50  4,.NOD
.ENDC
	.ENDM

	.MACRO	HPATH	.HST,.PRI,.SEC
	.ENDM

NODN$2::.WORD	NAM$2
	ROUTE

	.MACRO	NPATH	.NOD,.PRI,.SEC
	.ENDM

	.MACRO	HPATH	.HST,.PRI,.SEC
.IF NE .SW
	.WR50  4,.HST
.ENDC
	.ENDM

HSTN$2::ROUTE

;GENERATE TABLE OF NODE AND HOST DX'S FOR EACH PATH

;DEFINE MACRO TO CHECK THAT A NODE SPECIFIED IN A NPATH OR HPATH MACRO IS
;  REALLY A NODE AND NOT A HOST

	.MACRO	CHK  .NAM
.IF NB .NAM
	.IRPC	NN,<.NAM>
    .IF LE ''NN-100
	CHKX	$'.NAM,.NAM
    .IFF
	CHKX	.NAM,.NAM
    .ENDC
	.MEXIT
	.ENDM
.ENDC
	.ENDM

	.MACRO	CHKX  .NAM,.NAX
.IF NDF .NAM
	.ERROR	0;NODE .NAX NOT SPECIFIED IN LINK MACRO
.IFF
  .IF LT .NAM
    .IF EQ <.NAM&140000>
	.ERROR	0;HOST .NAX USED AS NODE IN NPATH MACRO
    .IFF
	.ERROR	0;GATEWAY .NAX USED INSTEAD OF LINK IN NPATH MACRO
    .ENDC
  .ENDC
.ENDC
	.ENDM

;THIS TABLE GIVES PRIMARY AND SECONDARY PATHS TO USE TO REACH A NODE OR
;  HOST.  EACH ENTRY IS ONE WORD AND IS INDEXED THE SAME AS THE NAME TABLES.
;  THE LOW ORDER BYTE OF EACH ENTRY GIVES THE PRIMARY PATH AND THE HIGH ORDER
;  BYTE GIVES THE SECONDARY PATH.  THE PATH IS SPECIFIED AS FOLLOWS:
;	.GT. 0 = DEVICE INDEX FOR LINK OR HOST INTERFACE
;	.EQ. 0 = NO PATH DEFINED
;	.LT. 0 = CONNECTION IS TO THIS NODE (ALWAYS -1)

;DEFINE MACROS FOR HANDLING THE PRIMARY AND SECONDARY PATH BYTES

	.MACRO	PRIX  .NOD,.MSG,.NOY
	.IRPC	NN,<.NOD>
.IF LT ''NN-100
	PRIXX	$'.NOD,.NOD,.MSG,.NOY
.IFF
	PRIXX	.NOD,.NOD,.MSG,.NOY
.ENDC
	.MEXIT
	.ENDM
	.ENDM

	.MACRO	PRIXX  .NOD,.NOX,.MSG,.NOY
.IF NDF .NOD
	.ERROR	0;NO LINK DEFINED FOR PRIMARY PATH TO .MSG .NOY VIA NODE .NOX
	.BYTE	0
.IFF
	.BYTE	<.NOD&037777>+LKOFS$#
.ENDC
	.ENDM

	.MACRO	SECX  .NOD,.MSG,.NOY
	.IRPC	NN,<.NOD>
.IF LT ''NN-100
	SECXX	$'.NOD,.NOD,.MSG,.NOY
.IFF
	SECXX	.NOD,.NOD,.MSG,.NOY
.ENDC
	.MEXIT
	.ENDM
	.ENDM

	.MACRO	SECXX  .NOD,.NOX,.MSG,.NOY
.IF NDF .NOD
	.ERROR	0;NO LINK DEFINED FOR SECONDARY PATH TO .MSG .NOY VIA NODE .NOX
	.BYTE	0
.IFF
	.BYTE	<.NOD&037777>+LKOFS$#
.ENDC
	.ENDM

	.MACRO	HBYTE  .HST
	.IRPC	NN,<.HST>
.IF LT ''NN-100
	HBYTEX	$'.HST,.HST
.IFF
	HBYTEX	.HST,.HST
.ENDC
	.MEXIT
	.ENDM
	.ENDM

	.MACRO	HBYTEX  .HST,.HSX
.IF NDF .HST
	.ERROR	0;HOST .HSX NOT DEFINED IN LINK MACRO
	.BYTE	0
.IFF
	.BYTE	<<.HST>&037777>+LKOFS$#
.ENDC
	.ENDM

	.MACRO	CHKHST  .HST,.HSX
.IF DF .HST
  .IF GE .HST
	.ERROR	0;NODE .HSX SPECIFIED AS HOST IN HPATH MACRO
  .ENDC
.ENDC
	.ENDM

	.MACRO	NPATH  .NOD,.PRI,.SEC
.IF NE .SW
	CHK	.PRI
	CHK	.SEC
  .IF B .PRI
	.ERROR	0;NO PRIMARY PATH SPECIFIED TO NODE .NOD
	.BYTE	0
  .IFF
	PRIX	.PRI,NODE,.NOD
  .ENDC
  .IF B .SEC
	.BYTE	0
  .IFF
	SECX	.SEC,NODE,.NOD
  .ENDC
.ENDC
	.ENDM

	.MACRO	HPATH  .HST,.PRI,.SEC
	.ENDM

PTHPR$::.WORD	-1
	ROUTE

	.MACRO	NPATH  .NOD,.PRI,.SEC
	.ENDM

	.MACRO	HPATH  .HST,.PRI,.SEC
.IF NE .SW
	.IRPC	NN,<.HST>
  .IF LT ''NN-100
	CHKHST	$'.HST,.HST
  .IFF
	CHKHST	.HST,.HST
  .ENDC
	.MEXIT
	.ENDM
  .IF DIF <.PRI><*>
	CHK	.PRI
  .ENDC
  .IF DIF <.SEC><*>
	CHK	.SEC
  .ENDC
  .IF B .PRI
	.ERROR	0;NO PRIMARY PATH SPECIFIED TO HOST .HST
	.BYTE	0
  .IFF
    .IF IDN <.PRI><*>
	HBYTE	.HST
    .IFF
	PRIX	.PRI,HOST,.HST
    .ENDC
  .ENDC
  .IF B .SEC
	.BYTE	0
  .IFF
    .IF IDN <.SEC><*>
	HBYTE	.HST
    .IFF
	SECX	.SEC,HOST,.HST
    .ENDC
  .ENDC
.ENDC
	.ENDM

	.MACRO	CHKX  .NAM,.NAX
.IF NDF .NAM
	.ERROR	0;NODE .NAX NOT SPECIFIED IN LINK MACRO
.IFF
  .IF EQ <<.NAM&0140000>-0140000>
	.ERROR	0;HOST .NAX USED AS NODE IN HPATH MACRO
  .ENDC
.ENDC
	.ENDM

	ROUTE
PTHSC$==PTHPR$+1

	.EVEN				;JUST TO BE SAFE!!
.PASS2=!1
	.END
